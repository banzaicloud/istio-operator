// Copyright 2021 Cisco Systems, Inc. and/or its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "gogoproto/gogo.proto";
import "google/api/field_behavior.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/api/apps/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "google/protobuf/descriptor.proto";

package istio_operator.v2.api.v1alpha1;

option go_package = "github.com/banzaicloud/istio-operator/v2/api/v1alpha1";

// mark whether the field is IntOrString type
// available values:
// "true": single field
// "map": map of fields
extend google.protobuf.FieldOptions {
	optional string intorstring = 800815;
}

// Generic k8s resource metadata
message K8sObjectMeta {
  // Map of string keys and values that can be used to organize and categorize
  // (scope and select) objects. May match selectors of replication controllers
  // and services.
  // More info: http://kubernetes.io/docs/user-guide/labels
  // +optional
  map<string, string> labels = 11;

  // Annotations is an unstructured key value map stored with a resource that may be
  // set by external tools to store and retrieve arbitrary metadata. They are not
  // queryable and should be preserved when modifying objects.
  // More info: http://kubernetes.io/docs/user-guide/annotations
  // +optional
  map<string, string> annotations = 12;
}

message ContainerImageConfiguration {
    // Default hub for container images.
    string hub = 1;

    // Default tag for container images.
    string tag = 2;

    // Image pull policy.
    // One of Always, Never, IfNotPresent.
    // Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
    // +optional
    // +kubebuilder:validation:Enum=Always;Never;IfNotPresent
    string imagePullPolicy = 3;

    // ImagePullSecrets is an optional list of references to secrets to use for pulling any of the images.
    // +optional
    repeated k8s.io.api.core.v1.LocalObjectReference imagePullSecrets = 4;
}

message BaseKubernetesContainerConfiguration {
    // Standard Kubernetes container image configuration
    string image = 1;

    // If present will be appended to the environment variables of the container
    repeated k8s.io.api.core.v1.EnvVar env = 2 [(gogoproto.nullable) = false];

    // Standard Kubernetes resource configuration, memory and CPU resource requirements
    ResourceRequirements resources = 3;

    // Standard Kubernetes security context configuration
    k8s.io.api.core.v1.SecurityContext securityContext = 4;

    // Pod volumes to mount into the container's filesystem.
    // Cannot be updated.
    // +optional
    // +patchMergeKey=mountPath
    // +patchStrategy=merge
    repeated k8s.io.api.core.v1.VolumeMount volumeMounts = 5 [(gogoproto.nullable) = false];
}

message BaseKubernetesResourceConfig {
    // Generic k8s resource metadata
    K8sObjectMeta metadata = 1;

    // Standard Kubernetes container image configuration
    string image = 2;

    // If present will be appended to the environment variables of the container
    repeated k8s.io.api.core.v1.EnvVar env = 3 [(gogoproto.nullable) = false];

    // Standard Kubernetes resource configuration, memory and CPU resource requirements
    ResourceRequirements resources = 4;

    // Standard Kubernetes node selector configuration
    map<string,string> nodeSelector = 5;

    // Standard Kubernetes affinity configuration
    k8s.io.api.core.v1.Affinity affinity = 6;

    // Standard Kubernetes security context configuration
    k8s.io.api.core.v1.SecurityContext securityContext = 7;

    // Image pull policy.
    // One of Always, Never, IfNotPresent.
    // Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
    // +optional
    string imagePullPolicy = 8;

    // ImagePullSecrets is an optional list of references to secrets to use for pulling any of the images.
    // +optional
    repeated k8s.io.api.core.v1.LocalObjectReference imagePullSecrets = 9;

    // If specified, indicates the pod's priority. "system-node-critical" and
    // "system-cluster-critical" are two special keywords which indicate the
    // highest priorities with the former being the highest priority. Any other
    // name must be defined by creating a PriorityClass object with that name.
    // If not specified, the pod priority will be default or zero if there is no
    // default.
    // +optional
    string priorityClassName = 10;

    // google.protobuf.Int32Value replicaCount = 1 [(gogoproto.wktpointer) = true];
    // If specified, the pod's tolerations.
    // +optional
    repeated k8s.io.api.core.v1.Toleration tolerations = 11 [(gogoproto.nullable) = false];

    // List of volumes that can be mounted by containers belonging to the pod.
    // More info: https://kubernetes.io/docs/concepts/storage/volumes
    // +optional
    // +patchMergeKey=name
    // +patchStrategy=merge,retainKeys
    repeated k8s.io.api.core.v1.Volume volumes = 12 [(gogoproto.nullable) = false];

    // Pod volumes to mount into the container's filesystem.
    // Cannot be updated.
    // +optional
    // +patchMergeKey=mountPath
    // +patchStrategy=merge
    repeated k8s.io.api.core.v1.VolumeMount volumeMounts = 13 [(gogoproto.nullable) = false];

    // Replica configuration
    Replicas replicas = 14;

    // Standard Kubernetes pod annotation and label configuration
    K8sObjectMeta podMetadata = 15;

    // PodDisruptionBudget configuration
    PodDisruptionBudget podDisruptionBudget = 16;

    // DeploymentStrategy configuration
    DeploymentStrategy deploymentStrategy = 17;

    // Standard Kubernetes pod security context configuration
    k8s.io.api.core.v1.PodSecurityContext podSecurityContext = 18;

    // Periodic probe of container liveness.
    // Container will be restarted if the probe fails.
    // Cannot be updated.
    // More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    // +optional
    k8s.io.api.core.v1.Probe livenessProbe = 19;

    // Periodic probe of container service readiness.
    // Container will be removed from service endpoints if the probe fails.
    // Cannot be updated.
    // More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    // +optional
    k8s.io.api.core.v1.Probe readinessProbe = 20;
}

message DeploymentStrategy {
    message RollingUpdateDeployment {
        IntOrString maxUnavailable = 1 [(intorstring) = "true"];
        IntOrString maxSurge = 2 [(intorstring) = "true"];
    }

    // Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
    // +optional
    string type = 1;

    // Rolling update config params. Present only if DeploymentStrategyType =
    // RollingUpdate.
    // +optional
    RollingUpdateDeployment rollingUpdate = 2;
}

// PodDisruptionBudget is a description of a PodDisruptionBudget
message PodDisruptionBudget {
    // An eviction is allowed if at least "minAvailable" pods selected by
    // "selector" will still be available after the eviction, i.e. even in the
    // absence of the evicted pod.  So for example you can prevent all voluntary
    // evictions by specifying "100%".
    // +optional
    IntOrString minAvailable = 1 [(intorstring) = "true"];

    // An eviction is allowed if at most "maxUnavailable" pods selected by
    // "selector" are unavailable after the eviction, i.e. even in absence of
    // the evicted pod. For example, one can prevent all voluntary evictions
    // by specifying 0. This is a mutually exclusive setting with "minAvailable".
    // +optional
    IntOrString maxUnavailable = 2 [(intorstring) = "true"];
}

// Service describes the attributes that a user creates on a service.
message Service {
    K8sObjectMeta metadata = 16;

    // The list of ports that are exposed by this service.
    // More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    // +patchMergeKey=port
    // +patchStrategy=merge
    // +listType=map
    // +listMapKey=port
    // +listMapKey=protocol
    // +kubebuilder:validation:MinItems=1
    repeated ServicePort ports = 1 [(google.api.field_behavior) = REQUIRED];

    // Route service traffic to pods with label keys and values matching this
    // selector. If empty or not present, the service is assumed to have an
    // external process managing its endpoints, which Kubernetes will not
    // modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
    // Ignored if type is ExternalName.
    // More info: https://kubernetes.io/docs/concepts/services-networking/service/
    // +optional
    map<string, string> selector = 2;

    // clusterIP is the IP address of the service and is usually assigned
    // randomly by the master. If an address is specified manually and is not in
    // use by others, it will be allocated to the service; otherwise, creation
    // of the service will fail. This field can not be changed through updates.
    // Valid values are "None", empty string (""), or a valid IP address. "None"
    // can be specified for headless services when proxying is not required.
    // Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if
    // type is ExternalName.
    // More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    // +optional
    string clusterIP = 3;

    // type determines how the Service is exposed. Defaults to ClusterIP. Valid
    // options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
    // "ExternalName" maps to the specified externalName.
    // "ClusterIP" allocates a cluster-internal IP address for load-balancing to
    // endpoints. Endpoints are determined by the selector or if that is not
    // specified, by manual construction of an Endpoints object. If clusterIP is
    // "None", no virtual IP is allocated and the endpoints are published as a
    // set of endpoints rather than a stable IP.
    // "NodePort" builds on ClusterIP and allocates a port on every node which
    // routes to the clusterIP.
    // "LoadBalancer" builds on NodePort and creates an
    // external load-balancer (if supported in the current cloud) which routes
    // to the clusterIP.
    // More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    // +optional
    // +kubebuilder:validation:Enum=ClusterIP;NodePort;LoadBalancer
    string type = 4 [(google.api.field_behavior) = REQUIRED];

    // externalIPs is a list of IP addresses for which nodes in the cluster
    // will also accept traffic for this service.  These IPs are not managed by
    // Kubernetes.  The user is responsible for ensuring that traffic arrives
    // at a node with this IP.  A common example is external load-balancers
    // that are not part of the Kubernetes system.
    // +optional
    repeated string externalIPs = 5;

    // Supports "ClientIP" and "None". Used to maintain session affinity.
    // Enable client IP based session affinity.
    // Must be ClientIP or None.
    // Defaults to None.
    // More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    // +optional
    string sessionAffinity = 7;

    // Only applies to Service Type: LoadBalancer
    // LoadBalancer will get created with the IP specified in this field.
    // This feature depends on whether the underlying cloud-provider supports specifying
    // the loadBalancerIP when a load balancer is created.
    // This field will be ignored if the cloud-provider does not support the feature.
    // +optional
    string loadBalancerIP = 8;

    // If specified and supported by the platform, this will restrict traffic through the cloud-provider
    // load-balancer will be restricted to the specified client IPs. This field will be ignored if the
    // cloud-provider does not support the feature."
    // More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
    // +optional
    repeated string loadBalancerSourceRanges = 9;

    // externalName is the external reference that kubedns or equivalent will
    // return as a CNAME record for this service. No proxying will be involved.
    // Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
    // and requires Type to be ExternalName.
    // +optional
    string externalName = 10;

    // externalTrafficPolicy denotes if this Service desires to route external
    // traffic to node-local or cluster-wide endpoints. "Local" preserves the
    // client source IP and avoids a second hop for LoadBalancer and Nodeport
    // type services, but risks potentially imbalanced traffic spreading.
    // "Cluster" obscures the client source IP and may cause a second hop to
    // another node, but should have good overall load-spreading.
    // +optional
    string externalTrafficPolicy = 11;

    // healthCheckNodePort specifies the healthcheck nodePort for the service.
    // If not specified, HealthCheckNodePort is created by the service api
    // backend with the allocated nodePort. Will use user-specified nodePort value
    // if specified by the client. Only effects when Type is set to LoadBalancer
    // and ExternalTrafficPolicy is set to Local.
    // +optional
    int32 healthCheckNodePort = 12;

    // publishNotReadyAddresses, when set to true, indicates that DNS implementations
    // must publish the notReadyAddresses of subsets for the Endpoints associated with
    // the Service. The default value is false.
    // The primary use case for setting this field is to use a StatefulSet's Headless Service
    // to propagate SRV records for its Pods without respect to their readiness for purpose
    // of peer discovery.
    // +optional
    google.protobuf.BoolValue publishNotReadyAddresses = 13 [(gogoproto.wktpointer) = true];

    // sessionAffinityConfig contains the configurations of session affinity.
    // +optional
    k8s.io.api.core.v1.SessionAffinityConfig sessionAffinityConfig = 14;

    // ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs.
    // IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is
    // available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used.
    // Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which
    // allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of
    // this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the
    // cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.
    // +optional
    string ipFamily = 15;
}

// Service describes the attributes that a user creates on a service.
message UnprotectedService {
    K8sObjectMeta metadata = 16;

    // The list of ports that are exposed by this service.
    // More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    // +patchMergeKey=port
    // +patchStrategy=merge
    // +listType=map
    // +listMapKey=port
    // +listMapKey=protocol
    repeated ServicePort ports = 1;

    // Route service traffic to pods with label keys and values matching this
    // selector. If empty or not present, the service is assumed to have an
    // external process managing its endpoints, which Kubernetes will not
    // modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
    // Ignored if type is ExternalName.
    // More info: https://kubernetes.io/docs/concepts/services-networking/service/
    // +optional
    map<string, string> selector = 2;

    // clusterIP is the IP address of the service and is usually assigned
    // randomly by the master. If an address is specified manually and is not in
    // use by others, it will be allocated to the service; otherwise, creation
    // of the service will fail. This field can not be changed through updates.
    // Valid values are "None", empty string (""), or a valid IP address. "None"
    // can be specified for headless services when proxying is not required.
    // Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if
    // type is ExternalName.
    // More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    // +optional
    string clusterIP = 3;

    // type determines how the Service is exposed. Defaults to ClusterIP. Valid
    // options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
    // "ExternalName" maps to the specified externalName.
    // "ClusterIP" allocates a cluster-internal IP address for load-balancing to
    // endpoints. Endpoints are determined by the selector or if that is not
    // specified, by manual construction of an Endpoints object. If clusterIP is
    // "None", no virtual IP is allocated and the endpoints are published as a
    // set of endpoints rather than a stable IP.
    // "NodePort" builds on ClusterIP and allocates a port on every node which
    // routes to the clusterIP.
    // "LoadBalancer" builds on NodePort and creates an
    // external load-balancer (if supported in the current cloud) which routes
    // to the clusterIP.
    // More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    // +optional
    // +kubebuilder:validation:Enum=ClusterIP;NodePort;LoadBalancer
    string type = 4;

    // externalIPs is a list of IP addresses for which nodes in the cluster
    // will also accept traffic for this service.  These IPs are not managed by
    // Kubernetes.  The user is responsible for ensuring that traffic arrives
    // at a node with this IP.  A common example is external load-balancers
    // that are not part of the Kubernetes system.
    // +optional
    repeated string externalIPs = 5;

    // Supports "ClientIP" and "None". Used to maintain session affinity.
    // Enable client IP based session affinity.
    // Must be ClientIP or None.
    // Defaults to None.
    // More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    // +optional
    string sessionAffinity = 7;

    // Only applies to Service Type: LoadBalancer
    // LoadBalancer will get created with the IP specified in this field.
    // This feature depends on whether the underlying cloud-provider supports specifying
    // the loadBalancerIP when a load balancer is created.
    // This field will be ignored if the cloud-provider does not support the feature.
    // +optional
    string loadBalancerIP = 8;

    // If specified and supported by the platform, this will restrict traffic through the cloud-provider
    // load-balancer will be restricted to the specified client IPs. This field will be ignored if the
    // cloud-provider does not support the feature."
    // More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
    // +optional
    repeated string loadBalancerSourceRanges = 9;

    // externalName is the external reference that kubedns or equivalent will
    // return as a CNAME record for this service. No proxying will be involved.
    // Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
    // and requires Type to be ExternalName.
    // +optional
    string externalName = 10;

    // externalTrafficPolicy denotes if this Service desires to route external
    // traffic to node-local or cluster-wide endpoints. "Local" preserves the
    // client source IP and avoids a second hop for LoadBalancer and Nodeport
    // type services, but risks potentially imbalanced traffic spreading.
    // "Cluster" obscures the client source IP and may cause a second hop to
    // another node, but should have good overall load-spreading.
    // +optional
    string externalTrafficPolicy = 11;

    // healthCheckNodePort specifies the healthcheck nodePort for the service.
    // If not specified, HealthCheckNodePort is created by the service api
    // backend with the allocated nodePort. Will use user-specified nodePort value
    // if specified by the client. Only effects when Type is set to LoadBalancer
    // and ExternalTrafficPolicy is set to Local.
    // +optional
    int32 healthCheckNodePort = 12;

    // publishNotReadyAddresses, when set to true, indicates that DNS implementations
    // must publish the notReadyAddresses of subsets for the Endpoints associated with
    // the Service. The default value is false.
    // The primary use case for setting this field is to use a StatefulSet's Headless Service
    // to propagate SRV records for its Pods without respect to their readiness for purpose
    // of peer discovery.
    // +optional
    google.protobuf.BoolValue publishNotReadyAddresses = 13 [(gogoproto.wktpointer) = true];

    // sessionAffinityConfig contains the configurations of session affinity.
    // +optional
    k8s.io.api.core.v1.SessionAffinityConfig sessionAffinityConfig = 14;

    // ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs.
    // IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is
    // available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used.
    // Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which
    // allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of
    // this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the
    // cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.
    // +optional
    string ipFamily = 15;
}

// ServicePort contains information on service's port.
message ServicePort {
    // The name of this port within the service. This must be a DNS_LABEL.
    // All ports within a ServiceSpec must have unique names. When considering
    // the endpoints for a Service, this must match the 'name' field in the
    // EndpointPort.
    // if only one ServicePort is defined on this service.
    // +optional
    string name = 1;

    // The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
    // Default is TCP.
    // +optional
    // +kubebuilder:default=TCP
    string protocol = 2;

    // The port that will be exposed by this service.
    int32 port = 3 [(google.api.field_behavior) = REQUIRED];

    // Number or name of the port to access on the pods targeted by the service.
    // Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    // If this is a string, it will be looked up as a named port in the
    // target Pod's container ports. If this is not specified, the value
    // of the 'port' field is used (an identity map).
    // This field is ignored for services with clusterIP=None, and should be
    // omitted or set equal to the 'port' field.
    // More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
    // +optional
    IntOrString targetPort = 4 [(intorstring) = "true"];

    // The port on each node on which this service is exposed when type=NodePort or LoadBalancer.
    // Usually assigned by the system. If specified, it will be allocated to the service
    // if unused or else creation of the service will fail.
    // Default is to auto-allocate a port if the ServiceType of this Service requires one.
    // More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    // +optional
    int32 nodePort = 5;
}

message NamespacedName {
    // Name of the referenced Kubernetes resource
    string name = 1;

    // Namespace of the referenced Kubernetes resource
    string namespace = 2;
}

// ResourceRequirements describes the compute resource requirements.
message ResourceRequirements {
    // Limits describes the maximum amount of compute resources allowed.
    // More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    // +optional
    map<string, Quantity> limits = 1 [(intorstring)="map"];

    // Requests describes the minimum amount of compute resources required.
    // If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
    // otherwise to an implementation-defined value.
    // More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    // +optional
    map<string, Quantity> requests = 2 [(intorstring)="map"];
}

// Replicas contains pod replica configuration
message Replicas {
    // Standard Kubernetes replica count configuration
    // +kubebuilder:validation:Minimum=0
    google.protobuf.Int32Value count = 1 [(gogoproto.wktpointer) = true];

    // Standard Kubernetes minimum replicas configuration
    // +kubebuilder:validation:Minimum=0
    google.protobuf.Int32Value min = 2 [(gogoproto.wktpointer) = true];

    // Standard Kubernetes maximum replicas configuration
    // +kubebuilder:validation:Minimum=0
    google.protobuf.Int32Value max = 3 [(gogoproto.wktpointer) = true];

    // target average CPU utilization (represented as a percentage of requested CPU) over all the pods;
	// if not specified the default autoscaling policy will be used.
	// +optional
    // +kubebuilder:validation:Minimum=0
    google.protobuf.Int32Value targetCPUUtilizationPercentage = 4 [(gogoproto.wktpointer) = true];
}

message K8sResourceOverlayPatch {
    message GroupVersionKind {
        string kind = 1;
        string version = 2;
        string group = 3;
    }

    enum Type {
        unspecified = 0;
        replace = 1;
        remove = 2;
    }

    message Patch {
        string path = 1;
        string value = 2;
        bool parseValue = 3;
        Type type = 4;
    }

    GroupVersionKind groupVersionKind = 1 [(gogoproto.nullable) = false];
    NamespacedName objectKey = 2;
    repeated Patch patches = 3 [(gogoproto.nullable) = false];
}

enum ConfigState {
    Unspecified = 0;
    Created = 1;
    ReconcileFailed = 2;
    Reconciling = 3;
    Available = 4;
    Unmanaged = 5;
}

// Synthetic type for generating Go structs.
// GOTYPE: *Quantity
message Quantity {}

// Synthetic type for generating Go structs.
// GOTYPE: *IntOrString
message IntOrString {}
