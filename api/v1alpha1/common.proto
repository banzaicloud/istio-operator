// Copyright 2021 Cisco Systems, Inc. and/or its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "gogoproto/gogo.proto";
import "google/api/field_behavior.proto";
import "k8s.io/api/core/v1/generated.proto";

package istio_operator.v2.api.v1alpha1;

option go_package = "github.com/banzaicloud/istio-operator/v2/api/v1alpha1";

message NamespacedName {
    // Name of the referenced Kubernetes resource
    string name = 1 [(gogoproto.jsontag) = "name,omitempty"];
    // Namespace of the referenced Kubernetes resource
    string namespace = 2  [(gogoproto.jsontag) = "namespace,omitempty"];
}

message BaseK8sResourceConfigurationWithHPAWithoutImage {
    // Standard Kubernetes replica count configuration
    // +kubebuilder:validation:Minimum=0
    google.protobuf.Int32Value ReplicaCount = 1 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "replicaCount,omitempty"];
    // Standard Kubernetes minimum replicas configuration
	// +kubebuilder:validation:Minimum=0
    google.protobuf.Int32Value MinReplicas = 2 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "minReplicas,omitempty"];
    // Standard Kubernetes maximum replicas configuration
	// +kubebuilder:validation:Minimum=0
    google.protobuf.Int32Value MaxReplicas = 3 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "maxReplicas,omitempty"];
    // Standard Kubernetes resource configuration
    BaseK8sResourceConfiguration BaseK8sResourceConfig = 4 [(gogoproto.nullable) = false, (gogoproto.embed) = true, (gogoproto.jsontag) = ",inline"];
}

message BaseK8sResourceConfiguration {
    // Standard Kubernetes memory and CPU resource requirements
    k8s.io.api.core.v1.ResourceRequirements Resources = 1 [(gogoproto.jsontag) = "resources,omitempty"];
    // Standard Kubernetes node selector configuration
	map<string,string> NodeSelector = 2 [(gogoproto.jsontag) = "nodeSelector,omitempty"];
    // Standard Kubernetes affinity configuration
	k8s.io.api.core.v1.Affinity Affinity = 3 [(gogoproto.jsontag) = "affinity,omitempty"];
    // Standard Kubernetes toleration configuration
	repeated k8s.io.api.core.v1.Toleration Tolerations = 4 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "tolerations,omitempty"];
    // Standard Kubernetes pod annotation configuration
	map<string,string> PodAnnotations = 5 [(gogoproto.jsontag) = "podAnnotations,omitempty"];
    // Standard Kubernetes security context configuration
	k8s.io.api.core.v1.SecurityContext SecurityContext = 6 [(gogoproto.jsontag) = "securityContext,omitempty"];
}

message ServicePort {
    // Target port to use
    google.protobuf.Int32Value GatewayTargetPort = 1 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "targetPort,omitempty"];
    // Standard Kubernetes service port configuration
    k8s.io.api.core.v1.ServicePort ServicePort = 2 [(gogoproto.nullable) = false, (gogoproto.jsontag) = ",inline", (gogoproto.embed) = true];
}
