{
  "openapi": "3.0.0",
  "info": {
    "title": "Istio control plane descriptor",
    "version": "v1alpha1"
  },
  "components": {
    "schemas": {
      "istio.mesh.v1alpha1.AuthenticationPolicy": {
        "description": "AuthenticationPolicy defines how the proxy is authenticated when it connects to the control plane. It can be set for two different scopes, mesh-wide or set on a per-pod basis using the ProxyConfig annotation. Mesh policy cannot be INHERIT.",
        "type": "string",
        "enum": [
          "NONE",
          "MUTUAL_TLS",
          "INHERIT"
        ]
      },
      "istio.mesh.v1alpha1.Certificate": {
        "type": "object",
        "properties": {
          "secretName": {
            "description": "Name of the secret the certificate and its key will be stored into. If it is empty, it will not be stored into a secret. Instead, the certificate and its key will be stored into a hard-coded directory.",
            "type": "string"
          },
          "dnsNames": {
            "description": "The DNS names for the certificate. A certificate may contain multiple DNS names.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "istio.mesh.v1alpha1.ConfigSource": {
        "description": "ConfigSource describes information about a configuration store inside a mesh. A single control plane instance can interact with one or more data sources.",
        "type": "object",
        "properties": {
          "address": {
            "description": "Address of the server implementing the Istio Mesh Configuration protocol (MCP). Can be IP address or a fully qualified DNS name. Use xds:// to specify a grpc-based xds backend, k8s:// to specify a k8s controller or fs:/// to specify a file-based backend with absolute path to the directory.",
            "type": "string"
          },
          "tlsSettings": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.ClientTLSSettings"
          },
          "subscribedResources": {
            "description": "Describes the source of configuration, if nothing is specified default is MCP",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.mesh.v1alpha1.Resource"
            }
          }
        }
      },
      "istio.mesh.v1alpha1.MeshConfig": {
        "description": "MeshConfig defines mesh-wide settings for the Istio service mesh.",
        "type": "object",
        "properties": {
          "localityLbSetting": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.LocalityLoadBalancerSetting"
          },
          "connectTimeout": {
            "description": "Connection timeout used by Envoy. (MUST BE \u003e=1ms) Default timeout is 10s.",
            "type": "string"
          },
          "tcpKeepalive": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive"
          },
          "h2UpgradePolicy": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.H2UpgradePolicy"
          },
          "caCertificates": {
            "description": "The extra root certificates for workload-to-workload communication. The plugin certificates (the 'cacerts' secret) or self-signed certificates (the 'istio-ca-secret' secret) are automatically added by Istiod. The CA certificate that signs the workload certificates is automatically added by Istio Agent.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.CertificateData"
            }
          },
          "proxyListenPort": {
            "description": "Port on which Envoy should listen for incoming connections from other services. Default port is 15001.",
            "type": "integer",
            "format": "int32"
          },
          "proxyHttpPort": {
            "description": "Port on which Envoy should listen for HTTP PROXY requests if set.",
            "type": "integer",
            "format": "int32"
          },
          "protocolDetectionTimeout": {
            "description": "Automatic protocol detection uses a set of heuristics to determine whether the connection is using TLS or not (on the server side), as well as the application protocol being used (e.g., http vs tcp). These heuristics rely on the client sending the first bits of data. For server first protocols like MySQL, MongoDB, etc. Envoy will timeout on the protocol detection after the specified period, defaulting to non mTLS plain TCP traffic. Set this field to tweak the period that Envoy will wait for the client to send the first bits of data. (MUST BE \u003e=1ms or 0s to disable). Default detection timeout is 0s (no timeout).",
            "type": "string"
          },
          "ingressClass": {
            "description": "Class of ingress resources to be processed by Istio ingress controller. This corresponds to the value of `kubernetes.io/ingress.class` annotation.",
            "type": "string"
          },
          "ingressService": {
            "description": "Name of the Kubernetes service used for the istio ingress controller. If no ingress controller is specified, the default value `istio-ingressgateway` is used.",
            "type": "string"
          },
          "ingressControllerMode": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.IngressControllerMode"
          },
          "ingressSelector": {
            "description": "Defines which gateway deployment to use as the Ingress controller. This field corresponds to the Gateway.selector field, and will be set as `istio: INGRESS_SELECTOR`. By default, `ingressgateway` is used, which will select the default IngressGateway as it has the `istio: ingressgateway` labels. It is recommended that this is the same value as ingress_service.",
            "type": "string"
          },
          "enableTracing": {
            "description": "Flag to control generation of trace spans and request IDs. Requires a trace span collector defined in the proxy configuration.",
            "type": "boolean"
          },
          "accessLogFile": {
            "description": "File address for the proxy access log (e.g. /dev/stdout). Empty value disables access logging.",
            "type": "string"
          },
          "accessLogFormat": {
            "description": "Format for the proxy access log Empty value results in proxy's default access log format",
            "type": "string"
          },
          "accessLogEncoding": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.AccessLogEncoding"
          },
          "enableEnvoyAccessLogService": {
            "description": "This flag enables Envoy's gRPC Access Log Service. See [Access Log Service](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/access_loggers/grpc/v3/als.proto) for details about Envoy's gRPC Access Log Service API. Default value is `false`.",
            "type": "boolean"
          },
          "disableEnvoyListenerLog": {
            "description": "This flag disables Envoy Listener logs. See [Listener Access Log](https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/listener/v3/listener.proto#envoy-v3-api-field-config-listener-v3-listener-access-log) Istio Enables Envoy's listener access logs on \"NoRoute\" response flag. Default value is `false`.",
            "type": "boolean"
          },
          "defaultConfig": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.ProxyConfig"
          },
          "outboundTrafficPolicy": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy"
          },
          "configSources": {
            "description": "ConfigSource describes a source of configuration data for networking rules, and other Istio configuration artifacts. Multiple data sources can be configured for a single control plane.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.mesh.v1alpha1.ConfigSource"
            }
          },
          "enableAutoMtls": {
            "description": "This flag is used to enable mutual `TLS` automatically for service to service communication within the mesh, default true. If set to true, and a given service does not have a corresponding `DestinationRule` configured, or its `DestinationRule` does not have ClientTLSSettings specified, Istio configures client side TLS configuration appropriately. More specifically, If the upstream authentication policy is in `STRICT` mode, use Istio provisioned certificate for mutual `TLS` to connect to upstream. If upstream service is in plain text mode, use plain text. If the upstream authentication policy is in PERMISSIVE mode, Istio configures clients to use mutual `TLS` when server sides are capable of accepting mutual `TLS` traffic. If service `DestinationRule` exists and has `ClientTLSSettings` specified, that is always used instead.",
            "type": "boolean",
            "nullable": true
          },
          "trustDomain": {
            "description": "The trust domain corresponds to the trust root of a system. Refer to [SPIFFE-ID](https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE-ID.md#21-trust-domain)",
            "type": "string"
          },
          "trustDomainAliases": {
            "description": "The trust domain aliases represent the aliases of `trust_domain`. For example, if we have ```yaml trustDomain: td1 trustDomainAliases: [\"td2\", \"td3\"] ``` Any service with the identity `td1/ns/foo/sa/a-service-account`, `td2/ns/foo/sa/a-service-account`, or `td3/ns/foo/sa/a-service-account` will be treated the same in the Istio mesh.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultServiceExportTo": {
            "description": "The default value for the ServiceEntry.export_to field and services imported through container registry integrations, e.g. this applies to Kubernetes Service resources. The value is a list of namespace names and reserved namespace aliases. The allowed namespace aliases are: ``` * - All Namespaces . - Current Namespace ~ - No Namespace ``` If not set the system will use \"*\" as the default value which implies that services are exported to all namespaces. `All namespaces` is a reasonable default for implementations that don't need to restrict access or visibility of services across namespace boundaries. If that requirement is present it is generally good practice to make the default `Current namespace` so that services are only visible within their own namespaces by default. Operators can then expand the visibility of services to other namespaces as needed. Use of `No Namespace` is expected to be rare but can have utility for deployments where dependency management needs to be precise even within the scope of a single namespace. For further discussion see the reference documentation for `ServiceEntry`, `Sidecar`, and `Gateway`.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultVirtualServiceExportTo": {
            "description": "The default value for the VirtualService.export_to field. Has the same syntax as `default_service_export_to`. If not set the system will use \"*\" as the default value which implies that virtual services are exported to all namespaces",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultDestinationRuleExportTo": {
            "description": "The default value for the `DestinationRule.export_to` field. Has the same syntax as `default_service_export_to`. If not set the system will use \"*\" as the default value which implies that destination rules are exported to all namespaces",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rootNamespace": {
            "description": "The namespace to treat as the administrative root namespace for Istio configuration. When processing a leaf namespace Istio will search for declarations in that namespace first and if none are found it will search in the root namespace. Any matching declaration found in the root namespace is processed as if it were declared in the leaf namespace. The precise semantics of this processing are documented on each resource type.",
            "type": "string"
          },
          "dnsRefreshRate": {
            "description": "Configures DNS refresh rate for Envoy clusters of type `STRICT_DNS` Default refresh rate is `5s`.",
            "type": "string"
          },
          "inboundClusterStatName": {
            "description": "Name to be used while emitting statistics for inbound clusters. The same pattern is used while computing stat prefix for network filters like TCP and Redis. By default, Istio emits statistics with the pattern `inbound|\u003cport\u003e|\u003cport-name\u003e|\u003cservice-FQDN\u003e`. For example `inbound|7443|grpc-reviews|reviews.prod.svc.cluster.local`. This can be used to override that pattern. A Pattern can be composed of various pre-defined variables. The following variables are supported. - `%SERVICE%` - Will be substituted with name of the service. - `%SERVICE_FQDN%` - Will be substituted with FQDN of the service. - `%SERVICE_PORT%` - Will be substituted with port of the service. - `%SERVICE_PORT_NAME%` - Will be substituted with port name of the service. Following are some examples of supported patterns for reviews: - `%SERVICE_FQDN%_%SERVICE_PORT%` will use reviews.prod.svc.cluster.local_7443 as the stats name. - `%SERVICE%` will use reviews.prod as the stats name.",
            "type": "string"
          },
          "outboundClusterStatName": {
            "description": "Name to be used while emitting statistics for outbound clusters. The same pattern is used while computing stat prefix for network filters like TCP and Redis. By default, Istio emits statistics with the pattern `outbound|\u003cport\u003e|\u003csubsetname\u003e|\u003cservice-FQDN\u003e`. For example `outbound|8080|v2|reviews.prod.svc.cluster.local`. This can be used to override that pattern. A Pattern can be composed of various pre-defined variables. The following variables are supported. - `%SERVICE%` - Will be substituted with name of the service. - `%SERVICE_FQDN%` - Will be substituted with FQDN of the service. - `%SERVICE_PORT%` - Will be substituted with port of the service. - `%SERVICE_PORT_NAME%` - Will be substituted with port name of the service. - `%SUBSET_NAME%` - Will be substituted with subset. Following are some examples of supported patterns for reviews: - `%SERVICE_FQDN%_%SERVICE_PORT%` will use `reviews.prod.svc.cluster.local_7443` as the stats name. - `%SERVICE%` will use reviews.prod as the stats name.",
            "type": "string"
          },
          "certificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.mesh.v1alpha1.Certificate"
            }
          },
          "thriftConfig": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ThriftConfig"
          },
          "serviceSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ServiceSettings"
            }
          },
          "enablePrometheusMerge": {
            "description": "If enabled, Istio agent will merge metrics exposed by the application with metrics from Envoy and Istio agent. The sidecar injection will replace `prometheus.io` annotations present on the pod and redirect them towards Istio agent, which will then merge metrics of from the application with Istio metrics. This relies on the annotations `prometheus.io/scrape`, `prometheus.io/port`, and `prometheus.io/path` annotations. If you are running a separately managed Envoy with an Istio sidecar, this may cause issues, as the metrics will collide. In this case, it is recommended to disable aggregation on that deployment with the `prometheus.istio.io/merge-metrics: \"false\"` annotation. If not specified, this will be enabled by default.",
            "type": "boolean",
            "nullable": true
          },
          "verifyCertificateAtClient": {
            "type": "boolean",
            "deprecated": true,
            "nullable": true
          },
          "ca": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.CA"
          },
          "extensionProviders": {
            "description": "Defines a list of extension providers that extend Istio's functionality. For example, the AuthorizationPolicy can be used with an extension provider to delegate the authorization decision to a custom authorization system.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider"
            }
          },
          "defaultProviders": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.DefaultProviders"
          },
          "discoverySelectors": {
            "description": "A list of Kubernetes selectors that specify the set of namespaces that Istio considers when computing configuration updates for sidecars. This can be used to reduce Istio's computational load by limiting the number of entities (including services, pods, and endpoints) that are watched and processed. If omitted, Istio will use the default behavior of processing all namespaces in the cluster. Elements in the list are disjunctive (OR semantics), i.e. a namespace will be included if it matches any selector. The following example selects any namespace that matches either below: 1. The namespace has both of these labels: `env: prod` and `region: us-east1` 2. The namespace has label `app` equal to `cassandra` or `spark`. ```yaml discoverySelectors: - matchLabels: env: prod region: us-east1 - matchExpressions: - key: app operator: In values: - cassandra - spark ``` Refer to the [kubernetes selector docs](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors) for additional detail on selector semantics.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
            }
          },
          "pathNormalization": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ProxyPathNormalization"
          },
          "defaultHttpRetryPolicy": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.HTTPRetry"
          },
          "meshMTLS": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.TLSConfig"
          }
        }
      },
      "istio.mesh.v1alpha1.MeshConfig.AccessLogEncoding": {
        "type": "string",
        "enum": [
          "TEXT",
          "JSON"
        ]
      },
      "istio.mesh.v1alpha1.MeshConfig.CA": {
        "type": "object",
        "properties": {
          "address": {
            "description": "REQUIRED. Address of the CA server implementing the Istio CA gRPC API. Can be IP address or a fully qualified DNS name with port Eg: custom-ca.default.svc.cluster.local:8932, 192.168.23.2:9000",
            "type": "string"
          },
          "tlsSettings": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.ClientTLSSettings"
          },
          "requestTimeout": {
            "description": "timeout for forward CSR requests from Istiod to External CA Default: 10s",
            "type": "string"
          },
          "istiodSide": {
            "description": "Use istiod_side to specify CA Server integrate to Istiod side or Agent side Default: true",
            "type": "boolean"
          }
        }
      },
      "istio.mesh.v1alpha1.MeshConfig.CertificateData": {
        "type": "object",
        "properties": {
          "certSigners": {
            "description": "Optional. Specify the kubernetes signers (External CA) that use this trustAnchor when Istiod is acting as RA(registration authority) If set, they are used for these signers. Otherwise, this trustAnchor is used for all signers.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "trustDomains": {
            "description": "Optional. Specify the list of trust domains to which this trustAnchor data belongs. If set, they are used for these trust domains. Otherwise, this trustAnchor is used for default trust domain and its aliases. Note that we can have multiple trustAnchor data for a same trust_domain. In that case, trustAnchors with a same trust domain will be merged and used together to verify peer certificates. If neither cert_signers nor trust_domains is set, this trustAnchor is used for all trust domains and all signers. If only trust_domains is set, this trustAnchor is used for these trust_domains and all signers. If only cert_signers is set, this trustAnchor is used for these cert_signers and all trust domains. If both cert_signers and trust_domains is set, this trustAnchor is only used for these signers and trust domains.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "oneOf": [
          {
            "not": {
              "anyOf": [
                {
                  "required": [
                    "pem"
                  ],
                  "properties": {
                    "pem": {
                      "description": "The PEM data of the certificate.",
                      "type": "string"
                    }
                  }
                },
                {
                  "required": [
                    "spiffeBundleUrl"
                  ],
                  "properties": {
                    "spiffeBundleUrl": {
                      "description": "The SPIFFE bundle endpoint URL that complies to: https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE_Trust_Domain_and_Bundle.md#the-spiffe-trust-domain-and-bundle The endpoint should support authentication based on Web PKI: https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE_Trust_Domain_and_Bundle.md#521-web-pki The certificate is retrieved from the endpoint.",
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "required": [
              "pem"
            ],
            "properties": {
              "pem": {
                "description": "The PEM data of the certificate.",
                "type": "string"
              }
            }
          },
          {
            "required": [
              "spiffeBundleUrl"
            ],
            "properties": {
              "spiffeBundleUrl": {
                "description": "The SPIFFE bundle endpoint URL that complies to: https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE_Trust_Domain_and_Bundle.md#the-spiffe-trust-domain-and-bundle The endpoint should support authentication based on Web PKI: https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE_Trust_Domain_and_Bundle.md#521-web-pki The certificate is retrieved from the endpoint.",
                "type": "string"
              }
            }
          }
        ]
      },
      "istio.mesh.v1alpha1.MeshConfig.DefaultProviders": {
        "description": "Holds the name references to the providers that will be used by default in other Istio configuration resources if the provider is not specified. These names must match a provider defined in `extension_providers` that is one of the supported tracing providers.",
        "type": "object",
        "properties": {
          "tracing": {
            "description": "Name of the default provider(s) for tracing.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metrics": {
            "description": "Name of the default provider(s) for metrics.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accessLogging": {
            "description": "Name of the default provider(s) for access logging.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider": {
        "type": "object",
        "properties": {
          "name": {
            "description": "REQUIRED. A unique name identifying the extension provider.",
            "type": "string"
          }
        },
        "oneOf": [
          {
            "not": {
              "anyOf": [
                {
                  "required": [
                    "envoyExtAuthzHttp"
                  ],
                  "properties": {
                    "envoyExtAuthzHttp": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationHttpProvider"
                    }
                  }
                },
                {
                  "required": [
                    "envoyExtAuthzGrpc"
                  ],
                  "properties": {
                    "envoyExtAuthzGrpc": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationGrpcProvider"
                    }
                  }
                },
                {
                  "required": [
                    "zipkin"
                  ],
                  "properties": {
                    "zipkin": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.ZipkinTracingProvider"
                    }
                  }
                },
                {
                  "required": [
                    "lightstep"
                  ],
                  "properties": {
                    "lightstep": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.LightstepTracingProvider"
                    }
                  }
                },
                {
                  "required": [
                    "datadog"
                  ],
                  "properties": {
                    "datadog": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.DatadogTracingProvider"
                    }
                  }
                },
                {
                  "required": [
                    "stackdriver"
                  ],
                  "properties": {
                    "stackdriver": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.StackdriverProvider"
                    }
                  }
                },
                {
                  "required": [
                    "opencensus"
                  ],
                  "properties": {
                    "opencensus": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenCensusAgentTracingProvider"
                    }
                  }
                },
                {
                  "required": [
                    "skywalking"
                  ],
                  "properties": {
                    "skywalking": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.SkyWalkingTracingProvider"
                    }
                  }
                },
                {
                  "required": [
                    "opentelemetry"
                  ],
                  "properties": {
                    "opentelemetry": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenTelemetryTracingProvider"
                    }
                  }
                },
                {
                  "required": [
                    "prometheus"
                  ],
                  "properties": {
                    "prometheus": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.PrometheusMetricsProvider"
                    }
                  }
                },
                {
                  "required": [
                    "envoyFileAccessLog"
                  ],
                  "properties": {
                    "envoyFileAccessLog": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyFileAccessLogProvider"
                    }
                  }
                },
                {
                  "required": [
                    "envoyHttpAls"
                  ],
                  "properties": {
                    "envoyHttpAls": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyHttpGrpcV3LogProvider"
                    }
                  }
                },
                {
                  "required": [
                    "envoyTcpAls"
                  ],
                  "properties": {
                    "envoyTcpAls": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyTcpGrpcV3LogProvider"
                    }
                  }
                },
                {
                  "required": [
                    "envoyOtelAls"
                  ],
                  "properties": {
                    "envoyOtelAls": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyOpenTelemetryLogProvider"
                    }
                  }
                },
                {}
              ]
            }
          },
          {
            "required": [
              "envoyExtAuthzHttp"
            ],
            "properties": {
              "envoyExtAuthzHttp": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationHttpProvider"
              }
            }
          },
          {
            "required": [
              "envoyExtAuthzGrpc"
            ],
            "properties": {
              "envoyExtAuthzGrpc": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationGrpcProvider"
              }
            }
          },
          {
            "required": [
              "zipkin"
            ],
            "properties": {
              "zipkin": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.ZipkinTracingProvider"
              }
            }
          },
          {
            "required": [
              "lightstep"
            ],
            "properties": {
              "lightstep": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.LightstepTracingProvider"
              }
            }
          },
          {
            "required": [
              "datadog"
            ],
            "properties": {
              "datadog": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.DatadogTracingProvider"
              }
            }
          },
          {
            "required": [
              "stackdriver"
            ],
            "properties": {
              "stackdriver": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.StackdriverProvider"
              }
            }
          },
          {
            "required": [
              "opencensus"
            ],
            "properties": {
              "opencensus": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenCensusAgentTracingProvider"
              }
            }
          },
          {
            "required": [
              "skywalking"
            ],
            "properties": {
              "skywalking": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.SkyWalkingTracingProvider"
              }
            }
          },
          {
            "required": [
              "opentelemetry"
            ],
            "properties": {
              "opentelemetry": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenTelemetryTracingProvider"
              }
            }
          },
          {
            "required": [
              "prometheus"
            ],
            "properties": {
              "prometheus": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.PrometheusMetricsProvider"
              }
            }
          },
          {
            "required": [
              "envoyFileAccessLog"
            ],
            "properties": {
              "envoyFileAccessLog": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyFileAccessLogProvider"
              }
            }
          },
          {
            "required": [
              "envoyHttpAls"
            ],
            "properties": {
              "envoyHttpAls": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyHttpGrpcV3LogProvider"
              }
            }
          },
          {
            "required": [
              "envoyTcpAls"
            ],
            "properties": {
              "envoyTcpAls": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyTcpGrpcV3LogProvider"
              }
            }
          },
          {
            "required": [
              "envoyOtelAls"
            ],
            "properties": {
              "envoyOtelAls": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyOpenTelemetryLogProvider"
              }
            }
          },
          {
            "not": {
              "anyOf": [
                {},
                {
                  "required": [
                    "envoyExtAuthzHttp"
                  ],
                  "properties": {
                    "envoyExtAuthzHttp": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationHttpProvider"
                    }
                  }
                },
                {
                  "required": [
                    "envoyExtAuthzGrpc"
                  ],
                  "properties": {
                    "envoyExtAuthzGrpc": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationGrpcProvider"
                    }
                  }
                },
                {
                  "required": [
                    "zipkin"
                  ],
                  "properties": {
                    "zipkin": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.ZipkinTracingProvider"
                    }
                  }
                },
                {
                  "required": [
                    "lightstep"
                  ],
                  "properties": {
                    "lightstep": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.LightstepTracingProvider"
                    }
                  }
                },
                {
                  "required": [
                    "datadog"
                  ],
                  "properties": {
                    "datadog": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.DatadogTracingProvider"
                    }
                  }
                },
                {
                  "required": [
                    "stackdriver"
                  ],
                  "properties": {
                    "stackdriver": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.StackdriverProvider"
                    }
                  }
                },
                {
                  "required": [
                    "opencensus"
                  ],
                  "properties": {
                    "opencensus": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenCensusAgentTracingProvider"
                    }
                  }
                },
                {
                  "required": [
                    "skywalking"
                  ],
                  "properties": {
                    "skywalking": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.SkyWalkingTracingProvider"
                    }
                  }
                },
                {
                  "required": [
                    "opentelemetry"
                  ],
                  "properties": {
                    "opentelemetry": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenTelemetryTracingProvider"
                    }
                  }
                },
                {
                  "required": [
                    "prometheus"
                  ],
                  "properties": {
                    "prometheus": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.PrometheusMetricsProvider"
                    }
                  }
                },
                {
                  "required": [
                    "envoyFileAccessLog"
                  ],
                  "properties": {
                    "envoyFileAccessLog": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyFileAccessLogProvider"
                    }
                  }
                },
                {
                  "required": [
                    "envoyHttpAls"
                  ],
                  "properties": {
                    "envoyHttpAls": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyHttpGrpcV3LogProvider"
                    }
                  }
                },
                {
                  "required": [
                    "envoyTcpAls"
                  ],
                  "properties": {
                    "envoyTcpAls": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyTcpGrpcV3LogProvider"
                    }
                  }
                },
                {
                  "required": [
                    "envoyOtelAls"
                  ],
                  "properties": {
                    "envoyOtelAls": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyOpenTelemetryLogProvider"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.DatadogTracingProvider": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.DatadogTracingProvider"
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationGrpcProvider": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationGrpcProvider"
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationHttpProvider": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationHttpProvider"
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyFileAccessLogProvider": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyFileAccessLogProvider"
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyHttpGrpcV3LogProvider": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyHttpGrpcV3LogProvider"
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyOpenTelemetryLogProvider": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyOpenTelemetryLogProvider"
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyTcpGrpcV3LogProvider": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyTcpGrpcV3LogProvider"
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.LightstepTracingProvider": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.LightstepTracingProvider"
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenCensusAgentTracingProvider": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenCensusAgentTracingProvider"
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenTelemetryTracingProvider": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenTelemetryTracingProvider"
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.PrometheusMetricsProvider": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.PrometheusMetricsProvider"
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.SkyWalkingTracingProvider": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.SkyWalkingTracingProvider"
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.StackdriverProvider": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.StackdriverProvider"
      },
      "istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.ZipkinTracingProvider": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.ZipkinTracingProvider"
      },
      "istio.mesh.v1alpha1.MeshConfig.H2UpgradePolicy": {
        "description": "Default Policy for upgrading http1.1 connections to http2.",
        "type": "string",
        "enum": [
          "DO_NOT_UPGRADE",
          "UPGRADE"
        ]
      },
      "istio.mesh.v1alpha1.MeshConfig.IngressControllerMode": {
        "type": "string",
        "enum": [
          "UNSPECIFIED",
          "OFF",
          "DEFAULT",
          "STRICT"
        ]
      },
      "istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy": {
        "type": "object",
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy.Mode"
          }
        }
      },
      "istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy.Mode": {
        "type": "string",
        "enum": [
          "REGISTRY_ONLY",
          "ALLOW_ANY"
        ]
      },
      "istio.mesh.v1alpha1.MeshConfig.ProxyPathNormalization": {
        "type": "object",
        "properties": {
          "normalization": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ProxyPathNormalization.NormalizationType"
          }
        }
      },
      "istio.mesh.v1alpha1.MeshConfig.ProxyPathNormalization.NormalizationType": {
        "type": "string",
        "enum": [
          "DEFAULT",
          "NONE",
          "BASE",
          "MERGE_SLASHES",
          "DECODE_AND_MERGE_SLASHES"
        ]
      },
      "istio.mesh.v1alpha1.MeshConfig.ServiceSettings": {
        "type": "object",
        "properties": {
          "hosts": {
            "description": "The services to which the Settings should be applied. Services are selected using the hostname matching rules used by DestinationRule. For example: foo.bar.svc.cluster.local, *.baz.svc.cluster.local",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "settings": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.ServiceSettings.Settings"
          }
        }
      },
      "istio.mesh.v1alpha1.MeshConfig.ServiceSettings.Settings": {
        "description": "Settings for the selected services.",
        "type": "object",
        "properties": {
          "clusterLocal": {
            "description": "If true, specifies that the client and service endpoints must reside in the same cluster. By default, in multi-cluster deployments, the Istio control plane assumes all service endpoints to be reachable from any client in any of the clusters which are part of the mesh. This configuration option limits the set of service endpoints visible to a client to be cluster scoped. There are some common scenarios when this can be useful: - A service (or group of services) is inherently local to the cluster and has local storage for that cluster. For example, the kube-system namespace (e.g. the Kube API Server). - A mesh administrator wants to slowly migrate services to Istio. They might start by first having services cluster-local and then slowly transition them to mesh-wide. They could do this service-by-service (e.g. mysvc.myns.svc.cluster.local) or as a group (e.g. *.myns.svc.cluster.local). By default Istio will consider kubernetes.default.svc (i.e. the API Server) as well as all services in the kube-system namespace to be cluster-local, unless explicitly overridden here.",
            "type": "boolean"
          }
        }
      },
      "istio.mesh.v1alpha1.MeshConfig.TLSConfig": {
        "type": "object",
        "properties": {
          "minProtocolVersion": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig.TLSConfig.TLSProtocol"
          }
        }
      },
      "istio.mesh.v1alpha1.MeshConfig.TLSConfig.TLSProtocol": {
        "description": "TLS protocol versions.",
        "type": "string",
        "enum": [
          "TLS_AUTO",
          "TLSV1_2",
          "TLSV1_3"
        ]
      },
      "istio.mesh.v1alpha1.MeshConfig.ThriftConfig": {
        "type": "object",
        "properties": {
          "rateLimitUrl": {
            "description": "Specify thrift rate limit service URL. If pilot has thrift protocol support enabled, this will enable the rate limit service for destinations that have matching rate limit configurations.",
            "type": "string"
          },
          "rateLimitTimeout": {
            "description": "Specify thrift rate limit service timeout, in milliseconds. Default is `50ms`",
            "type": "string"
          }
        }
      },
      "istio.mesh.v1alpha1.PrivateKeyProvider": {
        "description": "PrivateKeyProvider defines private key configuration for gateways and sidecars. This can be configured mesh wide or individual per-workload basis.",
        "type": "object",
        "oneOf": [
          {
            "not": {
              "anyOf": [
                {
                  "required": [
                    "cryptomb"
                  ],
                  "properties": {
                    "cryptomb": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.PrivateKeyProvider.CryptoMb"
                    }
                  }
                }
              ]
            }
          },
          {
            "required": [
              "cryptomb"
            ],
            "properties": {
              "cryptomb": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.PrivateKeyProvider.CryptoMb"
              }
            }
          }
        ]
      },
      "istio.mesh.v1alpha1.PrivateKeyProvider.CryptoMb": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.PrivateKeyProvider.CryptoMb"
      },
      "istio.mesh.v1alpha1.ProxyConfig": {
        "description": "ProxyConfig defines variables for individual Envoy instances. This can be configured on a per-workload basis as well as by the mesh-wide defaults. To set the mesh wide defaults, configure the `defaultConfig` section of `meshConfig`. For example: ``` meshConfig: defaultConfig: discoveryAddress: istiod:15012 ``` This can also be configured on a per-workload basis by configuring the `proxy.istio.io/config` annotation on the pod. For example: ``` annotations: proxy.istio.io/config: | discoveryAddress: istiod:15012 ``` If both are configured, the two are merged with per field semantics; the field set in annotation will fully replace the field from mesh config defaults. This is different than a deep merge provided by protobuf. For example, `\"tracing\": { \"sampling\": 5 }` would completely override a setting configuring a tracing provider such as `\"tracing\": { \"zipkin\": { \"address\": \"...\" } }`. Note: fields in ProxyConfig are not dynamically configured; changes will require restart of workloads to take effect.",
        "type": "object",
        "properties": {
          "image": {
            "$ref": "#/components/schemas/istio.networking.v1beta1.ProxyImage"
          },
          "readinessProbe": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.ReadinessProbe"
          },
          "tracing": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing"
          },
          "concurrency": {
            "description": "The number of worker threads to run. If unset, this will be automatically determined based on CPU requests/limits. If set to 0, all cores on the machine will be used. Default is 2 worker threads.",
            "type": "integer",
            "nullable": true
          },
          "configPath": {
            "description": "Path to the generated configuration file directory. Proxy agent generates the actual configuration and stores it in this directory.",
            "type": "string"
          },
          "binaryPath": {
            "description": "Path to the proxy binary",
            "type": "string"
          },
          "drainDuration": {
            "description": "The time in seconds that Envoy will drain connections during a hot restart. MUST be \u003e=1s (e.g., _1s/1m/1h_) Default drain duration is `45s`.",
            "type": "string"
          },
          "parentShutdownDuration": {
            "description": "The time in seconds that Envoy will wait before shutting down the parent process during a hot restart. MUST be \u003e=1s (e.g., `1s/1m/1h`). MUST BE greater than `drain_duration` parameter. Default shutdown duration is `60s`.",
            "type": "string"
          },
          "discoveryAddress": {
            "description": "Address of the discovery service exposing xDS with mTLS connection. The inject configuration may override this value.",
            "type": "string"
          },
          "discoveryRefreshDelay": {
            "type": "string",
            "deprecated": true
          },
          "zipkinAddress": {
            "description": "Address of the Zipkin service (e.g. _zipkin:9411_). DEPRECATED: Use [tracing][istio.mesh.v1alpha1.ProxyConfig.tracing] instead.",
            "type": "string",
            "deprecated": true
          },
          "statsdUdpAddress": {
            "description": "IP Address and Port of a statsd UDP listener (e.g. `10.75.241.127:9125`).",
            "type": "string"
          },
          "envoyMetricsServiceAddress": {
            "type": "string",
            "deprecated": true
          },
          "proxyAdminPort": {
            "description": "Port on which Envoy should listen for administrative commands. Default port is `15000`.",
            "type": "integer",
            "format": "int32"
          },
          "availabilityZone": {
            "type": "string",
            "deprecated": true
          },
          "controlPlaneAuthPolicy": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.AuthenticationPolicy"
          },
          "customConfigFile": {
            "description": "File path of custom proxy configuration, currently used by proxies in front of Mixer and Pilot.",
            "type": "string"
          },
          "statNameLength": {
            "description": "Maximum length of name field in Envoy's metrics. The length of the name field is determined by the length of a name field in a service and the set of labels that comprise a particular version of the service. The default value is set to 189 characters. Envoy's internal metrics take up 67 characters, for a total of 256 character name per metric. Increase the value of this field if you find that the metrics from Envoys are truncated.",
            "type": "integer",
            "format": "int32"
          },
          "proxyBootstrapTemplatePath": {
            "description": "Path to the proxy bootstrap template file",
            "type": "string"
          },
          "interceptionMode": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.ProxyConfig.InboundInterceptionMode"
          },
          "sds": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.SDS",
            "deprecated": true
          },
          "envoyAccessLogService": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.RemoteService"
          },
          "envoyMetricsService": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.RemoteService"
          },
          "proxyMetadata": {
            "description": "Additional environment variables for the proxy. Names starting with `ISTIO_META_` will be included in the generated bootstrap and sent to the XDS server.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "runtimeValues": {
            "description": "Envoy [runtime configuration](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/operations/runtime) to set during bootstrapping. This enables setting experimental, unsafe, unsupported, and deprecated features that should be used with extreme caution.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "statusPort": {
            "description": "Port on which the agent should listen for administrative commands such as readiness probe. Default is set to port `15020`.",
            "type": "integer",
            "format": "int32"
          },
          "extraStatTags": {
            "description": "An additional list of tags to extract from the in-proxy Istio telemetry. These extra tags can be added by configuring the telemetry extension. Each additional tag needs to be present in this list. Extra tags emitted by the telemetry extensions must be listed here so that they can be processed and exposed as Prometheus metrics.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gatewayTopology": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.Topology"
          },
          "terminationDrainDuration": {
            "description": "The amount of time allowed for connections to complete on proxy shutdown. On receiving `SIGTERM` or `SIGINT`, `istio-agent` tells the active Envoy to start draining, preventing any new connections and allowing existing connections to complete. It then sleeps for the `termination_drain_duration` and then kills any remaining active Envoy processes. If not set, a default of `5s` will be applied.",
            "type": "string"
          },
          "meshId": {
            "description": "The unique identifier for the [service mesh](https://istio.io/docs/reference/glossary/#service-mesh) All control planes running in the same service mesh should specify the same mesh ID. Mesh ID is used to label telemetry reports for cases where telemetry from multiple meshes is mixed together.",
            "type": "string"
          },
          "proxyStatsMatcher": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.ProxyConfig.ProxyStatsMatcher"
          },
          "holdApplicationUntilProxyStarts": {
            "description": "Boolean flag for enabling/disabling the holdApplicationUntilProxyStarts behavior. This feature adds hooks to delay application startup until the pod proxy is ready to accept traffic, mitigating some startup race conditions. Default value is 'false'.",
            "type": "boolean",
            "nullable": true
          },
          "caCertificatesPem": {
            "description": "The PEM data of the extra root certificates for workload-to-workload communication. This includes the certificates defined in MeshConfig and any other certificates that Istiod uses as CA. The plugin certificates (the 'cacerts' secret), self-signed certificates (the 'istio-ca-secret' secret) are added automatically by Istiod.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "privateKeyProvider": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.PrivateKeyProvider"
          }
        },
        "oneOf": [
          {
            "not": {
              "anyOf": [
                {
                  "required": [
                    "serviceCluster"
                  ],
                  "properties": {
                    "serviceCluster": {
                      "description": "Service cluster defines the name for the `service_cluster` that is shared by all Envoy instances. This setting corresponds to `--service-cluster` flag in Envoy.  In a typical Envoy deployment, the `service-cluster` flag is used to identify the caller, for source-based routing scenarios. Since Istio does not assign a local `service/service` version to each Envoy instance, the name is same for all of them.  However, the source/caller's identity (e.g., IP address) is encoded in the `--service-node` flag when launching Envoy.  When the RDS service receives API calls from Envoy, it uses the value of the `service-node` flag to compute routes that are relative to the service instances located at that IP address.",
                      "type": "string"
                    }
                  }
                },
                {
                  "required": [
                    "tracingServiceName"
                  ],
                  "properties": {
                    "tracingServiceName": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.ProxyConfig.TracingServiceName"
                    }
                  }
                }
              ]
            }
          },
          {
            "required": [
              "serviceCluster"
            ],
            "properties": {
              "serviceCluster": {
                "description": "Service cluster defines the name for the `service_cluster` that is shared by all Envoy instances. This setting corresponds to `--service-cluster` flag in Envoy.  In a typical Envoy deployment, the `service-cluster` flag is used to identify the caller, for source-based routing scenarios. Since Istio does not assign a local `service/service` version to each Envoy instance, the name is same for all of them.  However, the source/caller's identity (e.g., IP address) is encoded in the `--service-node` flag when launching Envoy.  When the RDS service receives API calls from Envoy, it uses the value of the `service-node` flag to compute routes that are relative to the service instances located at that IP address.",
                "type": "string"
              }
            }
          },
          {
            "required": [
              "tracingServiceName"
            ],
            "properties": {
              "tracingServiceName": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.ProxyConfig.TracingServiceName"
              }
            }
          }
        ]
      },
      "istio.mesh.v1alpha1.ProxyConfig.InboundInterceptionMode": {
        "description": "The mode used to redirect inbound traffic to Envoy. This setting has no effect on outbound traffic: iptables `REDIRECT` is always used for outbound connections.",
        "type": "string",
        "enum": [
          "REDIRECT",
          "TPROXY",
          "NONE"
        ]
      },
      "istio.mesh.v1alpha1.ProxyConfig.ProxyStatsMatcher": {
        "description": "Proxy stats name matchers for stats creation. Note this is in addition to the minimum Envoy stats that Istio generates by default.",
        "type": "object",
        "properties": {
          "inclusionPrefixes": {
            "description": "Proxy stats name prefix matcher for inclusion.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inclusionSuffixes": {
            "description": "Proxy stats name suffix matcher for inclusion.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inclusionRegexps": {
            "description": "Proxy stats name regexps matcher for inclusion.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "istio.mesh.v1alpha1.ProxyConfig.TracingServiceName": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.ProxyConfig.TracingServiceName"
      },
      "istio.mesh.v1alpha1.RemoteService": {
        "type": "object",
        "properties": {
          "address": {
            "description": "Address of a remove service used for various purposes (access log receiver, metrics receiver, etc.). Can be IP address or a fully qualified DNS name.",
            "type": "string"
          },
          "tcpKeepalive": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive"
          },
          "tlsSettings": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.ClientTLSSettings"
          }
        }
      },
      "istio.mesh.v1alpha1.Resource": {
        "description": "Resource describes the source of configuration",
        "type": "string",
        "enum": [
          "SERVICE_REGISTRY"
        ]
      },
      "istio.mesh.v1alpha1.SDS": {
        "description": "SDS defines secret discovery service(SDS) configuration to be used by the proxy. For workload, its values are set in sidecar injector(passed as arguments to istio-proxy container). For pilot/mixer, it's passed as arguments to istio-proxy container in pilot/mixer deployment yaml files directly. $hide_from_docs",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "True if SDS is enabled.",
            "type": "boolean"
          },
          "k8sSaJwtPath": {
            "description": "Path of k8s service account JWT path.",
            "type": "string"
          }
        }
      },
      "istio.mesh.v1alpha1.Topology": {
        "type": "object",
        "properties": {
          "numTrustedProxies": {
            "type": "integer"
          },
          "forwardClientCertDetails": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.Topology.ForwardClientCertDetails"
          }
        }
      },
      "istio.mesh.v1alpha1.Topology.ForwardClientCertDetails": {
        "type": "string",
        "enum": [
          "UNDEFINED",
          "SANITIZE",
          "FORWARD_ONLY",
          "APPEND_FORWARD",
          "SANITIZE_SET",
          "ALWAYS_FORWARD_ONLY"
        ]
      },
      "istio.mesh.v1alpha1.Tracing": {
        "description": "Tracing defines configuration for the tracing performed by Envoy instances.",
        "type": "object",
        "properties": {
          "tlsSettings": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.ClientTLSSettings"
          },
          "customTags": {
            "description": "Configures the custom tags to be added to active span by all proxies (i.e. sidecars and gateways). The key represents the name of the tag. Ex: ```yaml custom_tags: new_tag_name: header: name: custom-http-header-name default_value: defaulted-value-from-custom-header ``` $hide_from_docs",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.CustomTag"
            }
          },
          "maxPathTagLength": {
            "description": "Configures the maximum length of the request path to extract and include in the HttpUrl tag. Used to truncate length request paths to meet the needs of tracing backend. If not set, then a length of 256 will be used. $hide_from_docs",
            "type": "integer"
          },
          "sampling": {
            "description": "The percentage of requests (0.0 - 100.0) that will be randomly selected for trace generation, if not requested by the client or not forced. Default is 1.0.",
            "type": "number",
            "format": "double"
          }
        },
        "oneOf": [
          {
            "not": {
              "anyOf": [
                {
                  "required": [
                    "zipkin"
                  ],
                  "properties": {
                    "zipkin": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Zipkin"
                    }
                  }
                },
                {
                  "required": [
                    "lightstep"
                  ],
                  "properties": {
                    "lightstep": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Lightstep"
                    }
                  }
                },
                {
                  "required": [
                    "datadog"
                  ],
                  "properties": {
                    "datadog": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Datadog"
                    }
                  }
                },
                {
                  "required": [
                    "stackdriver"
                  ],
                  "properties": {
                    "stackdriver": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Stackdriver"
                    }
                  }
                },
                {
                  "required": [
                    "openCensusAgent"
                  ],
                  "properties": {
                    "openCensusAgent": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.OpenCensusAgent"
                    }
                  }
                }
              ]
            }
          },
          {
            "required": [
              "zipkin"
            ],
            "properties": {
              "zipkin": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Zipkin"
              }
            }
          },
          {
            "required": [
              "lightstep"
            ],
            "properties": {
              "lightstep": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Lightstep"
              }
            }
          },
          {
            "required": [
              "datadog"
            ],
            "properties": {
              "datadog": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Datadog"
              }
            }
          },
          {
            "required": [
              "stackdriver"
            ],
            "properties": {
              "stackdriver": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Stackdriver"
              }
            }
          },
          {
            "required": [
              "openCensusAgent"
            ],
            "properties": {
              "openCensusAgent": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.OpenCensusAgent"
              }
            }
          }
        ]
      },
      "istio.mesh.v1alpha1.Tracing.CustomTag": {
        "description": "Configure custom tags that will be added to any active span. Tags can be generated via literals, environment variables or an incoming request header. $hide_from_docs",
        "type": "object",
        "oneOf": [
          {
            "not": {
              "anyOf": [
                {
                  "required": [
                    "literal"
                  ],
                  "properties": {
                    "literal": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Literal"
                    }
                  }
                },
                {
                  "required": [
                    "environment"
                  ],
                  "properties": {
                    "environment": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Environment"
                    }
                  }
                },
                {
                  "required": [
                    "header"
                  ],
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.RequestHeader"
                    }
                  }
                }
              ]
            }
          },
          {
            "required": [
              "literal"
            ],
            "properties": {
              "literal": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Literal"
              }
            }
          },
          {
            "required": [
              "environment"
            ],
            "properties": {
              "environment": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Environment"
              }
            }
          },
          {
            "required": [
              "header"
            ],
            "properties": {
              "header": {
                "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.RequestHeader"
              }
            }
          }
        ]
      },
      "istio.mesh.v1alpha1.Tracing.Datadog": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Datadog"
      },
      "istio.mesh.v1alpha1.Tracing.Environment": {
        "description": "Environment is the proxy's environment variable to be used for populating the custom span tag. $hide_from_docs",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the environment variable used to populate the tag's value",
            "type": "string"
          },
          "defaultValue": {
            "description": "When the environment variable is not found, the tag's value will be populated with this default value if specified, otherwise the tag will not be populated.",
            "type": "string"
          }
        }
      },
      "istio.mesh.v1alpha1.Tracing.Lightstep": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Lightstep"
      },
      "istio.mesh.v1alpha1.Tracing.Literal": {
        "description": "Literal type represents a static value. $hide_from_docs",
        "type": "object",
        "properties": {
          "value": {
            "description": "Static literal value used to populate the tag value.",
            "type": "string"
          }
        }
      },
      "istio.mesh.v1alpha1.Tracing.OpenCensusAgent": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.OpenCensusAgent"
      },
      "istio.mesh.v1alpha1.Tracing.RequestHeader": {
        "description": "RequestHeader is the HTTP request header which will be used to populate the span tag. A default value can be configured if the header does not exist. $hide_from_docs",
        "type": "object",
        "properties": {
          "name": {
            "description": "HTTP header name used to obtain the value from to populate the tag value.",
            "type": "string"
          },
          "defaultValue": {
            "description": "Default value to be used for the tag when the named HTTP header does not exist. The tag will be skipped if no default value is provided.",
            "type": "string"
          }
        }
      },
      "istio.mesh.v1alpha1.Tracing.Stackdriver": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Stackdriver"
      },
      "istio.mesh.v1alpha1.Tracing.Zipkin": {
        "$ref": "#/components/schemas/istio.mesh.v1alpha1.Tracing.Zipkin"
      },
      "istio.networking.v1alpha3.ClientTLSSettings": {
        "description": "SSL/TLS related settings for upstream connections. See Envoy's [TLS context](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/transport_sockets/tls/v3/common.proto.html#common-tls-configuration) for more details. These settings are common to both HTTP and TCP upstreams. For example, the following rule configures a client to use mutual TLS for connections to upstream database cluster. {{\u003ctabset category-name=\"example\"\u003e}} {{\u003ctab name=\"v1alpha3\" category-value=\"v1alpha3\"\u003e}} ```yaml apiVersion: networking.istio.io/v1alpha3 kind: DestinationRule metadata: name: db-mtls spec: host: mydbserver.prod.svc.cluster.local trafficPolicy: tls: mode: MUTUAL clientCertificate: /etc/certs/myclientcert.pem privateKey: /etc/certs/client_private_key.pem caCertificates: /etc/certs/rootcacerts.pem ``` {{\u003c/tab\u003e}} {{\u003ctab name=\"v1beta1\" category-value=\"v1beta1\"\u003e}} ```yaml apiVersion: networking.istio.io/v1beta1 kind: DestinationRule metadata: name: db-mtls spec: host: mydbserver.prod.svc.cluster.local trafficPolicy: tls: mode: MUTUAL clientCertificate: /etc/certs/myclientcert.pem privateKey: /etc/certs/client_private_key.pem caCertificates: /etc/certs/rootcacerts.pem ``` {{\u003c/tab\u003e}} {{\u003c/tabset\u003e}} The following rule configures a client to use TLS when talking to a foreign service whose domain matches *.foo.com. {{\u003ctabset category-name=\"example\"\u003e}} {{\u003ctab name=\"v1alpha3\" category-value=\"v1alpha3\"\u003e}} ```yaml apiVersion: networking.istio.io/v1alpha3 kind: DestinationRule metadata: name: tls-foo spec: host: \"*.foo.com\" trafficPolicy: tls: mode: SIMPLE ``` {{\u003c/tab\u003e}} {{\u003ctab name=\"v1beta1\" category-value=\"v1beta1\"\u003e}} ```yaml apiVersion: networking.istio.io/v1beta1 kind: DestinationRule metadata: name: tls-foo spec: host: \"*.foo.com\" trafficPolicy: tls: mode: SIMPLE ``` {{\u003c/tab\u003e}} {{\u003c/tabset\u003e}} The following rule configures a client to use Istio mutual TLS when talking to rating services. {{\u003ctabset category-name=\"example\"\u003e}} {{\u003ctab name=\"v1alpha3\" category-value=\"v1alpha3\"\u003e}} ```yaml apiVersion: networking.istio.io/v1alpha3 kind: DestinationRule metadata: name: ratings-istio-mtls spec: host: ratings.prod.svc.cluster.local trafficPolicy: tls: mode: ISTIO_MUTUAL ``` {{\u003c/tab\u003e}} {{\u003ctab name=\"v1beta1\" category-value=\"v1beta1\"\u003e}} ```yaml apiVersion: networking.istio.io/v1beta1 kind: DestinationRule metadata: name: ratings-istio-mtls spec: host: ratings.prod.svc.cluster.local trafficPolicy: tls: mode: ISTIO_MUTUAL ``` {{\u003c/tab\u003e}} {{\u003c/tabset\u003e}}",
        "type": "object",
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.ClientTLSSettings.TLSmode"
          },
          "clientCertificate": {
            "description": "REQUIRED if mode is `MUTUAL`. The path to the file holding the client-side TLS certificate to use. Should be empty if mode is `ISTIO_MUTUAL`.",
            "type": "string"
          },
          "privateKey": {
            "description": "REQUIRED if mode is `MUTUAL`. The path to the file holding the client's private key. Should be empty if mode is `ISTIO_MUTUAL`.",
            "type": "string"
          },
          "caCertificates": {
            "description": "OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate. If omitted, the proxy will not verify the server's certificate. Should be empty if mode is `ISTIO_MUTUAL`.",
            "type": "string"
          },
          "credentialName": {
            "description": "The name of the secret that holds the TLS certs for the client including the CA certificates. Secret must exist in the same namespace with the proxy using the certificates. The secret (of type `generic`)should contain the following keys and values: `key: \u003cprivateKey\u003e`, `cert: \u003cclientCert\u003e`, `cacert: \u003cCACertificate\u003e`. Here CACertificate is used to verify the server certificate. Secret of type tls for client certificates along with ca.crt key for CA certificates is also supported. Only one of client certificates and CA certificate or credentialName can be specified. **NOTE:** This field is applicable at sidecars only if `DestinationRule` has a `workloadSelector` specified. Otherwise the field will be applicable only at gateways, and sidecars will continue to use the certificate paths.",
            "type": "string"
          },
          "subjectAltNames": {
            "description": "A list of alternate names to verify the subject identity in the certificate. If specified, the proxy will verify that the server certificate's subject alt name matches one of the specified values. If specified, this list overrides the value of subject_alt_names from the ServiceEntry. If unspecified, automatic validation of upstream presented certificate for new upstream connections will be done based on the downstream HTTP host/authority header, provided `VERIFY_CERT_AT_CLIENT` and `ENABLE_AUTO_SNI` environmental variables are set to `true`.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sni": {
            "description": "SNI string to present to the server during TLS handshake. If unspecified, SNI will be automatically set based on downstream HTTP host/authority header for SIMPLE and MUTUAL TLS modes, provided `ENABLE_AUTO_SNI` environmental variable is set to `true`.",
            "type": "string"
          },
          "insecureSkipVerify": {
            "description": "InsecureSkipVerify specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host. This flag should only be set if global CA signature verifcation is enabled, `VerifyCertAtClient` environmental variable is set to `true`, but no verification is desired for a specific host. If enabled with or without `VerifyCertAtClient` enabled, verification of the CA signature and SAN will be skipped. `InsecureSkipVerify` is `false` by default. `VerifyCertAtClient` is `false` by default in Istio version 1.9 but will be `true` by default in a later version where, going forward, it will be enabled by default.",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "istio.networking.v1alpha3.ClientTLSSettings.TLSmode": {
        "description": "TLS connection mode",
        "type": "string",
        "enum": [
          "DISABLE",
          "SIMPLE",
          "MUTUAL",
          "ISTIO_MUTUAL"
        ]
      },
      "istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive": {
        "description": "TCP keepalive.",
        "type": "object",
        "properties": {
          "time": {
            "description": "The time duration a connection needs to be idle before keep-alive probes start being sent. Default is to use the OS level configuration (unless overridden, Linux defaults to 7200s (ie 2 hours.)",
            "type": "string"
          },
          "probes": {
            "description": "Maximum number of keepalive probes to send without response before deciding the connection is dead. Default is to use the OS level configuration (unless overridden, Linux defaults to 9.)",
            "type": "integer"
          },
          "interval": {
            "description": "The time duration between keep-alive probes. Default is to use the OS level configuration (unless overridden, Linux defaults to 75s.)",
            "type": "string"
          }
        }
      },
      "istio.networking.v1alpha3.ExecHealthCheckConfig": {
        "type": "object",
        "properties": {
          "command": {
            "description": "Command to run. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "istio.networking.v1alpha3.HTTPHeader": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The header field name",
            "type": "string"
          },
          "value": {
            "description": "The header field value",
            "type": "string"
          }
        }
      },
      "istio.networking.v1alpha3.HTTPHealthCheckConfig": {
        "type": "object",
        "properties": {
          "path": {
            "description": "Path to access on the HTTP server.",
            "type": "string"
          },
          "port": {
            "description": "Port on which the endpoint lives.",
            "type": "integer"
          },
          "host": {
            "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
            "type": "string"
          },
          "scheme": {
            "description": "HTTP or HTTPS, defaults to HTTP",
            "type": "string"
          },
          "httpHeaders": {
            "description": "Headers the proxy will pass on to make the request. Allows repeated headers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.networking.v1alpha3.HTTPHeader"
            }
          }
        }
      },
      "istio.networking.v1alpha3.HTTPRetry": {
        "description": "Describes the retry policy to use when a HTTP request fails. For example, the following rule sets the maximum number of retries to 3 when calling ratings:v1 service, with a 2s timeout per retry attempt. A retry will be attempted if there is a connect-failure, refused_stream or when the upstream server responds with Service Unavailable(503). {{\u003ctabset category-name=\"example\"\u003e}} {{\u003ctab name=\"v1alpha3\" category-value=\"v1alpha3\"\u003e}} ```yaml apiVersion: networking.istio.io/v1alpha3 kind: VirtualService metadata: name: ratings-route spec: hosts: - ratings.prod.svc.cluster.local http: - route: - destination: host: ratings.prod.svc.cluster.local subset: v1 retries: attempts: 3 perTryTimeout: 2s retryOn: connect-failure,refused-stream,503 ``` {{\u003c/tab\u003e}} {{\u003ctab name=\"v1beta1\" category-value=\"v1beta1\"\u003e}} ```yaml apiVersion: networking.istio.io/v1beta1 kind: VirtualService metadata: name: ratings-route spec: hosts: - ratings.prod.svc.cluster.local http: - route: - destination: host: ratings.prod.svc.cluster.local subset: v1 retries: attempts: 3 perTryTimeout: 2s retryOn: gateway-error,connect-failure,refused-stream ``` {{\u003c/tab\u003e}} {{\u003c/tabset\u003e}}",
        "type": "object",
        "properties": {
          "attempts": {
            "description": "Number of retries to be allowed for a given request. The interval between retries will be determined automatically (25ms+). When request `timeout` of the [HTTP route](https://istio.io/docs/reference/config/networking/virtual-service/#HTTPRoute) or `per_try_timeout` is configured, the actual number of retries attempted also depends on the specified request `timeout` and `per_try_timeout` values.",
            "type": "integer",
            "format": "int32"
          },
          "perTryTimeout": {
            "description": "Timeout per attempt for a given request, including the initial call and any retries. Format: 1h/1m/1s/1ms. MUST BE \u003e=1ms. Default is same value as request `timeout` of the [HTTP route](https://istio.io/docs/reference/config/networking/virtual-service/#HTTPRoute), which means no timeout.",
            "type": "string"
          },
          "retryOn": {
            "description": "Specifies the conditions under which retry takes place. One or more policies can be specified using a ‘,’ delimited list. If `retry_on` specifies a valid HTTP status, it will be added to retriable_status_codes retry policy. See the [retry policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-on) and [gRPC retry policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-grpc-on) for more details.",
            "type": "string"
          },
          "retryRemoteLocalities": {
            "description": "Flag to specify whether the retries should retry to other localities. See the [retry plugin configuration](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/http/http_connection_management#retry-plugin-configuration) for more details.",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "istio.networking.v1alpha3.LocalityLoadBalancerSetting": {
        "description": "Locality-weighted load balancing allows administrators to control the distribution of traffic to endpoints based on the localities of where the traffic originates and where it will terminate. These localities are specified using arbitrary labels that designate a hierarchy of localities in {region}/{zone}/{sub-zone} form. For additional detail refer to [Locality Weight](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight) The following example shows how to setup locality weights mesh-wide. Given a mesh with workloads and their service deployed to \"us-west/zone1/*\" and \"us-west/zone2/*\". This example specifies that when traffic accessing a service originates from workloads in \"us-west/zone1/*\", 80% of the traffic will be sent to endpoints in \"us-west/zone1/*\", i.e the same zone, and the remaining 20% will go to endpoints in \"us-west/zone2/*\". This setup is intended to favor routing traffic to endpoints in the same locality. A similar setting is specified for traffic originating in \"us-west/zone2/*\". ```yaml distribute: - from: us-west/zone1/* to: \"us-west/zone1/*\": 80 \"us-west/zone2/*\": 20 - from: us-west/zone2/* to: \"us-west/zone1/*\": 20 \"us-west/zone2/*\": 80 ``` If the goal of the operator is not to distribute load across zones and regions but rather to restrict the regionality of failover to meet other operational requirements an operator can set a 'failover' policy instead of a 'distribute' policy. The following example sets up a locality failover policy for regions. Assume a service resides in zones within us-east, us-west \u0026 eu-west this example specifies that when endpoints within us-east become unhealthy traffic should failover to endpoints in any zone or sub-zone within eu-west and similarly us-west should failover to us-east. ```yaml failover: - from: us-east to: eu-west - from: us-west to: us-east ``` Locality load balancing settings.",
        "type": "object",
        "properties": {
          "distribute": {
            "description": "Optional: only one of distribute, failover or failoverPriority can be set. Explicitly specify loadbalancing weight across different zones and geographical locations. Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight) If empty, the locality weight is set according to the endpoints number within it.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute"
            }
          },
          "failover": {
            "description": "Optional: only one of distribute, failover or failoverPriority can be set. Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy. Should be used together with OutlierDetection to detect unhealthy endpoints. Note: if no OutlierDetection specified, this will not take effect.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover"
            }
          },
          "failoverPriority": {
            "description": "failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing. This is to support traffic failover across different groups of endpoints. Suppose there are total N labels specified: 1. Endpoints matching all N labels with the client proxy have priority P(0) i.e. the highest priority. 2. Endpoints matching the first N-1 labels with the client proxy have priority P(1) i.e. second highest priority. 3. By extension of this logic, endpoints matching only the first label with the client proxy has priority P(N-1) i.e. second lowest priority. 4. All the other endpoints have priority P(N) i.e. lowest priority. Note: For a label to be considered for match, the previous labels must match, i.e. nth label would be considered matched only if first n-1 labels match. It can be any label specified on both client and server workloads. The following labels which have special semantic meaning are also supported: - `topology.istio.io/network` is used to match the network metadata of an endpoint, which can be specified by pod/namespace label `topology.istio.io/network`, sidecar env `ISTIO_META_NETWORK` or MeshNetworks. - `topology.istio.io/cluster` is used to match the clusterID of an endpoint, which can be specified by pod label `topology.istio.io/cluster` or pod env `ISTIO_META_CLUSTER_ID`. - `topology.kubernetes.io/region` is used to match the region metadata of an endpoint, which maps to Kubernetes node label `topology.kubernetes.io/region` or the deprecated label `failure-domain.beta.kubernetes.io/region`. - `topology.kubernetes.io/zone` is used to match the zone metadata of an endpoint, which maps to Kubernetes node label `topology.kubernetes.io/zone` or the deprecated label `failure-domain.beta.kubernetes.io/zone`. - `topology.istio.io/subzone` is used to match the subzone metadata of an endpoint, which maps to Istio node label `topology.istio.io/subzone`. The below topology config indicates the following priority levels: ```yaml failoverPriority: - \"topology.istio.io/network\" - \"topology.kubernetes.io/region\" - \"topology.kubernetes.io/zone\" - \"topology.istio.io/subzone\" ``` 1. endpoints match same [network, region, zone, subzone] label with the client proxy have the highest priority. 2. endpoints have same [network, region, zone] label but different [subzone] label with the client proxy have the second highest priority. 3. endpoints have same [network, region] label but different [zone] label with the client proxy have the third highest priority. 4. endpoints have same [network] but different [region] labels with the client proxy have the fourth highest priority. 5. all the other endpoints have the same lowest priority. Optional: only one of distribute, failover or failoverPriority can be set. And it should be used together with `OutlierDetection` to detect unhealthy endpoints, otherwise has no effect.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "description": "enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety. e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute": {
        "description": "Describes how traffic originating in the 'from' zone or sub-zone is distributed over a set of 'to' zones. Syntax for specifying a zone is {region}/{zone}/{sub-zone} and terminal wildcards are allowed on any segment of the specification. Examples: `*` - matches all localities `us-west/*` - all zones and sub-zones within the us-west region `us-west/zone-1/*` - all sub-zones within us-west/zone-1",
        "type": "object",
        "properties": {
          "from": {
            "description": "Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.",
            "type": "string"
          },
          "to": {
            "description": "Map of upstream localities to traffic distribution weights. The sum of all weights should be 100. Any locality not present will receive no traffic.",
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        }
      },
      "istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover": {
        "description": "Specify the traffic failover policy across regions. Since zone and sub-zone failover is supported by default this only needs to be specified for regions when the operator needs to constrain traffic failover so that the default behavior of failing over to any endpoint globally does not apply. This is useful when failing over traffic across regions would not improve service health or may need to be restricted for other reasons like regulatory controls.",
        "type": "object",
        "properties": {
          "from": {
            "description": "Originating region.",
            "type": "string"
          },
          "to": {
            "description": "Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.",
            "type": "string"
          }
        }
      },
      "istio.networking.v1alpha3.ReadinessProbe": {
        "type": "object",
        "properties": {
          "timeoutSeconds": {
            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1 second.",
            "type": "integer",
            "format": "int32"
          },
          "initialDelaySeconds": {
            "description": "Number of seconds after the container has started before readiness probes are initiated.",
            "type": "integer",
            "format": "int32"
          },
          "periodSeconds": {
            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1 second.",
            "type": "integer",
            "format": "int32"
          },
          "successThreshold": {
            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1 second.",
            "type": "integer",
            "format": "int32"
          },
          "failureThreshold": {
            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3 seconds.",
            "type": "integer",
            "format": "int32"
          }
        },
        "oneOf": [
          {
            "not": {
              "anyOf": [
                {
                  "required": [
                    "httpGet"
                  ],
                  "properties": {
                    "httpGet": {
                      "$ref": "#/components/schemas/istio.networking.v1alpha3.HTTPHealthCheckConfig"
                    }
                  }
                },
                {
                  "required": [
                    "tcpSocket"
                  ],
                  "properties": {
                    "tcpSocket": {
                      "$ref": "#/components/schemas/istio.networking.v1alpha3.TCPHealthCheckConfig"
                    }
                  }
                },
                {
                  "required": [
                    "exec"
                  ],
                  "properties": {
                    "exec": {
                      "$ref": "#/components/schemas/istio.networking.v1alpha3.ExecHealthCheckConfig"
                    }
                  }
                }
              ]
            }
          },
          {
            "required": [
              "httpGet"
            ],
            "properties": {
              "httpGet": {
                "$ref": "#/components/schemas/istio.networking.v1alpha3.HTTPHealthCheckConfig"
              }
            }
          },
          {
            "required": [
              "tcpSocket"
            ],
            "properties": {
              "tcpSocket": {
                "$ref": "#/components/schemas/istio.networking.v1alpha3.TCPHealthCheckConfig"
              }
            }
          },
          {
            "required": [
              "exec"
            ],
            "properties": {
              "exec": {
                "$ref": "#/components/schemas/istio.networking.v1alpha3.ExecHealthCheckConfig"
              }
            }
          }
        ]
      },
      "istio.networking.v1alpha3.TCPHealthCheckConfig": {
        "type": "object",
        "properties": {
          "port": {
            "description": "Port of host",
            "type": "integer"
          },
          "host": {
            "description": "Host to connect to, defaults to localhost",
            "type": "string"
          }
        }
      },
      "istio.networking.v1beta1.ProxyImage": {
        "description": "The following values are used to construct proxy image url. format: `${hub}/${image_name}/${tag}-${image_type}`, example: `docker.io/istio/proxyv2:1.11.1` or `docker.io/istio/proxyv2:1.11.1-distroless`. This information was previously part of the Values API.",
        "type": "object",
        "properties": {
          "imageType": {
            "description": "The image type of the image. Istio publishes default, debug, and distroless images. Other values are allowed if those image types (example: centos) are published to the specified hub. supported values: default, debug, distroless.",
            "type": "string"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.BaseKubernetesContainerConfiguration": {
        "type": "object",
        "properties": {
          "env": {
            "description": "If present will be appended to the environment variables of the container",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.EnvVar"
            }
          },
          "resources": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.ResourceRequirements"
          },
          "image": {
            "description": "Standard Kubernetes container image configuration",
            "type": "string"
          },
          "volumeMounts": {
            "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.VolumeMount"
            }
          },
          "securityContext": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.SecurityContext"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.BaseKubernetesResourceConfig": {
        "type": "object",
        "properties": {
          "env": {
            "description": "If present will be appended to the environment variables of the container",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.EnvVar"
            }
          },
          "resources": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.ResourceRequirements"
          },
          "metadata": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.K8sObjectMeta"
          },
          "image": {
            "description": "Standard Kubernetes container image configuration",
            "type": "string"
          },
          "volumeMounts": {
            "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.VolumeMount"
            }
          },
          "livenessProbe": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.Probe"
          },
          "readinessProbe": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.Probe"
          },
          "imagePullPolicy": {
            "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.",
            "type": "string"
          },
          "securityContext": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.SecurityContext"
          },
          "volumes": {
            "description": "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.Volume"
            }
          },
          "nodeSelector": {
            "description": "Standard Kubernetes node selector configuration",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "imagePullSecrets": {
            "description": "ImagePullSecrets is an optional list of references to secrets to use for pulling any of the images.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
            }
          },
          "affinity": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.Affinity"
          },
          "tolerations": {
            "description": "If specified, the pod's tolerations.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.Toleration"
            }
          },
          "priorityClassName": {
            "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
            "type": "string"
          },
          "topologySpreadConstraints": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.TopologySpreadConstraint"
          },
          "replicas": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.Replicas"
          },
          "podMetadata": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.K8sObjectMeta"
          },
          "podDisruptionBudget": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.PodDisruptionBudget"
          },
          "deploymentStrategy": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.DeploymentStrategy"
          },
          "podSecurityContext": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.PodSecurityContext"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.CNIConfiguration": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "nullable": true
          },
          "logLevel": {
            "type": "string"
          },
          "chained": {
            "type": "boolean",
            "nullable": true
          },
          "binDir": {
            "type": "string"
          },
          "confDir": {
            "type": "string"
          },
          "excludeNamespaces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includeNamespaces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "confFileName": {
            "type": "string"
          },
          "pspClusterRoleName": {
            "type": "string"
          },
          "repair": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.CNIConfiguration.RepairConfiguration"
          },
          "taint": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.CNIConfiguration.TaintConfiguration"
          },
          "resourceQuotas": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.CNIConfiguration.ResourceQuotas"
          },
          "daemonset": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.BaseKubernetesResourceConfig"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.CNIConfiguration.RepairConfiguration": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "nullable": true
          },
          "labelPods": {
            "type": "boolean",
            "nullable": true
          },
          "deletePods": {
            "type": "boolean",
            "nullable": true
          },
          "initContainerName": {
            "type": "string"
          },
          "brokenPodLabelKey": {
            "type": "string"
          },
          "brokenPodLabelValue": {
            "type": "string"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.CNIConfiguration.ResourceQuotas": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "nullable": true
          },
          "pods": {
            "type": "string"
          },
          "priorityClasses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.CNIConfiguration.TaintConfiguration": {
        "type": "object",
        "properties": {
          "container": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.BaseKubernetesContainerConfiguration"
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.ConfigState": {
        "type": "string",
        "enum": [
          "Unspecified",
          "Created",
          "ReconcileFailed",
          "Reconciling",
          "Available",
          "Unmanaged"
        ]
      },
      "istio_operator.v2.api.v1alpha1.ContainerImageConfiguration": {
        "type": "object",
        "properties": {
          "imagePullPolicy": {
            "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.",
            "type": "string"
          },
          "imagePullSecrets": {
            "description": "ImagePullSecrets is an optional list of references to secrets to use for pulling any of the images.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
            }
          },
          "hub": {
            "description": "Default hub for container images.",
            "type": "string"
          },
          "tag": {
            "description": "Default tag for container images.",
            "type": "string"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.CustomSidecarInjectionTemplates": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "template": {
            "type": "string"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.DeploymentStrategy": {
        "type": "object",
        "properties": {
          "type": {
            "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.",
            "type": "string"
          },
          "rollingUpdate": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.DeploymentStrategy.RollingUpdateDeployment"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.DeploymentStrategy.RollingUpdateDeployment": {
        "type": "object",
        "properties": {
          "maxUnavailable": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.IntOrString"
          },
          "maxSurge": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.IntOrString"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.ExternalIstiodConfiguration": {
        "description": "ExternalIstiodConfiguration defines settings for local istiod to control remote clusters as well",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.HTTPProxyEnvsConfiguration": {
        "type": "object",
        "properties": {
          "httpProxy": {
            "type": "string"
          },
          "httpsProxy": {
            "type": "string"
          },
          "noProxy": {
            "type": "string"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.IntOrString": {
        "description": "IntOrString is a type that can hold an int32 or a string. When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type. This allows you to have, for example, a JSON field that can accept a name or number. GOTYPE: *IntOrString",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "integer"
          }
        ]
      },
      "istio_operator.v2.api.v1alpha1.IstioControlPlaneSpec": {
        "description": "IstioControlPlane defines an Istio control plane",
        "type": "object",
        "properties": {
          "version": {
            "description": "Contains the intended version for the Istio control plane.",
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.ModeType"
          },
          "logging": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.LoggingConfiguration"
          },
          "sds": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.SDSConfiguration"
          },
          "mountMtlsCerts": {
            "description": "Use the user-specified, secret volume mounted key and certs for Pilot and workloads.",
            "type": "boolean",
            "nullable": true
          },
          "istiod": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.IstiodConfiguration"
          },
          "proxy": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.ProxyConfiguration"
          },
          "proxyInit": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.ProxyInitConfiguration"
          },
          "telemetryV2": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.TelemetryV2Configuration"
          },
          "proxyWasm": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.ProxyWasmConfiguration"
          },
          "watchOneNamespace": {
            "description": "Whether to restrict the applications namespace the controller manages. If not set, controller watches all namespaces",
            "type": "boolean",
            "nullable": true
          },
          "jwtPolicy": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.JWTPolicyType"
          },
          "caAddress": {
            "description": "The customized CA address to retrieve certificates for the pods in the cluster. CSR clients such as the Istio Agent and ingress gateways can use this to specify the CA endpoint.",
            "type": "string"
          },
          "caProvider": {
            "description": "The name of the CA for workload certificates.",
            "type": "string"
          },
          "distribution": {
            "description": "Contains the intended distribution for the Istio control plane. The official distribution is used by default unless special preserved distribution value is set. The only preserved distribution is \"cisco\" as of now.",
            "type": "string"
          },
          "httpProxyEnvs": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.HTTPProxyEnvsConfiguration"
          },
          "meshConfig": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig"
          },
          "k8sResourceOverlays": {
            "description": "K8s resource overlay patches",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.K8sResourceOverlayPatch"
            }
          },
          "meshID": {
            "description": "Name of the Mesh to which this control plane belongs.",
            "type": "string"
          },
          "containerImageConfiguration": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.ContainerImageConfiguration"
          },
          "meshExpansion": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.MeshExpansionConfiguration"
          },
          "clusterID": {
            "description": "Cluster ID",
            "type": "string"
          },
          "networkName": {
            "description": "Network defines the network this cluster belongs to. This name corresponds to the networks in the map of mesh networks.",
            "type": "string"
          },
          "sidecarInjector": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.SidecarInjectorConfiguration"
          },
          "ambientTopology": {
            "description": "ambientTopology deploys and configures an ambient topology",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.IstioControlPlaneStatus": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.ConfigState"
          },
          "meshConfig": {
            "$ref": "#/components/schemas/istio.mesh.v1alpha1.MeshConfig"
          },
          "clusterID": {
            "description": "Cluster ID",
            "type": "string"
          },
          "istioControlPlaneName": {
            "description": "Name of the IstioControlPlane resource It is used on remote clusters in the PeerIstioControlPlane resource status to identify the original Istio control plane",
            "type": "string"
          },
          "gatewayAddress": {
            "description": "Current addresses for the corresponding gateways",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "istiodAddresses": {
            "description": "Current addresses for the corresponding istiod pods",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "injectionNamespaces": {
            "description": "Namespaces which are set for injection for this control plane",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "caRootCertificate": {
            "description": "Istio CA root certificate",
            "type": "string"
          },
          "errorMessage": {
            "description": "Reconciliation error message if any",
            "type": "string"
          },
          "checksums": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.StatusChecksums"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.IstiodConfiguration": {
        "description": "IstiodConfiguration defines config options for Istiod",
        "type": "object",
        "properties": {
          "deployment": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.BaseKubernetesResourceConfig"
          },
          "enableAnalysis": {
            "description": "If enabled, pilot will run Istio analyzers and write analysis errors to the Status field of any Istio Resources",
            "type": "boolean",
            "nullable": true
          },
          "enableStatus": {
            "description": "If enabled, pilot will update the CRD Status field of all Istio resources with reconciliation status",
            "type": "boolean",
            "nullable": true
          },
          "externalIstiod": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.ExternalIstiodConfiguration"
          },
          "traceSampling": {
            "type": "number",
            "nullable": true
          },
          "enableProtocolSniffingOutbound": {
            "description": "If enabled, protocol sniffing will be used for outbound listeners whose port protocol is not specified or unsupported",
            "type": "boolean",
            "nullable": true
          },
          "enableProtocolSniffingInbound": {
            "description": "If enabled, protocol sniffing will be used for inbound listeners whose port protocol is not specified or unsupported",
            "type": "boolean",
            "nullable": true
          },
          "certProvider": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.PilotCertProviderType"
          },
          "spiffe": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.SPIFFEConfiguration"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.JWTPolicyType": {
        "type": "string",
        "enum": [
          "JWTPolicyType_UNSPECIFIED",
          "THIRD_PARTY_JWT",
          "FIRST_PARTY_JWT"
        ]
      },
      "istio_operator.v2.api.v1alpha1.K8sObjectMeta": {
        "description": "Generic k8s resource metadata",
        "type": "object",
        "properties": {
          "labels": {
            "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "annotations": {
            "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.K8sResourceOverlayPatch": {
        "type": "object",
        "properties": {
          "groupVersionKind": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.K8sResourceOverlayPatch.GroupVersionKind"
          },
          "objectKey": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.NamespacedName"
          },
          "patches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.K8sResourceOverlayPatch.Patch"
            }
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.K8sResourceOverlayPatch.GroupVersionKind": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.K8sResourceOverlayPatch.Patch": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.K8sResourceOverlayPatch.Type"
          },
          "value": {
            "type": "string"
          },
          "parseValue": {
            "type": "boolean"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.K8sResourceOverlayPatch.Type": {
        "type": "string",
        "enum": [
          "unspecified",
          "replace",
          "remove"
        ]
      },
      "istio_operator.v2.api.v1alpha1.LoggingConfiguration": {
        "description": "Comma-separated minimum per-scope logging level of messages to output, in the form of \u003cscope\u003e:\u003clevel\u003e,\u003cscope\u003e:\u003clevel\u003e The control plane has different scopes depending on component, but can configure default log level across all components If empty, default scope and level will be used as configured in code",
        "type": "object",
        "properties": {
          "level": {
            "type": "string"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.MeshExpansionConfiguration": {
        "type": "object",
        "properties": {
          "gateway": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.MeshExpansionConfiguration.IstioMeshGatewayConfiguration"
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          },
          "istiod": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.MeshExpansionConfiguration.Istiod"
          },
          "webhook": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.MeshExpansionConfiguration.Webhook"
          },
          "clusterServices": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.MeshExpansionConfiguration.ClusterServices"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.MeshExpansionConfiguration.ClusterServices": {
        "type": "object",
        "properties": {
          "expose": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.MeshExpansionConfiguration.IstioMeshGatewayConfiguration": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.K8sObjectMeta"
          },
          "service": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.UnprotectedService"
          },
          "k8sResourceOverlays": {
            "description": "K8s resource overlay patches",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.K8sResourceOverlayPatch"
            }
          },
          "deployment": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.BaseKubernetesResourceConfig"
          },
          "runAsRoot": {
            "description": "Whether to run the gateway in a privileged container",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.MeshExpansionConfiguration.Istiod": {
        "type": "object",
        "properties": {
          "expose": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.MeshExpansionConfiguration.Webhook": {
        "type": "object",
        "properties": {
          "expose": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.ModeType": {
        "type": "string",
        "enum": [
          "ModeType_UNSPECIFIED",
          "ACTIVE",
          "PASSIVE"
        ]
      },
      "istio_operator.v2.api.v1alpha1.NamespacedName": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the referenced Kubernetes resource",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace of the referenced Kubernetes resource",
            "type": "string"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.OperatorEndpointsConfiguration": {
        "description": "OperatorEndpointsConfiguration defines config options for automatic SPIFFE endpoints",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.PDBConfiguration": {
        "description": "PDBConfiguration holds Pod Disruption Budget related config options",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.PilotCertProviderType": {
        "type": "string",
        "enum": [
          "PilotCertProviderType_UNSPECIFIED",
          "KUBERNETES",
          "ISTIOD"
        ]
      },
      "istio_operator.v2.api.v1alpha1.PodDisruptionBudget": {
        "description": "PodDisruptionBudget is a description of a PodDisruptionBudget",
        "type": "object",
        "properties": {
          "maxUnavailable": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.IntOrString"
          },
          "minAvailable": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.IntOrString"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.ProxyConfiguration": {
        "description": "ProxyConfiguration defines config options for Proxy",
        "type": "object",
        "properties": {
          "resources": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.ResourceRequirements"
          },
          "image": {
            "type": "string"
          },
          "lifecycle": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.Lifecycle"
          },
          "privileged": {
            "description": "If set to true, istio-proxy container will have privileged securityContext",
            "type": "boolean",
            "nullable": true
          },
          "holdApplicationUntilProxyStarts": {
            "description": "Controls if sidecar is injected at the front of the container list and blocks the start of the other containers until the proxy is ready Default value is 'false'.",
            "type": "boolean",
            "nullable": true
          },
          "enableCoreDump": {
            "description": "If set, newly injected sidecars will have core dumps enabled.",
            "type": "boolean",
            "nullable": true
          },
          "logLevel": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.ProxyLogLevel"
          },
          "componentLogLevel": {
            "description": "Per Component log level for proxy, applies to gateways and sidecars. If a component level is not set, then the \"LogLevel\" will be used. If left empty, \"misc:error\" is used.",
            "type": "string"
          },
          "clusterDomain": {
            "description": "cluster domain. Default value is \"cluster.local\"",
            "type": "string"
          },
          "includeIPRanges": {
            "description": "IncludeIPRanges the range where to capture egress traffic",
            "type": "string"
          },
          "excludeIPRanges": {
            "description": "ExcludeIPRanges the range where not to capture egress traffic",
            "type": "string"
          },
          "excludeInboundPorts": {
            "description": "ExcludeInboundPorts the comma separated list of inbound ports to be excluded from redirection to Envoy",
            "type": "string"
          },
          "excludeOutboundPorts": {
            "description": "ExcludeOutboundPorts the comma separated list of outbound ports to be excluded from redirection to Envoy",
            "type": "string"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.ProxyInitConfiguration": {
        "description": "ProxyInitConfiguration defines config options for Proxy Init containers",
        "type": "object",
        "properties": {
          "resources": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.ResourceRequirements"
          },
          "image": {
            "type": "string"
          },
          "cni": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.CNIConfiguration"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.ProxyLogLevel": {
        "type": "string",
        "enum": [
          "ProxyLogLevel_UNSPECIFIED",
          "TRACE",
          "DEBUG",
          "INFO",
          "WARNING",
          "ERROR",
          "CRITICAL",
          "OFF"
        ]
      },
      "istio_operator.v2.api.v1alpha1.ProxyWasmConfiguration": {
        "description": "ProxyWasmConfiguration defines config options for Envoy wasm",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.Quantity": {
        "description": "Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors. GOTYPE: *Quantity",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "integer"
          }
        ],
        "pattern": "^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$"
      },
      "istio_operator.v2.api.v1alpha1.Replicas": {
        "description": "Replicas contains pod replica configuration",
        "type": "object",
        "properties": {
          "count": {
            "description": "Standard Kubernetes replica count configuration",
            "type": "integer",
            "nullable": true
          },
          "max": {
            "description": "max is the upper limit for the number of replicas to which the autoscaler can scale up. min and max both need to be set the turn on autoscaling. It cannot be less than min.",
            "type": "integer",
            "nullable": true
          },
          "min": {
            "description": "min is the lower limit for the number of replicas to which the autoscaler can scale down. min and max both need to be set the turn on autoscaling.",
            "type": "integer",
            "nullable": true
          },
          "targetCPUUtilizationPercentage": {
            "description": "target average CPU utilization (represented as a percentage of requested CPU) over all the pods; default 80% will be used if not specified.",
            "type": "integer",
            "nullable": true
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.ResourceRequirements": {
        "description": "ResourceRequirements describes the compute resource requirements.",
        "type": "object",
        "properties": {
          "limits": {
            "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.Quantity"
            }
          },
          "requests": {
            "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.Quantity"
            }
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.SDSConfiguration": {
        "description": "SDSConfiguration defines Secret Discovery Service config options",
        "type": "object",
        "properties": {
          "tokenAudience": {
            "description": "The JWT token for SDS and the aud field of such JWT. See RFC 7519, section 4.1.3. When a CSR is sent from Citadel Agent to the CA (e.g. Citadel), this aud is to make sure the JWT is intended for the CA.",
            "type": "string"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.SPIFFEConfiguration": {
        "description": "SPIFFEConfiguration is for SPIFFE configuration of Pilot",
        "type": "object",
        "properties": {
          "operatorEndpoints": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.OperatorEndpointsConfiguration"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.Service": {
        "description": "Service describes the attributes that a user creates on a service.",
        "type": "object",
        "properties": {
          "type": {
            "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ExternalName\" maps to the specified externalName. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.K8sObjectMeta"
          },
          "ports": {
            "description": "The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.ServicePort"
            }
          },
          "selector": {
            "description": "Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "clusterIP": {
            "description": "clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \"None\", empty string (\"\"), or a valid IP address. \"None\" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "type": "string"
          },
          "externalIPs": {
            "description": "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sessionAffinity": {
            "description": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "type": "string"
          },
          "loadBalancerIP": {
            "description": "Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.",
            "type": "string"
          },
          "loadBalancerSourceRanges": {
            "description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "externalName": {
            "description": "externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.",
            "type": "string"
          },
          "externalTrafficPolicy": {
            "description": "externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. \"Local\" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. \"Cluster\" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.",
            "type": "string"
          },
          "healthCheckNodePort": {
            "description": "healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.",
            "type": "integer",
            "format": "int32"
          },
          "publishNotReadyAddresses": {
            "description": "publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.",
            "type": "boolean",
            "nullable": true
          },
          "sessionAffinityConfig": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.SessionAffinityConfig"
          },
          "ipFamily": {
            "description": "ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.",
            "type": "string"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.ServicePort": {
        "description": "ServicePort contains information on service's port.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. if only one ServicePort is defined on this service.",
            "type": "string"
          },
          "protocol": {
            "description": "The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\". Default is TCP.",
            "type": "string"
          },
          "port": {
            "description": "The port that will be exposed by this service.",
            "type": "integer",
            "format": "int32"
          },
          "targetPort": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.IntOrString"
          },
          "nodePort": {
            "description": "The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.SidecarInjectionTemplates": {
        "type": "object",
        "properties": {
          "gateway": {
            "description": "Overrides for the default \"gateway\" injection template. This template will be merged with the default \"gateway\" template, overwriting values, if existing.",
            "type": "string"
          },
          "sidecar": {
            "description": "Overrides for the default \"sidecar\" injection template. This template will be merged with the default \"sidecar\" template, overwriting values, if existing.",
            "type": "string"
          },
          "customTemplates": {
            "description": "Custom templates can be defined for sidecar injection. These templates can be applied by annotating pods with \"inject.istio.io/templates=\u003cname of custom template\u003e\". See https://istio.io/latest/docs/setup/additional-setup/sidecar-injection/#custom-templates-experimental.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.CustomSidecarInjectionTemplates"
            }
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.SidecarInjectorConfiguration": {
        "type": "object",
        "properties": {
          "service": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.Service"
          },
          "deployment": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.BaseKubernetesResourceConfig"
          },
          "templates": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.SidecarInjectionTemplates"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.StatusChecksums": {
        "type": "object",
        "properties": {
          "meshConfig": {
            "type": "string"
          },
          "sidecarInjector": {
            "type": "string"
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.TelemetryV2Configuration": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "istio_operator.v2.api.v1alpha1.UnprotectedService": {
        "description": "Service describes the attributes that a user creates on a service.",
        "type": "object",
        "properties": {
          "type": {
            "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ExternalName\" maps to the specified externalName. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.K8sObjectMeta"
          },
          "ports": {
            "description": "The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio_operator.v2.api.v1alpha1.ServicePort"
            }
          },
          "selector": {
            "description": "Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "clusterIP": {
            "description": "clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \"None\", empty string (\"\"), or a valid IP address. \"None\" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "type": "string"
          },
          "externalIPs": {
            "description": "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sessionAffinity": {
            "description": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "type": "string"
          },
          "loadBalancerIP": {
            "description": "Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.",
            "type": "string"
          },
          "loadBalancerSourceRanges": {
            "description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "externalName": {
            "description": "externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.",
            "type": "string"
          },
          "externalTrafficPolicy": {
            "description": "externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. \"Local\" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. \"Cluster\" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.",
            "type": "string"
          },
          "healthCheckNodePort": {
            "description": "healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.",
            "type": "integer",
            "format": "int32"
          },
          "publishNotReadyAddresses": {
            "description": "publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.",
            "type": "boolean",
            "nullable": true
          },
          "sessionAffinityConfig": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.SessionAffinityConfig"
          },
          "ipFamily": {
            "description": "ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource": {
        "description": "Represents a Persistent Disk resource in AWS. An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.",
        "type": "object",
        "properties": {
          "volumeID": {
            "description": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "type": "string"
          },
          "fsType": {
            "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine",
            "type": "string"
          },
          "partition": {
            "description": "partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
            "type": "integer",
            "format": "int32"
          },
          "readOnly": {
            "description": "readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "type": "boolean"
          }
        }
      },
      "k8s.io.api.core.v1.Affinity": {
        "description": "Affinity is a group of affinity scheduling rules.",
        "type": "object",
        "properties": {
          "nodeAffinity": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.NodeAffinity"
          },
          "podAffinity": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.PodAffinity"
          },
          "podAntiAffinity": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.PodAntiAffinity"
          }
        }
      },
      "k8s.io.api.core.v1.AzureDiskVolumeSource": {
        "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
        "type": "object",
        "properties": {
          "kind": {
            "description": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
            "type": "string"
          },
          "fsType": {
            "description": "fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "type": "string"
          },
          "readOnly": {
            "description": "readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "type": "boolean"
          },
          "diskName": {
            "description": "diskName is the Name of the data disk in the blob storage",
            "type": "string"
          },
          "diskURI": {
            "description": "diskURI is the URI of data disk in the blob storage",
            "type": "string"
          },
          "cachingMode": {
            "description": "cachingMode is the Host Caching mode: None, Read Only, Read Write.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.AzureFileVolumeSource": {
        "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
        "type": "object",
        "properties": {
          "readOnly": {
            "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "type": "boolean"
          },
          "secretName": {
            "description": "secretName is the  name of secret that contains Azure Storage Account Name and Key",
            "type": "string"
          },
          "shareName": {
            "description": "shareName is the azure share Name",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.CSIVolumeSource": {
        "description": "Represents a source location of a volume to mount, managed by an external CSI driver",
        "type": "object",
        "properties": {
          "fsType": {
            "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
            "type": "string"
          },
          "readOnly": {
            "description": "readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).",
            "type": "boolean"
          },
          "driver": {
            "description": "driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.",
            "type": "string"
          },
          "volumeAttributes": {
            "description": "volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "nodePublishSecretRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
          }
        }
      },
      "k8s.io.api.core.v1.Capabilities": {
        "description": "Adds and removes POSIX capabilities from running containers.",
        "type": "object",
        "properties": {
          "add": {
            "description": "Added capabilities",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "drop": {
            "description": "Removed capabilities",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "k8s.io.api.core.v1.CephFSVolumeSource": {
        "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.",
        "type": "object",
        "properties": {
          "path": {
            "description": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
            "type": "string"
          },
          "readOnly": {
            "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "type": "boolean"
          },
          "monitors": {
            "description": "monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "user": {
            "description": "user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "type": "string"
          },
          "secretFile": {
            "description": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "type": "string"
          },
          "secretRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
          }
        }
      },
      "k8s.io.api.core.v1.CinderVolumeSource": {
        "description": "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
        "type": "object",
        "properties": {
          "volumeID": {
            "description": "volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "type": "string"
          },
          "fsType": {
            "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "type": "string"
          },
          "readOnly": {
            "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "type": "boolean"
          },
          "secretRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
          }
        }
      },
      "k8s.io.api.core.v1.ClientIPConfig": {
        "description": "ClientIPConfig represents the configurations of Client IP based session affinity.",
        "type": "object",
        "properties": {
          "timeoutSeconds": {
            "description": "timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be \u003e0 \u0026\u0026 \u003c=86400(for 1 day) if ServiceAffinity == \"ClientIP\". Default value is 10800(for 3 hours).",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "k8s.io.api.core.v1.ConfigMapKeySelector": {
        "description": "Selects a key from a ConfigMap.",
        "type": "object",
        "properties": {
          "key": {
            "description": "The key to select.",
            "type": "string"
          },
          "localObjectReference": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
          },
          "optional": {
            "description": "Specify whether the ConfigMap or its key must be defined",
            "type": "boolean"
          }
        }
      },
      "k8s.io.api.core.v1.ConfigMapProjection": {
        "description": "Adapts a ConfigMap into a projected volume. The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.",
        "type": "object",
        "properties": {
          "items": {
            "description": "items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.KeyToPath"
            }
          },
          "localObjectReference": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
          },
          "optional": {
            "description": "optional specify whether the ConfigMap or its keys must be defined",
            "type": "boolean"
          }
        }
      },
      "k8s.io.api.core.v1.ConfigMapVolumeSource": {
        "description": "Adapts a ConfigMap into a volume. The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.",
        "type": "object",
        "properties": {
          "items": {
            "description": "items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.KeyToPath"
            }
          },
          "localObjectReference": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
          },
          "optional": {
            "description": "optional specify whether the ConfigMap or its keys must be defined",
            "type": "boolean"
          },
          "defaultMode": {
            "description": "defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "k8s.io.api.core.v1.DownwardAPIProjection": {
        "description": "Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.",
        "type": "object",
        "properties": {
          "items": {
            "description": "Items is a list of DownwardAPIVolume file",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.DownwardAPIVolumeFile"
            }
          }
        }
      },
      "k8s.io.api.core.v1.DownwardAPIVolumeFile": {
        "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
        "type": "object",
        "properties": {
          "path": {
            "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
            "type": "string"
          },
          "fieldRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ObjectFieldSelector"
          },
          "resourceFieldRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ResourceFieldSelector"
          },
          "mode": {
            "description": "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "k8s.io.api.core.v1.DownwardAPIVolumeSource": {
        "description": "DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.",
        "type": "object",
        "properties": {
          "items": {
            "description": "Items is a list of downward API volume file",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.DownwardAPIVolumeFile"
            }
          },
          "defaultMode": {
            "description": "Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "k8s.io.api.core.v1.EmptyDirVolumeSource": {
        "description": "Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.",
        "type": "object",
        "properties": {
          "medium": {
            "description": "medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "type": "string"
          },
          "sizeLimit": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        }
      },
      "k8s.io.api.core.v1.EnvVar": {
        "description": "EnvVar represents an environment variable present in a Container.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
            "type": "string"
          },
          "value": {
            "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
            "type": "string"
          },
          "valueFrom": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.EnvVarSource"
          }
        }
      },
      "k8s.io.api.core.v1.EnvVarSource": {
        "description": "EnvVarSource represents a source for the value of an EnvVar.",
        "type": "object",
        "properties": {
          "fieldRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ObjectFieldSelector"
          },
          "resourceFieldRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ResourceFieldSelector"
          },
          "configMapKeyRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ConfigMapKeySelector"
          },
          "secretKeyRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.SecretKeySelector"
          }
        }
      },
      "k8s.io.api.core.v1.EphemeralVolumeSource": {
        "description": "Represents an ephemeral volume that is handled by a normal storage driver.",
        "type": "object",
        "properties": {
          "volumeClaimTemplate": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.PersistentVolumeClaimTemplate"
          }
        }
      },
      "k8s.io.api.core.v1.ExecAction": {
        "description": "ExecAction describes a \"run in container\" action.",
        "type": "object",
        "properties": {
          "command": {
            "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "k8s.io.api.core.v1.FCVolumeSource": {
        "description": "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.",
        "type": "object",
        "properties": {
          "fsType": {
            "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine",
            "type": "string"
          },
          "readOnly": {
            "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "type": "boolean"
          },
          "targetWWNs": {
            "description": "targetWWNs is Optional: FC target worldwide names (WWNs)",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lun": {
            "description": "lun is Optional: FC target lun number",
            "type": "integer",
            "format": "int32"
          },
          "wwids": {
            "description": "wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "k8s.io.api.core.v1.FlexVolumeSource": {
        "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
        "type": "object",
        "properties": {
          "fsType": {
            "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
            "type": "string"
          },
          "readOnly": {
            "description": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "type": "boolean"
          },
          "driver": {
            "description": "driver is the name of the driver to use for this volume.",
            "type": "string"
          },
          "secretRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
          },
          "options": {
            "description": "options is Optional: this field holds extra command options if any.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "k8s.io.api.core.v1.FlockerVolumeSource": {
        "description": "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.",
        "type": "object",
        "properties": {
          "datasetName": {
            "description": "datasetName is Name of the dataset stored as metadata -\u003e name on the dataset for Flocker should be considered as deprecated",
            "type": "string"
          },
          "datasetUUID": {
            "description": "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.GCEPersistentDiskVolumeSource": {
        "description": "Represents a Persistent Disk resource in Google Compute Engine. A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.",
        "type": "object",
        "properties": {
          "fsType": {
            "description": "fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine",
            "type": "string"
          },
          "partition": {
            "description": "partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "type": "integer",
            "format": "int32"
          },
          "readOnly": {
            "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "type": "boolean"
          },
          "pdName": {
            "description": "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.GRPCAction": {
        "type": "object",
        "properties": {
          "port": {
            "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
            "type": "integer",
            "format": "int32"
          },
          "service": {
            "description": "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). If this is not specified, the default behavior is defined by gRPC.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.GitRepoVolumeSource": {
        "description": "Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
        "type": "object",
        "properties": {
          "repository": {
            "description": "repository is the URL",
            "type": "string"
          },
          "revision": {
            "description": "revision is the commit hash for the specified revision.",
            "type": "string"
          },
          "directory": {
            "description": "directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.GlusterfsVolumeSource": {
        "description": "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.",
        "type": "object",
        "properties": {
          "path": {
            "description": "path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "type": "string"
          },
          "readOnly": {
            "description": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "type": "boolean"
          },
          "endpoints": {
            "description": "endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.HTTPGetAction": {
        "description": "HTTPGetAction describes an action based on HTTP Get requests.",
        "type": "object",
        "properties": {
          "path": {
            "description": "Path to access on the HTTP server.",
            "type": "string"
          },
          "port": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.util.intstr.IntOrString"
          },
          "host": {
            "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
            "type": "string"
          },
          "scheme": {
            "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
            "type": "string"
          },
          "httpHeaders": {
            "description": "Custom headers to set in the request. HTTP allows repeated headers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.HTTPHeader"
            }
          }
        }
      },
      "k8s.io.api.core.v1.HTTPHeader": {
        "description": "HTTPHeader describes a custom header to be used in HTTP probes",
        "type": "object",
        "properties": {
          "name": {
            "description": "The header field name",
            "type": "string"
          },
          "value": {
            "description": "The header field value",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.HostPathVolumeSource": {
        "description": "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.",
        "type": "object",
        "properties": {
          "path": {
            "description": "path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "type": "string"
          },
          "type": {
            "description": "type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.ISCSIVolumeSource": {
        "description": "Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
        "type": "object",
        "properties": {
          "fsType": {
            "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine",
            "type": "string"
          },
          "readOnly": {
            "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
            "type": "boolean"
          },
          "secretRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
          },
          "lun": {
            "description": "lun represents iSCSI Target Lun number.",
            "type": "integer",
            "format": "int32"
          },
          "targetPortal": {
            "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "type": "string"
          },
          "iqn": {
            "description": "iqn is the target iSCSI Qualified Name.",
            "type": "string"
          },
          "iscsiInterface": {
            "description": "iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).",
            "type": "string"
          },
          "portals": {
            "description": "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "chapAuthDiscovery": {
            "description": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication",
            "type": "boolean"
          },
          "chapAuthSession": {
            "description": "chapAuthSession defines whether support iSCSI Session CHAP authentication",
            "type": "boolean"
          },
          "initiatorName": {
            "description": "initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface \u003ctarget portal\u003e:\u003cvolume name\u003e will be created for the connection.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.KeyToPath": {
        "description": "Maps a string key to a path within a volume.",
        "type": "object",
        "properties": {
          "path": {
            "description": "path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "type": "string"
          },
          "key": {
            "description": "key is the key to project.",
            "type": "string"
          },
          "mode": {
            "description": "mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "k8s.io.api.core.v1.Lifecycle": {
        "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
        "type": "object",
        "properties": {
          "postStart": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LifecycleHandler"
          },
          "preStop": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LifecycleHandler"
          }
        }
      },
      "k8s.io.api.core.v1.LifecycleHandler": {
        "description": "LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.",
        "type": "object",
        "properties": {
          "exec": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ExecAction"
          },
          "httpGet": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.HTTPGetAction"
          },
          "tcpSocket": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.TCPSocketAction"
          }
        }
      },
      "k8s.io.api.core.v1.LocalObjectReference": {
        "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.NFSVolumeSource": {
        "description": "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.",
        "type": "object",
        "properties": {
          "path": {
            "description": "path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "type": "string"
          },
          "readOnly": {
            "description": "readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "type": "boolean"
          },
          "server": {
            "description": "server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.NodeAffinity": {
        "description": "Node affinity is a group of node affinity scheduling rules.",
        "type": "object",
        "properties": {
          "requiredDuringSchedulingIgnoredDuringExecution": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.NodeSelector"
          },
          "preferredDuringSchedulingIgnoredDuringExecution": {
            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.PreferredSchedulingTerm"
            }
          }
        }
      },
      "k8s.io.api.core.v1.NodeSelector": {
        "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
        "type": "object",
        "properties": {
          "nodeSelectorTerms": {
            "description": "Required. A list of node selector terms. The terms are ORed.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.NodeSelectorTerm"
            }
          }
        }
      },
      "k8s.io.api.core.v1.NodeSelectorRequirement": {
        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
        "type": "object",
        "properties": {
          "key": {
            "description": "The label key that the selector applies to.",
            "type": "string"
          },
          "operator": {
            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "type": "string"
          },
          "values": {
            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "k8s.io.api.core.v1.NodeSelectorTerm": {
        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
        "type": "object",
        "properties": {
          "matchExpressions": {
            "description": "A list of node selector requirements by node's labels.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.NodeSelectorRequirement"
            }
          },
          "matchFields": {
            "description": "A list of node selector requirements by node's fields.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.NodeSelectorRequirement"
            }
          }
        }
      },
      "k8s.io.api.core.v1.ObjectFieldSelector": {
        "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
            "type": "string"
          },
          "fieldPath": {
            "description": "Path of the field to select in the specified API version.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.PersistentVolumeClaimSpec": {
        "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
        "type": "object",
        "properties": {
          "resources": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ResourceRequirements"
          },
          "accessModes": {
            "description": "accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "selector": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
          },
          "volumeName": {
            "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
            "type": "string"
          },
          "storageClassName": {
            "description": "storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
            "type": "string"
          },
          "volumeMode": {
            "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.",
            "type": "string"
          },
          "dataSource": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.TypedLocalObjectReference"
          },
          "dataSourceRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.TypedLocalObjectReference"
          }
        }
      },
      "k8s.io.api.core.v1.PersistentVolumeClaimTemplate": {
        "description": "PersistentVolumeClaimTemplate is used to produce PersistentVolumeClaim objects as part of an EphemeralVolumeSource.",
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.PersistentVolumeClaimSpec"
          }
        }
      },
      "k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource": {
        "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
        "type": "object",
        "properties": {
          "readOnly": {
            "description": "readOnly Will force the ReadOnly setting in VolumeMounts. Default false.",
            "type": "boolean"
          },
          "claimName": {
            "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource": {
        "description": "Represents a Photon Controller persistent disk resource.",
        "type": "object",
        "properties": {
          "fsType": {
            "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "type": "string"
          },
          "pdID": {
            "description": "pdID is the ID that identifies Photon Controller persistent disk",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.PodAffinity": {
        "description": "Pod affinity is a group of inter pod affinity scheduling rules.",
        "type": "object",
        "properties": {
          "requiredDuringSchedulingIgnoredDuringExecution": {
            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.PodAffinityTerm"
            }
          },
          "preferredDuringSchedulingIgnoredDuringExecution": {
            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.WeightedPodAffinityTerm"
            }
          }
        }
      },
      "k8s.io.api.core.v1.PodAffinityTerm": {
        "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u003ctopologyKey\u003e matches that of any node on which a pod of the set of pods is running",
        "type": "object",
        "properties": {
          "labelSelector": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
          },
          "namespaces": {
            "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "topologyKey": {
            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
            "type": "string"
          },
          "namespaceSelector": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
          }
        }
      },
      "k8s.io.api.core.v1.PodAntiAffinity": {
        "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
        "type": "object",
        "properties": {
          "requiredDuringSchedulingIgnoredDuringExecution": {
            "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.PodAffinityTerm"
            }
          },
          "preferredDuringSchedulingIgnoredDuringExecution": {
            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.WeightedPodAffinityTerm"
            }
          }
        }
      },
      "k8s.io.api.core.v1.PodSecurityContext": {
        "description": "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
        "type": "object",
        "properties": {
          "seLinuxOptions": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.SELinuxOptions"
          },
          "windowsOptions": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.WindowsSecurityContextOptions"
          },
          "runAsUser": {
            "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
            "type": "integer",
            "format": "int64"
          },
          "runAsGroup": {
            "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
            "type": "integer",
            "format": "int64"
          },
          "runAsNonRoot": {
            "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "type": "boolean"
          },
          "supplementalGroups": {
            "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container. Note that this field cannot be set when spec.os.name is windows.",
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "fsGroup": {
            "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.",
            "type": "integer",
            "format": "int64"
          },
          "sysctls": {
            "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.Sysctl"
            }
          },
          "fsGroupChangePolicy": {
            "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used. Note that this field cannot be set when spec.os.name is windows.",
            "type": "string"
          },
          "seccompProfile": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.SeccompProfile"
          }
        }
      },
      "k8s.io.api.core.v1.PortworxVolumeSource": {
        "description": "PortworxVolumeSource represents a Portworx volume resource.",
        "type": "object",
        "properties": {
          "volumeID": {
            "description": "volumeID uniquely identifies a Portworx volume",
            "type": "string"
          },
          "fsType": {
            "description": "fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "type": "string"
          },
          "readOnly": {
            "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "type": "boolean"
          }
        }
      },
      "k8s.io.api.core.v1.PreferredSchedulingTerm": {
        "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
        "type": "object",
        "properties": {
          "weight": {
            "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
            "type": "integer",
            "format": "int32"
          },
          "preference": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.NodeSelectorTerm"
          }
        }
      },
      "k8s.io.api.core.v1.Probe": {
        "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
        "type": "object",
        "properties": {
          "timeoutSeconds": {
            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "type": "integer",
            "format": "int32"
          },
          "terminationGracePeriodSeconds": {
            "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
            "type": "integer",
            "format": "int64"
          },
          "handler": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ProbeHandler"
          },
          "initialDelaySeconds": {
            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "type": "integer",
            "format": "int32"
          },
          "periodSeconds": {
            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
            "type": "integer",
            "format": "int32"
          },
          "successThreshold": {
            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "type": "integer",
            "format": "int32"
          },
          "failureThreshold": {
            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "k8s.io.api.core.v1.ProbeHandler": {
        "description": "ProbeHandler defines a specific action that should be taken in a probe. One and only one of the fields must be specified.",
        "type": "object",
        "properties": {
          "exec": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ExecAction"
          },
          "httpGet": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.HTTPGetAction"
          },
          "tcpSocket": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.TCPSocketAction"
          },
          "grpc": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.GRPCAction"
          }
        }
      },
      "k8s.io.api.core.v1.ProjectedVolumeSource": {
        "description": "Represents a projected volume source",
        "type": "object",
        "properties": {
          "defaultMode": {
            "description": "defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "type": "integer",
            "format": "int32"
          },
          "sources": {
            "description": "sources is the list of volume projections",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.VolumeProjection"
            }
          }
        }
      },
      "k8s.io.api.core.v1.QuobyteVolumeSource": {
        "description": "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.",
        "type": "object",
        "properties": {
          "group": {
            "description": "group to map volume access to Default is no group",
            "type": "string"
          },
          "readOnly": {
            "description": "readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
            "type": "boolean"
          },
          "user": {
            "description": "user to map volume access to Defaults to serivceaccount user",
            "type": "string"
          },
          "registry": {
            "description": "registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
            "type": "string"
          },
          "volume": {
            "description": "volume is a string that references an already created Quobyte volume by name.",
            "type": "string"
          },
          "tenant": {
            "description": "tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.RBDVolumeSource": {
        "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.",
        "type": "object",
        "properties": {
          "fsType": {
            "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine",
            "type": "string"
          },
          "readOnly": {
            "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "type": "boolean"
          },
          "monitors": {
            "description": "monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "user": {
            "description": "user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "type": "string"
          },
          "secretRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
          },
          "image": {
            "description": "image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "type": "string"
          },
          "pool": {
            "description": "pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "type": "string"
          },
          "keyring": {
            "description": "keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.ResourceFieldSelector": {
        "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
        "type": "object",
        "properties": {
          "resource": {
            "description": "Required: resource to select",
            "type": "string"
          },
          "containerName": {
            "description": "Container name: required for volumes, optional for env vars",
            "type": "string"
          },
          "divisor": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        }
      },
      "k8s.io.api.core.v1.ResourceRequirements": {
        "description": "ResourceRequirements describes the compute resource requirements.",
        "type": "object",
        "properties": {
          "limits": {
            "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
            }
          },
          "requests": {
            "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
            }
          }
        }
      },
      "k8s.io.api.core.v1.SELinuxOptions": {
        "description": "SELinuxOptions are the labels to be applied to the container",
        "type": "object",
        "properties": {
          "type": {
            "description": "Type is a SELinux type label that applies to the container.",
            "type": "string"
          },
          "user": {
            "description": "User is a SELinux user label that applies to the container.",
            "type": "string"
          },
          "role": {
            "description": "Role is a SELinux role label that applies to the container.",
            "type": "string"
          },
          "level": {
            "description": "Level is SELinux level label that applies to the container.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.ScaleIOVolumeSource": {
        "description": "ScaleIOVolumeSource represents a persistent ScaleIO volume",
        "type": "object",
        "properties": {
          "fsType": {
            "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".",
            "type": "string"
          },
          "readOnly": {
            "description": "readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "type": "boolean"
          },
          "secretRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
          },
          "volumeName": {
            "description": "volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.",
            "type": "string"
          },
          "gateway": {
            "description": "gateway is the host address of the ScaleIO API Gateway.",
            "type": "string"
          },
          "system": {
            "description": "system is the name of the storage system as configured in ScaleIO.",
            "type": "string"
          },
          "sslEnabled": {
            "description": "sslEnabled Flag enable/disable SSL communication with Gateway, default false",
            "type": "boolean"
          },
          "protectionDomain": {
            "description": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.",
            "type": "string"
          },
          "storagePool": {
            "description": "storagePool is the ScaleIO Storage Pool associated with the protection domain.",
            "type": "string"
          },
          "storageMode": {
            "description": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.SeccompProfile": {
        "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
        "type": "object",
        "properties": {
          "type": {
            "description": "type indicates which kind of seccomp profile will be applied. Valid options are: Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.",
            "type": "string"
          },
          "localhostProfile": {
            "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\".",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.SecretKeySelector": {
        "description": "SecretKeySelector selects a key of a Secret.",
        "type": "object",
        "properties": {
          "key": {
            "description": "The key of the secret to select from.  Must be a valid secret key.",
            "type": "string"
          },
          "localObjectReference": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
          },
          "optional": {
            "description": "Specify whether the Secret or its key must be defined",
            "type": "boolean"
          }
        }
      },
      "k8s.io.api.core.v1.SecretProjection": {
        "description": "Adapts a secret into a projected volume. The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.",
        "type": "object",
        "properties": {
          "items": {
            "description": "items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.KeyToPath"
            }
          },
          "localObjectReference": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
          },
          "optional": {
            "description": "optional field specify whether the Secret or its key must be defined",
            "type": "boolean"
          }
        }
      },
      "k8s.io.api.core.v1.SecretVolumeSource": {
        "description": "Adapts a Secret into a volume. The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.",
        "type": "object",
        "properties": {
          "items": {
            "description": "items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.api.core.v1.KeyToPath"
            }
          },
          "secretName": {
            "description": "secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
            "type": "string"
          },
          "optional": {
            "description": "optional field specify whether the Secret or its keys must be defined",
            "type": "boolean"
          },
          "defaultMode": {
            "description": "defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "k8s.io.api.core.v1.SecurityContext": {
        "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
        "type": "object",
        "properties": {
          "seLinuxOptions": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.SELinuxOptions"
          },
          "windowsOptions": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.WindowsSecurityContextOptions"
          },
          "runAsUser": {
            "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
            "type": "integer",
            "format": "int64"
          },
          "runAsGroup": {
            "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
            "type": "integer",
            "format": "int64"
          },
          "runAsNonRoot": {
            "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "type": "boolean"
          },
          "seccompProfile": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.SeccompProfile"
          },
          "capabilities": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.Capabilities"
          },
          "privileged": {
            "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.",
            "type": "boolean"
          },
          "readOnlyRootFilesystem": {
            "description": "Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.",
            "type": "boolean"
          },
          "allowPrivilegeEscalation": {
            "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.",
            "type": "boolean"
          },
          "procMount": {
            "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.ServiceAccountTokenProjection": {
        "description": "ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).",
        "type": "object",
        "properties": {
          "path": {
            "description": "path is the path relative to the mount point of the file to project the token into.",
            "type": "string"
          },
          "audience": {
            "description": "audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
            "type": "string"
          },
          "expirationSeconds": {
            "description": "expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "k8s.io.api.core.v1.SessionAffinityConfig": {
        "description": "SessionAffinityConfig represents the configurations of session affinity.",
        "type": "object",
        "properties": {
          "clientIP": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ClientIPConfig"
          }
        }
      },
      "k8s.io.api.core.v1.StorageOSVolumeSource": {
        "description": "Represents a StorageOS persistent volume resource.",
        "type": "object",
        "properties": {
          "fsType": {
            "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "type": "string"
          },
          "readOnly": {
            "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "type": "boolean"
          },
          "secretRef": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.LocalObjectReference"
          },
          "volumeName": {
            "description": "volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.",
            "type": "string"
          },
          "volumeNamespace": {
            "description": "volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.Sysctl": {
        "description": "Sysctl defines a kernel parameter to be set",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of a property to set",
            "type": "string"
          },
          "value": {
            "description": "Value of a property to set",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.TCPSocketAction": {
        "description": "TCPSocketAction describes an action based on opening a socket",
        "type": "object",
        "properties": {
          "port": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.util.intstr.IntOrString"
          },
          "host": {
            "description": "Optional: Host name to connect to, defaults to the pod IP.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.Toleration": {
        "description": "The pod this Toleration is attached to tolerates any taint that matches the triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
        "type": "object",
        "properties": {
          "key": {
            "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
            "type": "string"
          },
          "operator": {
            "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "type": "string"
          },
          "value": {
            "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
            "type": "string"
          },
          "effect": {
            "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
            "type": "string"
          },
          "tolerationSeconds": {
            "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "k8s.io.api.core.v1.TopologySpreadConstraint": {
        "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
        "type": "object",
        "properties": {
          "labelSelector": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
          },
          "topologyKey": {
            "description": "TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each \u003ckey, value\u003e as a \"bucket\", and try to put balanced number of pods into each bucket. It's a required field.",
            "type": "string"
          },
          "maxSkew": {
            "description": "MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.",
            "type": "integer",
            "format": "int32"
          },
          "whenUnsatisfiable": {
            "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location, but giving higher precedence to topologies that would help reduce the skew. A constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assignment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.TypedLocalObjectReference": {
        "description": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name is the name of resource being referenced",
            "type": "string"
          },
          "kind": {
            "description": "Kind is the type of resource being referenced",
            "type": "string"
          },
          "apiGroup": {
            "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.Volume": {
        "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
        "type": "object",
        "properties": {
          "name": {
            "description": "name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "type": "string"
          },
          "volumeSource": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.VolumeSource"
          }
        }
      },
      "k8s.io.api.core.v1.VolumeMount": {
        "description": "VolumeMount describes a mounting of a Volume within a container.",
        "type": "object",
        "properties": {
          "name": {
            "description": "This must match the Name of a Volume.",
            "type": "string"
          },
          "readOnly": {
            "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
            "type": "boolean"
          },
          "mountPath": {
            "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
            "type": "string"
          },
          "subPath": {
            "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
            "type": "string"
          },
          "mountPropagation": {
            "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
            "type": "string"
          },
          "subPathExpr": {
            "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.VolumeProjection": {
        "description": "Projection that may be projected along with other supported volume types",
        "type": "object",
        "properties": {
          "configMap": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ConfigMapProjection"
          },
          "secret": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.SecretProjection"
          },
          "downwardAPI": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.DownwardAPIProjection"
          },
          "serviceAccountToken": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ServiceAccountTokenProjection"
          }
        }
      },
      "k8s.io.api.core.v1.VolumeSource": {
        "description": "Represents the source of a volume to mount. Only one of its members may be specified.",
        "type": "object",
        "properties": {
          "configMap": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ConfigMapVolumeSource"
          },
          "gcePersistentDisk": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.GCEPersistentDiskVolumeSource"
          },
          "awsElasticBlockStore": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource"
          },
          "hostPath": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.HostPathVolumeSource"
          },
          "glusterfs": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.GlusterfsVolumeSource"
          },
          "nfs": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.NFSVolumeSource"
          },
          "rbd": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.RBDVolumeSource"
          },
          "iscsi": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ISCSIVolumeSource"
          },
          "cinder": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.CinderVolumeSource"
          },
          "cephfs": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.CephFSVolumeSource"
          },
          "fc": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.FCVolumeSource"
          },
          "flocker": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.FlockerVolumeSource"
          },
          "flexVolume": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.FlexVolumeSource"
          },
          "azureFile": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.AzureFileVolumeSource"
          },
          "vsphereVolume": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource"
          },
          "quobyte": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.QuobyteVolumeSource"
          },
          "azureDisk": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.AzureDiskVolumeSource"
          },
          "photonPersistentDisk": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource"
          },
          "portworxVolume": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.PortworxVolumeSource"
          },
          "scaleIO": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ScaleIOVolumeSource"
          },
          "storageos": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.StorageOSVolumeSource"
          },
          "csi": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.CSIVolumeSource"
          },
          "secret": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.SecretVolumeSource"
          },
          "downwardAPI": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.DownwardAPIVolumeSource"
          },
          "emptyDir": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.EmptyDirVolumeSource"
          },
          "gitRepo": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.GitRepoVolumeSource"
          },
          "persistentVolumeClaim": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource"
          },
          "projected": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.ProjectedVolumeSource"
          },
          "ephemeral": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.EphemeralVolumeSource"
          }
        }
      },
      "k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource": {
        "description": "Represents a vSphere volume resource.",
        "type": "object",
        "properties": {
          "fsType": {
            "description": "fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "type": "string"
          },
          "volumePath": {
            "description": "volumePath is the path that identifies vSphere volume vmdk",
            "type": "string"
          },
          "storagePolicyName": {
            "description": "storagePolicyName is the storage Policy Based Management (SPBM) profile name.",
            "type": "string"
          },
          "storagePolicyID": {
            "description": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
            "type": "string"
          }
        }
      },
      "k8s.io.api.core.v1.WeightedPodAffinityTerm": {
        "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
        "type": "object",
        "properties": {
          "weight": {
            "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
            "type": "integer",
            "format": "int32"
          },
          "podAffinityTerm": {
            "$ref": "#/components/schemas/k8s.io.api.core.v1.PodAffinityTerm"
          }
        }
      },
      "k8s.io.api.core.v1.WindowsSecurityContextOptions": {
        "description": "WindowsSecurityContextOptions contain Windows-specific options and credentials.",
        "type": "object",
        "properties": {
          "gmsaCredentialSpecName": {
            "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
            "type": "string"
          },
          "gmsaCredentialSpec": {
            "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
            "type": "string"
          },
          "runAsUserName": {
            "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "type": "string"
          },
          "hostProcess": {
            "description": "HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.",
            "type": "boolean"
          }
        }
      },
      "k8s.io.apimachinery.pkg.api.resource.Quantity": {
        "description": "Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors. The serialization format is: \u003cquantity\u003e        ::= \u003csignedNumber\u003e\u003csuffix\u003e (Note that \u003csuffix\u003e may be empty, from the \"\" case in \u003cdecimalSI\u003e.) \u003cdigit\u003e           ::= 0 | 1 | ... | 9 \u003cdigits\u003e          ::= \u003cdigit\u003e | \u003cdigit\u003e\u003cdigits\u003e \u003cnumber\u003e          ::= \u003cdigits\u003e | \u003cdigits\u003e.\u003cdigits\u003e | \u003cdigits\u003e. | .\u003cdigits\u003e \u003csign\u003e            ::= \"+\" | \"-\" \u003csignedNumber\u003e    ::= \u003cnumber\u003e | \u003csign\u003e\u003cnumber\u003e \u003csuffix\u003e          ::= \u003cbinarySI\u003e | \u003cdecimalExponent\u003e | \u003cdecimalSI\u003e \u003cbinarySI\u003e        ::= Ki | Mi | Gi | Ti | Pi | Ei (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html) \u003cdecimalSI\u003e       ::= m | \"\" | k | M | G | T | P | E (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.) \u003cdecimalExponent\u003e ::= \"e\" \u003csignedNumber\u003e | \"E\" \u003csignedNumber\u003e No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities. When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized. Before serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that: a. No precision is lost b. No fractional digits will be emitted c. The exponent (or suffix) is as large as possible. The sign will be omitted unless the number is negative. Examples: 1.5 will be serialized as \"1500m\" 1.5Gi will be serialized as \"1536Mi\" Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise. Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.) This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.",
        "type": "object",
        "properties": {
          "string": {
            "type": "string"
          }
        }
      },
      "k8s.io.apimachinery.pkg.apis.meta.v1.FieldsV1": {
        "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format. Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map 'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item 'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list 'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set. The exact format is defined in sigs.k8s.io/structured-merge-diff",
        "type": "object",
        "properties": {
          "Raw": {
            "description": "Raw is the underlying serialization of this object.",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector": {
        "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
        "type": "object",
        "properties": {
          "matchLabels": {
            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "matchExpressions": {
            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
            }
          }
        }
      },
      "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
        "type": "object",
        "properties": {
          "key": {
            "description": "key is the label key that the selector applies to.",
            "type": "string"
          },
          "operator": {
            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
            "type": "string"
          },
          "values": {
            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "k8s.io.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
        "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
        "type": "object",
        "properties": {
          "time": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
          },
          "apiVersion": {
            "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
            "type": "string"
          },
          "manager": {
            "description": "Manager is an identifier of the workflow managing these fields.",
            "type": "string"
          },
          "operation": {
            "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
            "type": "string"
          },
          "fieldsType": {
            "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
            "type": "string"
          },
          "fieldsV1": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.FieldsV1"
          },
          "subresource": {
            "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
            "type": "string"
          }
        }
      },
      "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
        "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "type": "string"
          },
          "resourceVersion": {
            "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
            "type": "string"
          },
          "selfLink": {
            "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
            "type": "string"
          },
          "generateName": {
            "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
            "type": "string"
          },
          "uid": {
            "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
            "type": "string"
          },
          "generation": {
            "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
            "type": "integer",
            "format": "int64"
          },
          "creationTimestamp": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
          },
          "deletionTimestamp": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
          },
          "deletionGracePeriodSeconds": {
            "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
            "type": "integer",
            "format": "int64"
          },
          "labels": {
            "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "annotations": {
            "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "ownerReferences": {
            "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference"
            }
          },
          "finalizers": {
            "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clusterName": {
            "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
            "type": "string"
          },
          "managedFields": {
            "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
            }
          }
        }
      },
      "k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference": {
        "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "type": "string"
          },
          "apiVersion": {
            "description": "API version of the referent.",
            "type": "string"
          },
          "kind": {
            "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "uid": {
            "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
            "type": "string"
          },
          "controller": {
            "description": "If true, this reference points to the managing controller.",
            "type": "boolean"
          },
          "blockOwnerDeletion": {
            "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
            "type": "boolean"
          }
        }
      },
      "k8s.io.apimachinery.pkg.apis.meta.v1.Time": {
        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
        "type": "object",
        "properties": {
          "seconds": {
            "description": "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",
            "type": "integer",
            "format": "int64"
          },
          "nanos": {
            "description": "Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "k8s.io.apimachinery.pkg.util.intstr.IntOrString": {
        "description": "IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. TODO: Rename to Int32OrString",
        "type": "object",
        "properties": {
          "type": {
            "type": "integer",
            "format": "int64"
          },
          "intVal": {
            "type": "integer",
            "format": "int32"
          },
          "strVal": {
            "type": "string"
          }
        }
      }
    }
  }
}