// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1alpha1/istiocontrolplane.proto

package v1alpha1

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	io "io"
	v1alpha1 "istio.io/api/mesh/v1alpha1"
	_ "istio.io/gogo-genproto/googleapis/google/api"
	v1 "k8s.io/api/core/v1"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ProxyLogLevel int32

const (
	ProxyLogLevel_UNSPECIFIED ProxyLogLevel = 0
	ProxyLogLevel_TRACE       ProxyLogLevel = 1
	ProxyLogLevel_DEBUG       ProxyLogLevel = 2
	ProxyLogLevel_INFO        ProxyLogLevel = 3
	ProxyLogLevel_WARNING     ProxyLogLevel = 4
	ProxyLogLevel_ERROR       ProxyLogLevel = 5
	ProxyLogLevel_CRITICAL    ProxyLogLevel = 6
	ProxyLogLevel_OFF         ProxyLogLevel = 7
)

var ProxyLogLevel_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "TRACE",
	2: "DEBUG",
	3: "INFO",
	4: "WARNING",
	5: "ERROR",
	6: "CRITICAL",
	7: "OFF",
}

var ProxyLogLevel_value = map[string]int32{
	"UNSPECIFIED": 0,
	"TRACE":       1,
	"DEBUG":       2,
	"INFO":        3,
	"WARNING":     4,
	"ERROR":       5,
	"CRITICAL":    6,
	"OFF":         7,
}

func (x ProxyLogLevel) String() string {
	return proto.EnumName(ProxyLogLevel_name, int32(x))
}

func (ProxyLogLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{0}
}

type PilotCertProviderType int32

const (
	PilotCertProviderType_UNSPECIFIED PilotCertProviderType = 0
	PilotCertProviderType_KUBERNETES  PilotCertProviderType = 1
	PilotCertProviderType_ISTIOD      PilotCertProviderType = 2
)

var PilotCertProviderType_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "KUBERNETES",
	2: "ISTIOD",
}

var PilotCertProviderType_value = map[string]int32{
	"UNSPECIFIED": 0,
	"KUBERNETES":  1,
	"ISTIOD":      2,
}

func (x PilotCertProviderType) String() string {
	return proto.EnumName(PilotCertProviderType_name, int32(x))
}

func (PilotCertProviderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{1}
}

type JWTPolicyType int32

const (
	JWTPolicyType_UNSPECIFIED     JWTPolicyType = 0
	JWTPolicyType_THIRD_PARTY_JWT JWTPolicyType = 1
	JWTPolicyType_FIRST_PARTY_JWT JWTPolicyType = 2
)

var JWTPolicyType_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "THIRD_PARTY_JWT",
	2: "FIRST_PARTY_JWT",
}

var JWTPolicyType_value = map[string]int32{
	"UNSPECIFIED":     0,
	"THIRD_PARTY_JWT": 1,
	"FIRST_PARTY_JWT": 2,
}

func (x JWTPolicyType) String() string {
	return proto.EnumName(JWTPolicyType_name, int32(x))
}

func (JWTPolicyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{2}
}

// IstioControlPlane defines an Istio control plane
//
// <!-- crd generation tags
// +cue-gen:IstioControlPlane:groupName:servicemesh.cisco.com
// +cue-gen:IstioControlPlane:version:v1alpha1
// +cue-gen:IstioControlPlane:storageVersion
// +cue-gen:IstioControlPlane:annotations:helm.sh/resource-policy=keep
// +cue-gen:IstioControlPlane:subresource:status
// +cue-gen:IstioControlPlane:scope:Namespaced
// +cue-gen:IstioControlPlane:resource:shortNames=icp,istiocp
// +cue-gen:IstioControlPlane:printerColumn:name="Status",type="string",JSONPath=".status.status",description="Status of the resource"
// +cue-gen:IstioControlPlane:printerColumn:name="Error",type="string",JSONPath=".status.errorMessage",description="Error message"
// +cue-gen:IstioControlPlane:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description="CreationTimestamp is a timestamp
// representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations.
// Clients may not set this value. It is represented in RFC3339 form and is in UTC.
// Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
// +cue-gen:IstioControlPlane:preserveUnknownFields:false
// -->
//
// <!-- go code generation tags
// +genclient
// +k8s:deepcopy-gen=true
// -->
type IstioControlPlaneSpec struct {
	// Contains the intended version for the Istio control plane.
	// +kubebuilder:validation:Pattern=^1.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Logging configurations.
	Logging *LoggingConfiguration `protobuf:"bytes,2,opt,name=logging,proto3" json:"logging,omitempty"`
	// Use the user-specified, secret volume mounted key and certs for Pilot and workloads.
	MountMtlsCerts *bool `protobuf:"bytes,3,opt,name=mountMtlsCerts,proto3,wktptr" json:"mountMtlsCerts,omitempty"`
	// Istiod configuration.
	Istiod *IstiodConfiguration `protobuf:"bytes,4,opt,name=istiod,proto3" json:"istiod,omitempty"`
	// Proxy configuration options.
	Proxy *ProxyConfiguration `protobuf:"bytes,5,opt,name=proxy,proto3" json:"proxy,omitempty"`
	// Proxy Init configuration options.
	ProxyInit *ProxyInitConfiguration `protobuf:"bytes,6,opt,name=proxyInit,proto3" json:"proxyInit,omitempty"`
	// Telemetry V2 configuration.
	TelemetryV2 *TelemetryV2Configuration `protobuf:"bytes,7,opt,name=telemetryV2,proto3" json:"telemetryV2,omitempty"`
	// If SDS is configured, mTLS certificates for the sidecars will be distributed through the
	// SecretDiscoveryService instead of using K8S secrets to mount the certificates.
	Sds *SDSConfiguration `protobuf:"bytes,8,opt,name=sds,proto3" json:"sds,omitempty"`
	// ProxyWasm configuration options.
	ProxyWasm *ProxyWasmConfiguration `protobuf:"bytes,9,opt,name=proxyWasm,proto3" json:"proxyWasm,omitempty"`
	// Whether to restrict the applications namespace the controller manages.
	// If not set, controller watches all namespaces
	WatchOneNamespace *bool `protobuf:"bytes,10,opt,name=watchOneNamespace,proto3,wktptr" json:"watchOneNamespace,omitempty"`
	// Configure the policy for validating JWT.
	// Currently, two options are supported: "third-party-jwt" and "first-party-jwt".
	// +kubebuilder:validation:Enum=THIRD_PARTY_JWT;FIRST_PARTY_JWT
	JwtPolicy JWTPolicyType `protobuf:"varint,11,opt,name=jwtPolicy,proto3,enum=istio_operator.v2.api.v1alpha1.JWTPolicyType" json:"jwtPolicy,omitempty"`
	// The customized CA address to retrieve certificates for the pods in the cluster.
	// CSR clients such as the Istio Agent and ingress gateways can use this to specify the CA endpoint.
	CaAddress string `protobuf:"bytes,12,opt,name=caAddress,proto3" json:"caAddress,omitempty"`
	// Contains the intended distribution for the Istio control plane.
	// The official distribution is used by default unless special preserved distribution value is set.
	// The only preserved distribution is "cisco" as of now.
	Distribution string `protobuf:"bytes,13,opt,name=distribution,proto3" json:"distribution,omitempty"`
	// Upstream HTTP proxy properties to be injected as environment variables to the pod containers.
	HttpProxyEnvs *HTTPProxyEnvsConfiguration `protobuf:"bytes,14,opt,name=httpProxyEnvs,proto3" json:"httpProxyEnvs,omitempty"`
	// Defines mesh-wide settings for the Istio control plane.
	MeshConfig *v1alpha1.MeshConfig `protobuf:"bytes,15,opt,name=mesh_config,json=meshConfig,proto3" json:"mesh_config,omitempty"`
	// K8s resource overlay patches
	K8SResourceOverlays []*K8SResourceOverlayPatch `protobuf:"bytes,16,rep,name=k8sResourceOverlays,proto3" json:"k8sResourceOverlays,omitempty"`
	// Name of the Mesh to which this control plane belongs
	MeshID               string   `protobuf:"bytes,17,opt,name=meshID,proto3" json:"meshID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IstioControlPlaneSpec) Reset()         { *m = IstioControlPlaneSpec{} }
func (m *IstioControlPlaneSpec) String() string { return proto.CompactTextString(m) }
func (*IstioControlPlaneSpec) ProtoMessage()    {}
func (*IstioControlPlaneSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{0}
}
func (m *IstioControlPlaneSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IstioControlPlaneSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IstioControlPlaneSpec.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IstioControlPlaneSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IstioControlPlaneSpec.Merge(m, src)
}
func (m *IstioControlPlaneSpec) XXX_Size() int {
	return m.Size()
}
func (m *IstioControlPlaneSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_IstioControlPlaneSpec.DiscardUnknown(m)
}

var xxx_messageInfo_IstioControlPlaneSpec proto.InternalMessageInfo

func (m *IstioControlPlaneSpec) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *IstioControlPlaneSpec) GetLogging() *LoggingConfiguration {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *IstioControlPlaneSpec) GetMountMtlsCerts() *bool {
	if m != nil {
		return m.MountMtlsCerts
	}
	return nil
}

func (m *IstioControlPlaneSpec) GetIstiod() *IstiodConfiguration {
	if m != nil {
		return m.Istiod
	}
	return nil
}

func (m *IstioControlPlaneSpec) GetProxy() *ProxyConfiguration {
	if m != nil {
		return m.Proxy
	}
	return nil
}

func (m *IstioControlPlaneSpec) GetProxyInit() *ProxyInitConfiguration {
	if m != nil {
		return m.ProxyInit
	}
	return nil
}

func (m *IstioControlPlaneSpec) GetTelemetryV2() *TelemetryV2Configuration {
	if m != nil {
		return m.TelemetryV2
	}
	return nil
}

func (m *IstioControlPlaneSpec) GetSds() *SDSConfiguration {
	if m != nil {
		return m.Sds
	}
	return nil
}

func (m *IstioControlPlaneSpec) GetProxyWasm() *ProxyWasmConfiguration {
	if m != nil {
		return m.ProxyWasm
	}
	return nil
}

func (m *IstioControlPlaneSpec) GetWatchOneNamespace() *bool {
	if m != nil {
		return m.WatchOneNamespace
	}
	return nil
}

func (m *IstioControlPlaneSpec) GetJwtPolicy() JWTPolicyType {
	if m != nil {
		return m.JwtPolicy
	}
	return JWTPolicyType_UNSPECIFIED
}

func (m *IstioControlPlaneSpec) GetCaAddress() string {
	if m != nil {
		return m.CaAddress
	}
	return ""
}

func (m *IstioControlPlaneSpec) GetDistribution() string {
	if m != nil {
		return m.Distribution
	}
	return ""
}

func (m *IstioControlPlaneSpec) GetHttpProxyEnvs() *HTTPProxyEnvsConfiguration {
	if m != nil {
		return m.HttpProxyEnvs
	}
	return nil
}

func (m *IstioControlPlaneSpec) GetMeshConfig() *v1alpha1.MeshConfig {
	if m != nil {
		return m.MeshConfig
	}
	return nil
}

func (m *IstioControlPlaneSpec) GetK8SResourceOverlays() []*K8SResourceOverlayPatch {
	if m != nil {
		return m.K8SResourceOverlays
	}
	return nil
}

func (m *IstioControlPlaneSpec) GetMeshID() string {
	if m != nil {
		return m.MeshID
	}
	return ""
}

// Comma-separated minimum per-scope logging level of messages to output, in the form of <scope>:<level>,<scope>:<level>
// The control plane has different scopes depending on component, but can configure default log level across all components
// If empty, default scope and level will be used as configured in code
type LoggingConfiguration struct {
	// +kubebuilder:validation:Pattern=`^([a-zA-Z]+:[a-zA-Z]+,?)+$`
	Level                string   `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoggingConfiguration) Reset()         { *m = LoggingConfiguration{} }
func (m *LoggingConfiguration) String() string { return proto.CompactTextString(m) }
func (*LoggingConfiguration) ProtoMessage()    {}
func (*LoggingConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{1}
}
func (m *LoggingConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LoggingConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LoggingConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LoggingConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoggingConfiguration.Merge(m, src)
}
func (m *LoggingConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *LoggingConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_LoggingConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_LoggingConfiguration proto.InternalMessageInfo

func (m *LoggingConfiguration) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

// SDSConfiguration defines Secret Discovery Service config options
type SDSConfiguration struct {
	// The JWT token for SDS and the aud field of such JWT. See RFC 7519, section 4.1.3.
	// When a CSR is sent from Citadel Agent to the CA (e.g. Citadel), this aud is to make sure the
	// 	JWT is intended for the CA.
	TokenAudience        string   `protobuf:"bytes,1,opt,name=tokenAudience,proto3" json:"tokenAudience,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SDSConfiguration) Reset()         { *m = SDSConfiguration{} }
func (m *SDSConfiguration) String() string { return proto.CompactTextString(m) }
func (*SDSConfiguration) ProtoMessage()    {}
func (*SDSConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{2}
}
func (m *SDSConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SDSConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SDSConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SDSConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SDSConfiguration.Merge(m, src)
}
func (m *SDSConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *SDSConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_SDSConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_SDSConfiguration proto.InternalMessageInfo

func (m *SDSConfiguration) GetTokenAudience() string {
	if m != nil {
		return m.TokenAudience
	}
	return ""
}

// ProxyConfiguration defines config options for Proxy
type ProxyConfiguration struct {
	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// If set to true, istio-proxy container will have privileged securityContext
	Privileged *bool `protobuf:"bytes,2,opt,name=privileged,proto3,wktptr" json:"privileged,omitempty"`
	// If set, newly injected sidecars will have core dumps enabled.
	EnableCoreDump *bool `protobuf:"bytes,3,opt,name=enableCoreDump,proto3,wktptr" json:"enableCoreDump,omitempty"`
	// Log level for proxy, applies to gateways and sidecars. If left empty, "warning" is used.
	// Expected values are: trace|debug|info|warning|error|critical|off
	// +kubebuilder:validation:Enum=TRACE;DEBUG;INFO;WARNING;ERROR;CRITICAL;OFF
	LogLevel ProxyLogLevel `protobuf:"varint,4,opt,name=logLevel,proto3,enum=istio_operator.v2.api.v1alpha1.ProxyLogLevel" json:"logLevel,omitempty"`
	// Per Component log level for proxy, applies to gateways and sidecars. If a component level is
	// not set, then the "LogLevel" will be used. If left empty, "misc:error" is used.
	ComponentLogLevel string `protobuf:"bytes,5,opt,name=componentLogLevel,proto3" json:"componentLogLevel,omitempty"`
	// cluster domain. Default value is "cluster.local"
	ClusterDomain string `protobuf:"bytes,6,opt,name=clusterDomain,proto3" json:"clusterDomain,omitempty"`
	// Controls if sidecar is injected at the front of the container list and blocks
	// the start of the other containers until the proxy is ready
	// Default value is 'false'.
	HoldApplicationUntilProxyStarts *bool                 `protobuf:"bytes,7,opt,name=holdApplicationUntilProxyStarts,proto3,wktptr" json:"holdApplicationUntilProxyStarts,omitempty"`
	Lifecycle                       *v1.Lifecycle         `protobuf:"bytes,8,opt,name=lifecycle,proto3" json:"lifecycle,omitempty"`
	Resources                       *ResourceRequirements `protobuf:"bytes,9,opt,name=resources,proto3" json:"resources,omitempty"`
	// IncludeIPRanges the range where to capture egress traffic
	IncludeIPRanges string `protobuf:"bytes,10,opt,name=includeIPRanges,proto3" json:"includeIPRanges,omitempty"`
	// ExcludeIPRanges the range where not to capture egress traffic
	ExcludeIPRanges string `protobuf:"bytes,11,opt,name=excludeIPRanges,proto3" json:"excludeIPRanges,omitempty"`
	// ExcludeInboundPorts the comma separated list of inbound ports to be excluded from redirection to Envoy
	ExcludeInboundPorts string `protobuf:"bytes,12,opt,name=excludeInboundPorts,proto3" json:"excludeInboundPorts,omitempty"`
	// ExcludeOutboundPorts the comma separated list of outbound ports to be excluded from redirection to Envoy
	ExcludeOutboundPorts string   `protobuf:"bytes,13,opt,name=excludeOutboundPorts,proto3" json:"excludeOutboundPorts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProxyConfiguration) Reset()         { *m = ProxyConfiguration{} }
func (m *ProxyConfiguration) String() string { return proto.CompactTextString(m) }
func (*ProxyConfiguration) ProtoMessage()    {}
func (*ProxyConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{3}
}
func (m *ProxyConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxyConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxyConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyConfiguration.Merge(m, src)
}
func (m *ProxyConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *ProxyConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyConfiguration proto.InternalMessageInfo

func (m *ProxyConfiguration) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ProxyConfiguration) GetPrivileged() *bool {
	if m != nil {
		return m.Privileged
	}
	return nil
}

func (m *ProxyConfiguration) GetEnableCoreDump() *bool {
	if m != nil {
		return m.EnableCoreDump
	}
	return nil
}

func (m *ProxyConfiguration) GetLogLevel() ProxyLogLevel {
	if m != nil {
		return m.LogLevel
	}
	return ProxyLogLevel_UNSPECIFIED
}

func (m *ProxyConfiguration) GetComponentLogLevel() string {
	if m != nil {
		return m.ComponentLogLevel
	}
	return ""
}

func (m *ProxyConfiguration) GetClusterDomain() string {
	if m != nil {
		return m.ClusterDomain
	}
	return ""
}

func (m *ProxyConfiguration) GetHoldApplicationUntilProxyStarts() *bool {
	if m != nil {
		return m.HoldApplicationUntilProxyStarts
	}
	return nil
}

func (m *ProxyConfiguration) GetLifecycle() *v1.Lifecycle {
	if m != nil {
		return m.Lifecycle
	}
	return nil
}

func (m *ProxyConfiguration) GetResources() *ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ProxyConfiguration) GetIncludeIPRanges() string {
	if m != nil {
		return m.IncludeIPRanges
	}
	return ""
}

func (m *ProxyConfiguration) GetExcludeIPRanges() string {
	if m != nil {
		return m.ExcludeIPRanges
	}
	return ""
}

func (m *ProxyConfiguration) GetExcludeInboundPorts() string {
	if m != nil {
		return m.ExcludeInboundPorts
	}
	return ""
}

func (m *ProxyConfiguration) GetExcludeOutboundPorts() string {
	if m != nil {
		return m.ExcludeOutboundPorts
	}
	return ""
}

// ProxyInitConfiguration defines config options for Proxy Init containers
type ProxyInitConfiguration struct {
	Image                string                `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Resources            *ResourceRequirements `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ProxyInitConfiguration) Reset()         { *m = ProxyInitConfiguration{} }
func (m *ProxyInitConfiguration) String() string { return proto.CompactTextString(m) }
func (*ProxyInitConfiguration) ProtoMessage()    {}
func (*ProxyInitConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{4}
}
func (m *ProxyInitConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyInitConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxyInitConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxyInitConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyInitConfiguration.Merge(m, src)
}
func (m *ProxyInitConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *ProxyInitConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyInitConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyInitConfiguration proto.InternalMessageInfo

func (m *ProxyInitConfiguration) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ProxyInitConfiguration) GetResources() *ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

// IstiodConfiguration defines config options for Istiod
type IstiodConfiguration struct {
	// Deployment spec
	Deployment *BaseKubernetesResourceConfig `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	// If enabled, pilot will run Istio analyzers and write analysis errors to the Status field of any Istio Resources
	EnableAnalysis *bool `protobuf:"bytes,2,opt,name=enableAnalysis,proto3,wktptr" json:"enableAnalysis,omitempty"`
	// If enabled, pilot will update the CRD Status field of all Istio resources with reconciliation status
	EnableStatus *bool `protobuf:"bytes,3,opt,name=enableStatus,proto3,wktptr" json:"enableStatus,omitempty"`
	// Settings for local istiod to control remote clusters as well
	ExternalIstiod *ExternalIstiodConfiguration `protobuf:"bytes,4,opt,name=externalIstiod,proto3" json:"externalIstiod,omitempty"`
	TraceSampling  *float32                     `protobuf:"bytes,5,opt,name=traceSampling,proto3,wktptr" json:"traceSampling,omitempty"`
	// If enabled, protocol sniffing will be used for outbound listeners whose port protocol is not specified or unsupported
	EnableProtocolSniffingOutbound *bool `protobuf:"bytes,6,opt,name=enableProtocolSniffingOutbound,proto3,wktptr" json:"enableProtocolSniffingOutbound,omitempty"`
	// If enabled, protocol sniffing will be used for inbound listeners whose port protocol is not specified or unsupported
	EnableProtocolSniffingInbound *bool `protobuf:"bytes,7,opt,name=enableProtocolSniffingInbound,proto3,wktptr" json:"enableProtocolSniffingInbound,omitempty"`
	// Configure the certificate provider for control plane communication.
	// Currently, two providers are supported: "kubernetes" and "istiod".
	// As some platforms may not have kubernetes signing APIs,
	// Istiod is the default
	// +kubebuilder:validation:Enum=KUBERNETES;ISTIOD
	CertProvider PilotCertProviderType `protobuf:"varint,8,opt,name=certProvider,proto3,enum=istio_operator.v2.api.v1alpha1.PilotCertProviderType" json:"certProvider,omitempty"`
	// SPIFFE configuration of Pilot
	Spiffe               *SPIFFEConfiguration `protobuf:"bytes,9,opt,name=spiffe,proto3" json:"spiffe,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *IstiodConfiguration) Reset()         { *m = IstiodConfiguration{} }
func (m *IstiodConfiguration) String() string { return proto.CompactTextString(m) }
func (*IstiodConfiguration) ProtoMessage()    {}
func (*IstiodConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{5}
}
func (m *IstiodConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IstiodConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IstiodConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IstiodConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IstiodConfiguration.Merge(m, src)
}
func (m *IstiodConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *IstiodConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_IstiodConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_IstiodConfiguration proto.InternalMessageInfo

func (m *IstiodConfiguration) GetDeployment() *BaseKubernetesResourceConfig {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *IstiodConfiguration) GetEnableAnalysis() *bool {
	if m != nil {
		return m.EnableAnalysis
	}
	return nil
}

func (m *IstiodConfiguration) GetEnableStatus() *bool {
	if m != nil {
		return m.EnableStatus
	}
	return nil
}

func (m *IstiodConfiguration) GetExternalIstiod() *ExternalIstiodConfiguration {
	if m != nil {
		return m.ExternalIstiod
	}
	return nil
}

func (m *IstiodConfiguration) GetTraceSampling() *float32 {
	if m != nil {
		return m.TraceSampling
	}
	return nil
}

func (m *IstiodConfiguration) GetEnableProtocolSniffingOutbound() *bool {
	if m != nil {
		return m.EnableProtocolSniffingOutbound
	}
	return nil
}

func (m *IstiodConfiguration) GetEnableProtocolSniffingInbound() *bool {
	if m != nil {
		return m.EnableProtocolSniffingInbound
	}
	return nil
}

func (m *IstiodConfiguration) GetCertProvider() PilotCertProviderType {
	if m != nil {
		return m.CertProvider
	}
	return PilotCertProviderType_UNSPECIFIED
}

func (m *IstiodConfiguration) GetSpiffe() *SPIFFEConfiguration {
	if m != nil {
		return m.Spiffe
	}
	return nil
}

// ExternalIstiodConfiguration defines settings for local istiod to control remote clusters as well
type ExternalIstiodConfiguration struct {
	Enabled              *bool    `protobuf:"bytes,1,opt,name=enabled,proto3,wktptr" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalIstiodConfiguration) Reset()         { *m = ExternalIstiodConfiguration{} }
func (m *ExternalIstiodConfiguration) String() string { return proto.CompactTextString(m) }
func (*ExternalIstiodConfiguration) ProtoMessage()    {}
func (*ExternalIstiodConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{6}
}
func (m *ExternalIstiodConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExternalIstiodConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExternalIstiodConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExternalIstiodConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalIstiodConfiguration.Merge(m, src)
}
func (m *ExternalIstiodConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *ExternalIstiodConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalIstiodConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalIstiodConfiguration proto.InternalMessageInfo

func (m *ExternalIstiodConfiguration) GetEnabled() *bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

// SPIFFEConfiguration is for SPIFFE configuration of Pilot
type SPIFFEConfiguration struct {
	OperatorEndpoints    *OperatorEndpointsConfiguration `protobuf:"bytes,1,opt,name=operatorEndpoints,proto3" json:"operatorEndpoints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *SPIFFEConfiguration) Reset()         { *m = SPIFFEConfiguration{} }
func (m *SPIFFEConfiguration) String() string { return proto.CompactTextString(m) }
func (*SPIFFEConfiguration) ProtoMessage()    {}
func (*SPIFFEConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{7}
}
func (m *SPIFFEConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SPIFFEConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SPIFFEConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SPIFFEConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SPIFFEConfiguration.Merge(m, src)
}
func (m *SPIFFEConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *SPIFFEConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_SPIFFEConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_SPIFFEConfiguration proto.InternalMessageInfo

func (m *SPIFFEConfiguration) GetOperatorEndpoints() *OperatorEndpointsConfiguration {
	if m != nil {
		return m.OperatorEndpoints
	}
	return nil
}

// OperatorEndpointsConfiguration defines config options for automatic SPIFFE endpoints
type OperatorEndpointsConfiguration struct {
	Enabled              *bool    `protobuf:"bytes,1,opt,name=enabled,proto3,wktptr" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperatorEndpointsConfiguration) Reset()         { *m = OperatorEndpointsConfiguration{} }
func (m *OperatorEndpointsConfiguration) String() string { return proto.CompactTextString(m) }
func (*OperatorEndpointsConfiguration) ProtoMessage()    {}
func (*OperatorEndpointsConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{8}
}
func (m *OperatorEndpointsConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OperatorEndpointsConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OperatorEndpointsConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OperatorEndpointsConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperatorEndpointsConfiguration.Merge(m, src)
}
func (m *OperatorEndpointsConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *OperatorEndpointsConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_OperatorEndpointsConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_OperatorEndpointsConfiguration proto.InternalMessageInfo

func (m *OperatorEndpointsConfiguration) GetEnabled() *bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

type TelemetryV2Configuration struct {
	Enabled              *bool    `protobuf:"bytes,1,opt,name=enabled,proto3,wktptr" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TelemetryV2Configuration) Reset()         { *m = TelemetryV2Configuration{} }
func (m *TelemetryV2Configuration) String() string { return proto.CompactTextString(m) }
func (*TelemetryV2Configuration) ProtoMessage()    {}
func (*TelemetryV2Configuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{9}
}
func (m *TelemetryV2Configuration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TelemetryV2Configuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TelemetryV2Configuration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TelemetryV2Configuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemetryV2Configuration.Merge(m, src)
}
func (m *TelemetryV2Configuration) XXX_Size() int {
	return m.Size()
}
func (m *TelemetryV2Configuration) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemetryV2Configuration.DiscardUnknown(m)
}

var xxx_messageInfo_TelemetryV2Configuration proto.InternalMessageInfo

func (m *TelemetryV2Configuration) GetEnabled() *bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

// ProxyWasmConfiguration defines config options for Envoy wasm
type ProxyWasmConfiguration struct {
	Enabled              *bool    `protobuf:"bytes,1,opt,name=enabled,proto3,wktptr" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProxyWasmConfiguration) Reset()         { *m = ProxyWasmConfiguration{} }
func (m *ProxyWasmConfiguration) String() string { return proto.CompactTextString(m) }
func (*ProxyWasmConfiguration) ProtoMessage()    {}
func (*ProxyWasmConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{10}
}
func (m *ProxyWasmConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyWasmConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxyWasmConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxyWasmConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyWasmConfiguration.Merge(m, src)
}
func (m *ProxyWasmConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *ProxyWasmConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyWasmConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyWasmConfiguration proto.InternalMessageInfo

func (m *ProxyWasmConfiguration) GetEnabled() *bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

// PDBConfiguration holds Pod Disruption Budget related config options
type PDBConfiguration struct {
	Enabled              *bool    `protobuf:"bytes,1,opt,name=enabled,proto3,wktptr" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PDBConfiguration) Reset()         { *m = PDBConfiguration{} }
func (m *PDBConfiguration) String() string { return proto.CompactTextString(m) }
func (*PDBConfiguration) ProtoMessage()    {}
func (*PDBConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{11}
}
func (m *PDBConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PDBConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PDBConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PDBConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PDBConfiguration.Merge(m, src)
}
func (m *PDBConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *PDBConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_PDBConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_PDBConfiguration proto.InternalMessageInfo

func (m *PDBConfiguration) GetEnabled() *bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

type HTTPProxyEnvsConfiguration struct {
	HttpProxy            string   `protobuf:"bytes,1,opt,name=httpProxy,proto3" json:"httpProxy,omitempty"`
	HttpsProxy           string   `protobuf:"bytes,2,opt,name=httpsProxy,proto3" json:"httpsProxy,omitempty"`
	NoProxy              string   `protobuf:"bytes,3,opt,name=noProxy,proto3" json:"noProxy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HTTPProxyEnvsConfiguration) Reset()         { *m = HTTPProxyEnvsConfiguration{} }
func (m *HTTPProxyEnvsConfiguration) String() string { return proto.CompactTextString(m) }
func (*HTTPProxyEnvsConfiguration) ProtoMessage()    {}
func (*HTTPProxyEnvsConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{12}
}
func (m *HTTPProxyEnvsConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HTTPProxyEnvsConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HTTPProxyEnvsConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HTTPProxyEnvsConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPProxyEnvsConfiguration.Merge(m, src)
}
func (m *HTTPProxyEnvsConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *HTTPProxyEnvsConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPProxyEnvsConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPProxyEnvsConfiguration proto.InternalMessageInfo

func (m *HTTPProxyEnvsConfiguration) GetHttpProxy() string {
	if m != nil {
		return m.HttpProxy
	}
	return ""
}

func (m *HTTPProxyEnvsConfiguration) GetHttpsProxy() string {
	if m != nil {
		return m.HttpsProxy
	}
	return ""
}

func (m *HTTPProxyEnvsConfiguration) GetNoProxy() string {
	if m != nil {
		return m.NoProxy
	}
	return ""
}

// <!-- go code generation tags
// +genclient
// +k8s:deepcopy-gen=true
// -->
type IstioControlPlaneStatus struct {
	// Reconciliation status of the Istio control plane
	Status ConfigState `protobuf:"varint,1,opt,name=status,proto3,enum=istio_operator.v2.api.v1alpha1.ConfigState" json:"status,omitempty"`
	// Current addresses for the corresponding gateways
	GatewayAddress []string `protobuf:"bytes,2,rep,name=gatewayAddress,proto3" json:"gatewayAddress,omitempty"`
	// Reconciliation error message if any
	ErrorMessage         string               `protobuf:"bytes,3,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	MeshConfig           *v1alpha1.MeshConfig `protobuf:"bytes,4,opt,name=meshConfig,proto3" json:"meshConfig,omitempty"`
	Checksums            *StatusChecksums     `protobuf:"bytes,5,opt,name=checksums,proto3" json:"checksums,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *IstioControlPlaneStatus) Reset()         { *m = IstioControlPlaneStatus{} }
func (m *IstioControlPlaneStatus) String() string { return proto.CompactTextString(m) }
func (*IstioControlPlaneStatus) ProtoMessage()    {}
func (*IstioControlPlaneStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{13}
}
func (m *IstioControlPlaneStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IstioControlPlaneStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IstioControlPlaneStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IstioControlPlaneStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IstioControlPlaneStatus.Merge(m, src)
}
func (m *IstioControlPlaneStatus) XXX_Size() int {
	return m.Size()
}
func (m *IstioControlPlaneStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_IstioControlPlaneStatus.DiscardUnknown(m)
}

var xxx_messageInfo_IstioControlPlaneStatus proto.InternalMessageInfo

func (m *IstioControlPlaneStatus) GetStatus() ConfigState {
	if m != nil {
		return m.Status
	}
	return ConfigState_Unspecified
}

func (m *IstioControlPlaneStatus) GetGatewayAddress() []string {
	if m != nil {
		return m.GatewayAddress
	}
	return nil
}

func (m *IstioControlPlaneStatus) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *IstioControlPlaneStatus) GetMeshConfig() *v1alpha1.MeshConfig {
	if m != nil {
		return m.MeshConfig
	}
	return nil
}

func (m *IstioControlPlaneStatus) GetChecksums() *StatusChecksums {
	if m != nil {
		return m.Checksums
	}
	return nil
}

// <!-- go code generation tags
// +genclient
// +k8s:deepcopy-gen=true
// -->
type StatusChecksums struct {
	MeshConfig           string   `protobuf:"bytes,1,opt,name=meshConfig,proto3" json:"meshConfig,omitempty"`
	SidecarInjector      string   `protobuf:"bytes,2,opt,name=sidecarInjector,proto3" json:"sidecarInjector,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusChecksums) Reset()         { *m = StatusChecksums{} }
func (m *StatusChecksums) String() string { return proto.CompactTextString(m) }
func (*StatusChecksums) ProtoMessage()    {}
func (*StatusChecksums) Descriptor() ([]byte, []int) {
	return fileDescriptor_6817de833805cb8b, []int{14}
}
func (m *StatusChecksums) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatusChecksums) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatusChecksums.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatusChecksums) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusChecksums.Merge(m, src)
}
func (m *StatusChecksums) XXX_Size() int {
	return m.Size()
}
func (m *StatusChecksums) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusChecksums.DiscardUnknown(m)
}

var xxx_messageInfo_StatusChecksums proto.InternalMessageInfo

func (m *StatusChecksums) GetMeshConfig() string {
	if m != nil {
		return m.MeshConfig
	}
	return ""
}

func (m *StatusChecksums) GetSidecarInjector() string {
	if m != nil {
		return m.SidecarInjector
	}
	return ""
}

func init() {
	proto.RegisterEnum("istio_operator.v2.api.v1alpha1.ProxyLogLevel", ProxyLogLevel_name, ProxyLogLevel_value)
	proto.RegisterEnum("istio_operator.v2.api.v1alpha1.PilotCertProviderType", PilotCertProviderType_name, PilotCertProviderType_value)
	proto.RegisterEnum("istio_operator.v2.api.v1alpha1.JWTPolicyType", JWTPolicyType_name, JWTPolicyType_value)
	proto.RegisterType((*IstioControlPlaneSpec)(nil), "istio_operator.v2.api.v1alpha1.IstioControlPlaneSpec")
	proto.RegisterType((*LoggingConfiguration)(nil), "istio_operator.v2.api.v1alpha1.LoggingConfiguration")
	proto.RegisterType((*SDSConfiguration)(nil), "istio_operator.v2.api.v1alpha1.SDSConfiguration")
	proto.RegisterType((*ProxyConfiguration)(nil), "istio_operator.v2.api.v1alpha1.ProxyConfiguration")
	proto.RegisterType((*ProxyInitConfiguration)(nil), "istio_operator.v2.api.v1alpha1.ProxyInitConfiguration")
	proto.RegisterType((*IstiodConfiguration)(nil), "istio_operator.v2.api.v1alpha1.IstiodConfiguration")
	proto.RegisterType((*ExternalIstiodConfiguration)(nil), "istio_operator.v2.api.v1alpha1.ExternalIstiodConfiguration")
	proto.RegisterType((*SPIFFEConfiguration)(nil), "istio_operator.v2.api.v1alpha1.SPIFFEConfiguration")
	proto.RegisterType((*OperatorEndpointsConfiguration)(nil), "istio_operator.v2.api.v1alpha1.OperatorEndpointsConfiguration")
	proto.RegisterType((*TelemetryV2Configuration)(nil), "istio_operator.v2.api.v1alpha1.TelemetryV2Configuration")
	proto.RegisterType((*ProxyWasmConfiguration)(nil), "istio_operator.v2.api.v1alpha1.ProxyWasmConfiguration")
	proto.RegisterType((*PDBConfiguration)(nil), "istio_operator.v2.api.v1alpha1.PDBConfiguration")
	proto.RegisterType((*HTTPProxyEnvsConfiguration)(nil), "istio_operator.v2.api.v1alpha1.HTTPProxyEnvsConfiguration")
	proto.RegisterType((*IstioControlPlaneStatus)(nil), "istio_operator.v2.api.v1alpha1.IstioControlPlaneStatus")
	proto.RegisterType((*StatusChecksums)(nil), "istio_operator.v2.api.v1alpha1.StatusChecksums")
}

func init() {
	proto.RegisterFile("api/v1alpha1/istiocontrolplane.proto", fileDescriptor_6817de833805cb8b)
}

var fileDescriptor_6817de833805cb8b = []byte{
	// 1618 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xdd, 0x72, 0xdb, 0xc6,
	0x15, 0x2e, 0x29, 0x89, 0x34, 0x0f, 0xf5, 0x43, 0xaf, 0x9c, 0x14, 0x55, 0x1a, 0x5a, 0xc3, 0xc9,
	0x74, 0x34, 0x6e, 0x42, 0xc6, 0x4c, 0xd3, 0x7a, 0x92, 0x4e, 0x1b, 0xfe, 0xc9, 0x86, 0x25, 0x53,
	0x1c, 0x90, 0xb6, 0xc7, 0x69, 0x66, 0x54, 0x10, 0x58, 0x92, 0x6b, 0x83, 0xbb, 0xe8, 0xee, 0x82,
	0x36, 0x7b, 0xd9, 0xde, 0xf6, 0x21, 0x7a, 0xdf, 0x37, 0xc8, 0x13, 0xf4, 0xb2, 0x6f, 0xd0, 0x8e,
	0x9f, 0xa4, 0xb3, 0x0b, 0x40, 0x24, 0x48, 0x5a, 0x50, 0xc6, 0xbe, 0x03, 0xce, 0x39, 0xdf, 0x87,
	0x73, 0xce, 0xee, 0x7e, 0x7b, 0x48, 0xf8, 0xcc, 0xf6, 0x49, 0x6d, 0x76, 0xdf, 0xf6, 0xfc, 0x89,
	0x7d, 0xbf, 0x46, 0x84, 0x24, 0xcc, 0x61, 0x54, 0x72, 0xe6, 0xf9, 0x9e, 0x4d, 0x71, 0xd5, 0xe7,
	0x4c, 0x32, 0x54, 0xd6, 0x8e, 0x4b, 0xe6, 0x63, 0x6e, 0x4b, 0xc6, 0xab, 0xb3, 0x7a, 0xd5, 0xf6,
	0x49, 0x35, 0xc6, 0x1d, 0xfd, 0x22, 0xc1, 0xe2, 0xb0, 0xe9, 0x94, 0xd1, 0x10, 0x7a, 0x54, 0x79,
	0xf5, 0x40, 0x54, 0x09, 0xab, 0xa9, 0x08, 0x87, 0x71, 0x5c, 0x9b, 0xdd, 0xaf, 0x8d, 0x31, 0x55,
	0x44, 0xd8, 0x8d, 0x62, 0x8e, 0xa6, 0x58, 0x4c, 0x96, 0xf1, 0x74, 0x44, 0xc6, 0x91, 0xef, 0xce,
	0x98, 0x8d, 0x99, 0x7e, 0xac, 0xa9, 0xa7, 0xc8, 0x7a, 0x77, 0xcc, 0xd8, 0xd8, 0xc3, 0x9a, 0x75,
	0x44, 0xb0, 0xe7, 0x5e, 0x0e, 0xf1, 0xc4, 0x9e, 0x11, 0xc6, 0xa3, 0x80, 0x72, 0x14, 0xa0, 0xdf,
	0x86, 0xc1, 0xa8, 0xf6, 0x9a, 0xdb, 0xbe, 0x8f, 0xb9, 0x08, 0xfd, 0x95, 0x1f, 0x0b, 0xf0, 0x91,
	0xa9, 0x8a, 0x6a, 0x85, 0xd5, 0xf6, 0x54, 0xb5, 0x7d, 0x1f, 0x3b, 0xa8, 0x0c, 0xf9, 0x19, 0xe6,
	0x82, 0x30, 0x6a, 0x64, 0x8e, 0x33, 0x27, 0x85, 0xe6, 0xf6, 0xdb, 0x46, 0x26, 0x6b, 0xc5, 0x46,
	0xd4, 0x85, 0xbc, 0xc7, 0xc6, 0x63, 0x42, 0xc7, 0x46, 0xf6, 0x38, 0x73, 0x52, 0xac, 0xff, 0xa6,
	0x7a, 0x7d, 0x77, 0xaa, 0xe7, 0x61, 0x78, 0x4b, 0x97, 0x15, 0x70, 0x5b, 0x12, 0x46, 0xad, 0x98,
	0x04, 0x3d, 0x82, 0xfd, 0x29, 0x0b, 0xa8, 0x7c, 0x22, 0x3d, 0xd1, 0xc2, 0x5c, 0x0a, 0x63, 0x4b,
	0xd3, 0x1e, 0x55, 0xc3, 0x12, 0xaa, 0x71, 0x09, 0xd5, 0x26, 0x63, 0xde, 0x33, 0xdb, 0x0b, 0x70,
	0x73, 0xfb, 0x9f, 0xff, 0xbd, 0x9b, 0xb1, 0x56, 0x70, 0xe8, 0x0c, 0x72, 0x3a, 0x13, 0xd7, 0xd8,
	0xd6, 0x0c, 0x5f, 0xa5, 0x25, 0xa6, 0x1b, 0xe0, 0x26, 0xf3, 0x8a, 0x28, 0xd0, 0x23, 0xd8, 0xf1,
	0x39, 0x7b, 0x33, 0x37, 0x76, 0x34, 0x57, 0x3d, 0x8d, 0xab, 0xa7, 0x82, 0x93, 0x54, 0x21, 0x01,
	0x1a, 0x40, 0x41, 0x3f, 0x98, 0x94, 0x48, 0x23, 0xa7, 0xd9, 0x7e, 0x7b, 0x23, 0x36, 0x05, 0x48,
	0x32, 0x2e, 0x88, 0xd0, 0xf7, 0x50, 0x94, 0xd8, 0xc3, 0x53, 0x2c, 0xf9, 0xfc, 0x59, 0xdd, 0xc8,
	0x6b, 0xde, 0x07, 0x69, 0xbc, 0x83, 0x05, 0x24, 0xc9, 0xbc, 0x4c, 0x86, 0x9a, 0xb0, 0x25, 0x5c,
	0x61, 0xdc, 0xd2, 0x9c, 0x5f, 0xa6, 0x71, 0xf6, 0xdb, 0xfd, 0x24, 0x97, 0x02, 0x5f, 0x55, 0xfd,
	0xdc, 0x16, 0x53, 0xa3, 0xf0, 0x13, 0xaa, 0x56, 0x80, 0x4d, 0x55, 0x2b, 0x3b, 0xea, 0xc2, 0xed,
	0xd7, 0xb6, 0x74, 0x26, 0x17, 0x14, 0x77, 0xed, 0x29, 0x16, 0xbe, 0xed, 0x60, 0x03, 0x6e, 0xb8,
	0x5f, 0xd6, 0xa1, 0xe8, 0x0c, 0x0a, 0x2f, 0x5f, 0xcb, 0x1e, 0xf3, 0x88, 0x33, 0x37, 0x8a, 0xc7,
	0x99, 0x93, 0xfd, 0xfa, 0x17, 0x69, 0x59, 0x3e, 0x7e, 0x3e, 0x08, 0x01, 0x83, 0xb9, 0x8f, 0xad,
	0x05, 0x1e, 0xfd, 0x12, 0x0a, 0x8e, 0xdd, 0x70, 0x5d, 0x8e, 0x85, 0x30, 0x76, 0xd5, 0xd9, 0xb1,
	0x16, 0x06, 0x54, 0x81, 0x5d, 0x97, 0x08, 0xc9, 0xc9, 0x30, 0x50, 0x55, 0x19, 0x7b, 0x3a, 0x20,
	0x61, 0x43, 0x7f, 0x86, 0xbd, 0x89, 0x94, 0xbe, 0xee, 0x43, 0x87, 0xce, 0x84, 0xb1, 0xaf, 0x4b,
	0xfb, 0x26, 0x2d, 0xa5, 0x47, 0x83, 0x41, 0xef, 0x0a, 0x94, 0x6c, 0x5e, 0x92, 0x10, 0x7d, 0x07,
	0x45, 0x25, 0x36, 0x97, 0xa1, 0xc6, 0x18, 0x07, 0x9a, 0xff, 0x6e, 0xc8, 0x5f, 0x55, 0x9e, 0x05,
	0xe9, 0x13, 0x2c, 0x26, 0x21, 0x97, 0x05, 0xd3, 0xab, 0x67, 0x44, 0xe0, 0xf0, 0xd5, 0x03, 0x61,
	0x61, 0xc1, 0x02, 0xee, 0xe0, 0x8b, 0x19, 0xe6, 0x9e, 0x3d, 0x17, 0x46, 0xe9, 0x78, 0xeb, 0xa4,
	0x58, 0xff, 0x5d, 0x5a, 0xa6, 0x67, 0x6b, 0xd0, 0x9e, 0x5a, 0x14, 0x6b, 0x13, 0x27, 0xfa, 0x18,
	0x72, 0xea, 0xc3, 0x66, 0xdb, 0xb8, 0xad, 0x9b, 0x15, 0xbd, 0x55, 0x3e, 0x87, 0x3b, 0x9b, 0x34,
	0x05, 0xdd, 0x81, 0x1d, 0x0f, 0xcf, 0xb0, 0x17, 0x0a, 0x97, 0x15, 0xbe, 0x54, 0x1e, 0x40, 0x69,
	0x75, 0x8b, 0xa2, 0xcf, 0x60, 0x4f, 0xb2, 0x57, 0x98, 0x36, 0x02, 0x97, 0x60, 0xea, 0xe0, 0x08,
	0x91, 0x34, 0x56, 0xfe, 0x91, 0x03, 0xb4, 0x7e, 0xae, 0xd5, 0x67, 0xc8, 0xd4, 0x1e, 0xc7, 0xa0,
	0xf0, 0x05, 0x7d, 0x07, 0xe0, 0x73, 0x32, 0x23, 0x1e, 0x1e, 0x63, 0x37, 0x92, 0xc6, 0xf4, 0x3d,
	0xb9, 0x84, 0x51, 0x4a, 0x88, 0xa9, 0x3d, 0xf4, 0x70, 0x8b, 0x71, 0xdc, 0x0e, 0xa6, 0xfe, 0xcd,
	0x95, 0x30, 0x89, 0x43, 0x26, 0xdc, 0xf2, 0xd8, 0xf8, 0x5c, 0xf7, 0x62, 0xfb, 0x66, 0xbb, 0x5a,
	0xd7, 0x79, 0x1e, 0x81, 0xac, 0x2b, 0x38, 0xfa, 0x1c, 0x6e, 0x3b, 0x6c, 0xea, 0x33, 0x8a, 0xa9,
	0x8c, 0xdd, 0x5a, 0x13, 0x0b, 0xd6, 0xba, 0x43, 0xf5, 0xd5, 0xf1, 0x02, 0x21, 0x31, 0x6f, 0xb3,
	0xa9, 0x4d, 0xa8, 0xd6, 0xbb, 0x82, 0x95, 0x34, 0xa2, 0x97, 0x70, 0x77, 0xc2, 0x3c, 0xb7, 0xe1,
	0xfb, 0x1e, 0x71, 0x74, 0x4f, 0x9f, 0x52, 0x49, 0x3c, 0x9d, 0x42, 0x5f, 0xda, 0xea, 0x0e, 0xc8,
	0xdf, 0xb0, 0xf2, 0x34, 0x22, 0xf4, 0x2d, 0x14, 0x3c, 0x32, 0xc2, 0xce, 0xdc, 0xf1, 0x70, 0xa4,
	0x68, 0x9f, 0x56, 0xc3, 0x3b, 0x59, 0x37, 0x40, 0xdd, 0xc9, 0xd5, 0xd9, 0xfd, 0xea, 0x79, 0x1c,
	0x64, 0x2d, 0xe2, 0x91, 0x05, 0x05, 0x1e, 0x6d, 0x4a, 0x11, 0x89, 0x58, 0xea, 0x6d, 0x17, 0xef,
	0x62, 0x0b, 0xff, 0x25, 0x20, 0x1c, 0x4f, 0x31, 0x95, 0xc2, 0x5a, 0xd0, 0xa0, 0x13, 0x38, 0x20,
	0xd4, 0xf1, 0x02, 0x17, 0x9b, 0x3d, 0xcb, 0xa6, 0x63, 0x2c, 0xb4, 0x80, 0x15, 0xac, 0x55, 0xb3,
	0x8a, 0xc4, 0x6f, 0x92, 0x91, 0xc5, 0x30, 0x72, 0xc5, 0x8c, 0xbe, 0x84, 0xc3, 0xd8, 0x44, 0x87,
	0x2c, 0xa0, 0x6e, 0x8f, 0xa9, 0x26, 0x86, 0x1a, 0xb4, 0xc9, 0x85, 0xea, 0x70, 0x27, 0x32, 0x5f,
	0x04, 0x72, 0x09, 0x12, 0xaa, 0xd2, 0x46, 0x5f, 0xe5, 0x6f, 0x19, 0xf8, 0x78, 0xf3, 0xc5, 0xf4,
	0x8e, 0x23, 0x91, 0x68, 0x5f, 0xf6, 0x83, 0xb4, 0xaf, 0xf2, 0xaf, 0x1c, 0x1c, 0x6e, 0xb8, 0xb7,
	0xd1, 0x0f, 0x00, 0x2e, 0xf6, 0x3d, 0x36, 0x57, 0x08, 0x9d, 0x46, 0xb1, 0xfe, 0xfb, 0xb4, 0x8f,
	0x35, 0x6d, 0x81, 0xcf, 0x82, 0x21, 0xe6, 0x14, 0x4b, 0x7c, 0xa5, 0x3f, 0xb1, 0xe8, 0x2d, 0xf8,
	0x16, 0x47, 0xb3, 0x41, 0x6d, 0x6f, 0x2e, 0x88, 0xb8, 0xf1, 0x01, 0x5f, 0xc1, 0xa1, 0x36, 0xec,
	0x86, 0x96, 0xbe, 0xb4, 0x65, 0x70, 0xf3, 0x61, 0x27, 0x81, 0x42, 0x0e, 0xec, 0xe3, 0x37, 0x12,
	0x73, 0x6a, 0x7b, 0xe6, 0xf2, 0xc8, 0xf3, 0x6d, 0x5a, 0xc5, 0x9d, 0x04, 0x2a, 0x79, 0x55, 0xac,
	0x50, 0xa2, 0x87, 0xb0, 0x27, 0xb9, 0xed, 0xe0, 0xbe, 0x3d, 0xf5, 0x3d, 0x35, 0xef, 0x85, 0xa3,
	0xd0, 0x27, 0x6b, 0xb9, 0x9e, 0x7a, 0xcc, 0x96, 0xcb, 0xc9, 0x26, 0x71, 0x68, 0x02, 0xe5, 0x30,
	0xfb, 0x9e, 0x42, 0x38, 0xcc, 0xeb, 0x53, 0x32, 0x1a, 0x11, 0x3a, 0x8e, 0xf7, 0x57, 0x34, 0x16,
	0xa5, 0x77, 0x21, 0x85, 0x07, 0x8d, 0xe0, 0xd3, 0xcd, 0x11, 0xd1, 0xe6, 0xbf, 0xb1, 0xae, 0x5c,
	0x4f, 0x83, 0x5e, 0xc0, 0xae, 0x83, 0xb9, 0xec, 0x71, 0x36, 0x23, 0x2e, 0xe6, 0x5a, 0x58, 0xf6,
	0xeb, 0x5f, 0xa7, 0x8a, 0x2c, 0xf1, 0x98, 0x6c, 0x2d, 0x01, 0xf5, 0x08, 0x91, 0xa0, 0x52, 0x53,
	0xac, 0xf0, 0xc9, 0x68, 0x84, 0x23, 0xc1, 0x49, 0x9d, 0x62, 0xfb, 0x3d, 0xf3, 0xf4, 0xb4, 0xb3,
	0x32, 0xc5, 0x86, 0x14, 0x95, 0x17, 0xf0, 0xc9, 0x35, 0x2b, 0x8e, 0xbe, 0x81, 0x7c, 0x58, 0xa7,
	0x1b, 0x9d, 0x98, 0xf4, 0xc6, 0xc4, 0x80, 0xca, 0xdf, 0x33, 0x70, 0xb8, 0xe1, 0xd3, 0xc8, 0x83,
	0xdb, 0x71, 0xaa, 0x1d, 0xea, 0xfa, 0x8c, 0x50, 0x29, 0x22, 0xf6, 0x3f, 0xa4, 0x95, 0x72, 0xb1,
	0x0a, 0x4c, 0x56, 0xb5, 0x4e, 0x5c, 0xf9, 0x01, 0xca, 0xd7, 0x83, 0xde, 0xab, 0xc6, 0x67, 0x60,
	0xbc, 0x6b, 0x62, 0x7e, 0x2f, 0xde, 0x41, 0x24, 0xa4, 0x6b, 0xb3, 0xee, 0x7b, 0xb1, 0x76, 0xa1,
	0xd4, 0x6b, 0x37, 0x3f, 0x1c, 0x9f, 0x84, 0xa3, 0x77, 0x0f, 0x96, 0x6a, 0xda, 0xbd, 0x1a, 0x2d,
	0x23, 0xd9, 0x5f, 0x18, 0x50, 0x19, 0x40, 0xbd, 0x88, 0xd0, 0x9d, 0xd5, 0xee, 0x25, 0x0b, 0x32,
	0x20, 0x4f, 0x59, 0xe8, 0xdc, 0xd2, 0xce, 0xf8, 0xb5, 0xf2, 0x63, 0x16, 0x7e, 0xbe, 0xfe, 0xcb,
	0x34, 0x94, 0xbd, 0x16, 0xe4, 0x44, 0x28, 0x9b, 0x19, 0x7d, 0xe0, 0x7e, 0x9d, 0xb6, 0xa1, 0xc2,
	0x94, 0x15, 0x1a, 0x5b, 0x11, 0x14, 0xfd, 0x0a, 0xf6, 0xc7, 0xb6, 0xc4, 0xaf, 0xed, 0x79, 0x3c,
	0xab, 0x67, 0x8f, 0xb7, 0x4e, 0x0a, 0xd6, 0x8a, 0x55, 0x0d, 0xec, 0x98, 0x73, 0xc6, 0x9f, 0x60,
	0x21, 0xd4, 0xd5, 0x16, 0xe6, 0x99, 0xb0, 0xa1, 0x3f, 0xc2, 0xd2, 0x68, 0x1c, 0x69, 0xf0, 0x4f,
	0x9a, 0xa6, 0x9f, 0x40, 0xc1, 0x99, 0x60, 0xe7, 0x95, 0x08, 0xa6, 0x22, 0xd2, 0xd7, 0x5a, 0xea,
	0x81, 0xd7, 0x75, 0xb4, 0x62, 0x98, 0xb5, 0x60, 0xa8, 0xfc, 0x09, 0x0e, 0x56, 0xbc, 0x6a, 0x25,
	0x96, 0x52, 0x0c, 0x17, 0x6a, 0x39, 0x83, 0x13, 0x38, 0x10, 0xc4, 0xc5, 0x8e, 0xcd, 0x4d, 0xfa,
	0x12, 0x3b, 0x92, 0xf1, 0x68, 0xb9, 0x56, 0xcd, 0xf7, 0x18, 0xec, 0x25, 0xa6, 0x44, 0x74, 0x00,
	0xc5, 0xa7, 0xdd, 0x7e, 0xaf, 0xd3, 0x32, 0x4f, 0xcd, 0x4e, 0xbb, 0xf4, 0x33, 0x54, 0x80, 0x9d,
	0x81, 0xd5, 0x68, 0x75, 0x4a, 0x19, 0xf5, 0xd8, 0xee, 0x34, 0x9f, 0x3e, 0x2c, 0x65, 0xd1, 0x2d,
	0xd8, 0x36, 0xbb, 0xa7, 0x17, 0xa5, 0x2d, 0x54, 0x84, 0xfc, 0xf3, 0x86, 0xd5, 0x35, 0xbb, 0x0f,
	0x4b, 0xdb, 0x2a, 0xa2, 0x63, 0x59, 0x17, 0x56, 0x69, 0x07, 0xed, 0xc2, 0xad, 0x96, 0x65, 0x0e,
	0xcc, 0x56, 0xe3, 0xbc, 0x94, 0x43, 0x79, 0xd8, 0xba, 0x38, 0x3d, 0x2d, 0xe5, 0xef, 0xb5, 0xe1,
	0xa3, 0x8d, 0x8a, 0xb9, 0xfe, 0xe1, 0x7d, 0x80, 0xb3, 0xa7, 0xcd, 0x8e, 0xd5, 0xed, 0x0c, 0x3a,
	0xfd, 0x52, 0x06, 0x01, 0xe4, 0xcc, 0xfe, 0xc0, 0xbc, 0x68, 0x97, 0xb2, 0xf7, 0x1e, 0xc3, 0x5e,
	0xe2, 0x27, 0xdb, 0x3a, 0xfa, 0x10, 0x0e, 0x06, 0x8f, 0x4c, 0xab, 0x7d, 0xd9, 0x6b, 0x58, 0x83,
	0x17, 0x97, 0x8f, 0x9f, 0x0f, 0x4a, 0x19, 0x65, 0x3c, 0x35, 0xad, 0xfe, 0x60, 0xc9, 0x98, 0x6d,
	0xb6, 0xfe, 0xfd, 0xb6, 0x9c, 0xf9, 0xcf, 0xdb, 0x72, 0xe6, 0x7f, 0x6f, 0xcb, 0x99, 0xef, 0xbf,
	0x1e, 0x13, 0x39, 0x09, 0x86, 0x55, 0x87, 0x4d, 0x6b, 0x43, 0x9b, 0xfe, 0xd5, 0x26, 0x8e, 0xc7,
	0x02, 0x37, 0xfc, 0x1b, 0xe9, 0x8b, 0x78, 0xfd, 0x6a, 0xb3, 0x7a, 0x6d, 0xf9, 0xff, 0xa1, 0x61,
	0x4e, 0x1f, 0xbd, 0xaf, 0xfe, 0x1f, 0x00, 0x00, 0xff, 0xff, 0xa5, 0xef, 0x21, 0xe7, 0x7c, 0x12,
	0x00, 0x00,
}

func (m *IstioControlPlaneSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IstioControlPlaneSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IstioControlPlaneSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MeshID) > 0 {
		i -= len(m.MeshID)
		copy(dAtA[i:], m.MeshID)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.MeshID)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.K8SResourceOverlays) > 0 {
		for iNdEx := len(m.K8SResourceOverlays) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.K8SResourceOverlays[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
	}
	if m.MeshConfig != nil {
		{
			size, err := m.MeshConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	if m.HttpProxyEnvs != nil {
		{
			size, err := m.HttpProxyEnvs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	if len(m.Distribution) > 0 {
		i -= len(m.Distribution)
		copy(dAtA[i:], m.Distribution)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.Distribution)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.CaAddress) > 0 {
		i -= len(m.CaAddress)
		copy(dAtA[i:], m.CaAddress)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.CaAddress)))
		i--
		dAtA[i] = 0x62
	}
	if m.JwtPolicy != 0 {
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(m.JwtPolicy))
		i--
		dAtA[i] = 0x58
	}
	if m.WatchOneNamespace != nil {
		n3, err3 := github_com_gogo_protobuf_types.StdBoolMarshalTo(*m.WatchOneNamespace, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdBool(*m.WatchOneNamespace):])
		if err3 != nil {
			return 0, err3
		}
		i -= n3
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n3))
		i--
		dAtA[i] = 0x52
	}
	if m.ProxyWasm != nil {
		{
			size, err := m.ProxyWasm.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.Sds != nil {
		{
			size, err := m.Sds.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.TelemetryV2 != nil {
		{
			size, err := m.TelemetryV2.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.ProxyInit != nil {
		{
			size, err := m.ProxyInit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Proxy != nil {
		{
			size, err := m.Proxy.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Istiod != nil {
		{
			size, err := m.Istiod.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.MountMtlsCerts != nil {
		n10, err10 := github_com_gogo_protobuf_types.StdBoolMarshalTo(*m.MountMtlsCerts, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdBool(*m.MountMtlsCerts):])
		if err10 != nil {
			return 0, err10
		}
		i -= n10
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n10))
		i--
		dAtA[i] = 0x1a
	}
	if m.Logging != nil {
		{
			size, err := m.Logging.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Version) > 0 {
		i -= len(m.Version)
		copy(dAtA[i:], m.Version)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.Version)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LoggingConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LoggingConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LoggingConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Level) > 0 {
		i -= len(m.Level)
		copy(dAtA[i:], m.Level)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.Level)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SDSConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SDSConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SDSConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TokenAudience) > 0 {
		i -= len(m.TokenAudience)
		copy(dAtA[i:], m.TokenAudience)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.TokenAudience)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProxyConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProxyConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ExcludeOutboundPorts) > 0 {
		i -= len(m.ExcludeOutboundPorts)
		copy(dAtA[i:], m.ExcludeOutboundPorts)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.ExcludeOutboundPorts)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.ExcludeInboundPorts) > 0 {
		i -= len(m.ExcludeInboundPorts)
		copy(dAtA[i:], m.ExcludeInboundPorts)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.ExcludeInboundPorts)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.ExcludeIPRanges) > 0 {
		i -= len(m.ExcludeIPRanges)
		copy(dAtA[i:], m.ExcludeIPRanges)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.ExcludeIPRanges)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.IncludeIPRanges) > 0 {
		i -= len(m.IncludeIPRanges)
		copy(dAtA[i:], m.IncludeIPRanges)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.IncludeIPRanges)))
		i--
		dAtA[i] = 0x52
	}
	if m.Resources != nil {
		{
			size, err := m.Resources.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.Lifecycle != nil {
		{
			size, err := m.Lifecycle.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.HoldApplicationUntilProxyStarts != nil {
		n14, err14 := github_com_gogo_protobuf_types.StdBoolMarshalTo(*m.HoldApplicationUntilProxyStarts, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdBool(*m.HoldApplicationUntilProxyStarts):])
		if err14 != nil {
			return 0, err14
		}
		i -= n14
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n14))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ClusterDomain) > 0 {
		i -= len(m.ClusterDomain)
		copy(dAtA[i:], m.ClusterDomain)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.ClusterDomain)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ComponentLogLevel) > 0 {
		i -= len(m.ComponentLogLevel)
		copy(dAtA[i:], m.ComponentLogLevel)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.ComponentLogLevel)))
		i--
		dAtA[i] = 0x2a
	}
	if m.LogLevel != 0 {
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(m.LogLevel))
		i--
		dAtA[i] = 0x20
	}
	if m.EnableCoreDump != nil {
		n15, err15 := github_com_gogo_protobuf_types.StdBoolMarshalTo(*m.EnableCoreDump, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdBool(*m.EnableCoreDump):])
		if err15 != nil {
			return 0, err15
		}
		i -= n15
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n15))
		i--
		dAtA[i] = 0x1a
	}
	if m.Privileged != nil {
		n16, err16 := github_com_gogo_protobuf_types.StdBoolMarshalTo(*m.Privileged, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdBool(*m.Privileged):])
		if err16 != nil {
			return 0, err16
		}
		i -= n16
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n16))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProxyInitConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyInitConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProxyInitConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Resources != nil {
		{
			size, err := m.Resources.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IstiodConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IstiodConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IstiodConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Spiffe != nil {
		{
			size, err := m.Spiffe.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.CertProvider != 0 {
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(m.CertProvider))
		i--
		dAtA[i] = 0x40
	}
	if m.EnableProtocolSniffingInbound != nil {
		n19, err19 := github_com_gogo_protobuf_types.StdBoolMarshalTo(*m.EnableProtocolSniffingInbound, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdBool(*m.EnableProtocolSniffingInbound):])
		if err19 != nil {
			return 0, err19
		}
		i -= n19
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n19))
		i--
		dAtA[i] = 0x3a
	}
	if m.EnableProtocolSniffingOutbound != nil {
		n20, err20 := github_com_gogo_protobuf_types.StdBoolMarshalTo(*m.EnableProtocolSniffingOutbound, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdBool(*m.EnableProtocolSniffingOutbound):])
		if err20 != nil {
			return 0, err20
		}
		i -= n20
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n20))
		i--
		dAtA[i] = 0x32
	}
	if m.TraceSampling != nil {
		n21, err21 := github_com_gogo_protobuf_types.StdFloatMarshalTo(*m.TraceSampling, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdFloat(*m.TraceSampling):])
		if err21 != nil {
			return 0, err21
		}
		i -= n21
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n21))
		i--
		dAtA[i] = 0x2a
	}
	if m.ExternalIstiod != nil {
		{
			size, err := m.ExternalIstiod.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.EnableStatus != nil {
		n23, err23 := github_com_gogo_protobuf_types.StdBoolMarshalTo(*m.EnableStatus, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdBool(*m.EnableStatus):])
		if err23 != nil {
			return 0, err23
		}
		i -= n23
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n23))
		i--
		dAtA[i] = 0x1a
	}
	if m.EnableAnalysis != nil {
		n24, err24 := github_com_gogo_protobuf_types.StdBoolMarshalTo(*m.EnableAnalysis, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdBool(*m.EnableAnalysis):])
		if err24 != nil {
			return 0, err24
		}
		i -= n24
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n24))
		i--
		dAtA[i] = 0x12
	}
	if m.Deployment != nil {
		{
			size, err := m.Deployment.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ExternalIstiodConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExternalIstiodConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExternalIstiodConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		n26, err26 := github_com_gogo_protobuf_types.StdBoolMarshalTo(*m.Enabled, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdBool(*m.Enabled):])
		if err26 != nil {
			return 0, err26
		}
		i -= n26
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n26))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SPIFFEConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SPIFFEConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SPIFFEConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.OperatorEndpoints != nil {
		{
			size, err := m.OperatorEndpoints.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OperatorEndpointsConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OperatorEndpointsConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OperatorEndpointsConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		n28, err28 := github_com_gogo_protobuf_types.StdBoolMarshalTo(*m.Enabled, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdBool(*m.Enabled):])
		if err28 != nil {
			return 0, err28
		}
		i -= n28
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n28))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TelemetryV2Configuration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TelemetryV2Configuration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TelemetryV2Configuration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		n29, err29 := github_com_gogo_protobuf_types.StdBoolMarshalTo(*m.Enabled, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdBool(*m.Enabled):])
		if err29 != nil {
			return 0, err29
		}
		i -= n29
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n29))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProxyWasmConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyWasmConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProxyWasmConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		n30, err30 := github_com_gogo_protobuf_types.StdBoolMarshalTo(*m.Enabled, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdBool(*m.Enabled):])
		if err30 != nil {
			return 0, err30
		}
		i -= n30
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n30))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PDBConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PDBConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PDBConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		n31, err31 := github_com_gogo_protobuf_types.StdBoolMarshalTo(*m.Enabled, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdBool(*m.Enabled):])
		if err31 != nil {
			return 0, err31
		}
		i -= n31
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(n31))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HTTPProxyEnvsConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HTTPProxyEnvsConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HTTPProxyEnvsConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NoProxy) > 0 {
		i -= len(m.NoProxy)
		copy(dAtA[i:], m.NoProxy)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.NoProxy)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.HttpsProxy) > 0 {
		i -= len(m.HttpsProxy)
		copy(dAtA[i:], m.HttpsProxy)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.HttpsProxy)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.HttpProxy) > 0 {
		i -= len(m.HttpProxy)
		copy(dAtA[i:], m.HttpProxy)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.HttpProxy)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IstioControlPlaneStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IstioControlPlaneStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IstioControlPlaneStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Checksums != nil {
		{
			size, err := m.Checksums.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.MeshConfig != nil {
		{
			size, err := m.MeshConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.ErrorMessage) > 0 {
		i -= len(m.ErrorMessage)
		copy(dAtA[i:], m.ErrorMessage)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.ErrorMessage)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GatewayAddress) > 0 {
		for iNdEx := len(m.GatewayAddress) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.GatewayAddress[iNdEx])
			copy(dAtA[i:], m.GatewayAddress[iNdEx])
			i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.GatewayAddress[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != 0 {
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StatusChecksums) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatusChecksums) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatusChecksums) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SidecarInjector) > 0 {
		i -= len(m.SidecarInjector)
		copy(dAtA[i:], m.SidecarInjector)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.SidecarInjector)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MeshConfig) > 0 {
		i -= len(m.MeshConfig)
		copy(dAtA[i:], m.MeshConfig)
		i = encodeVarintIstiocontrolplane(dAtA, i, uint64(len(m.MeshConfig)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintIstiocontrolplane(dAtA []byte, offset int, v uint64) int {
	offset -= sovIstiocontrolplane(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *IstioControlPlaneSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Version)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.Logging != nil {
		l = m.Logging.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.MountMtlsCerts != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdBool(*m.MountMtlsCerts)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.Istiod != nil {
		l = m.Istiod.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.Proxy != nil {
		l = m.Proxy.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.ProxyInit != nil {
		l = m.ProxyInit.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.TelemetryV2 != nil {
		l = m.TelemetryV2.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.Sds != nil {
		l = m.Sds.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.ProxyWasm != nil {
		l = m.ProxyWasm.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.WatchOneNamespace != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdBool(*m.WatchOneNamespace)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.JwtPolicy != 0 {
		n += 1 + sovIstiocontrolplane(uint64(m.JwtPolicy))
	}
	l = len(m.CaAddress)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	l = len(m.Distribution)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.HttpProxyEnvs != nil {
		l = m.HttpProxyEnvs.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.MeshConfig != nil {
		l = m.MeshConfig.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if len(m.K8SResourceOverlays) > 0 {
		for _, e := range m.K8SResourceOverlays {
			l = e.Size()
			n += 2 + l + sovIstiocontrolplane(uint64(l))
		}
	}
	l = len(m.MeshID)
	if l > 0 {
		n += 2 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LoggingConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Level)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SDSConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TokenAudience)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProxyConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.Privileged != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdBool(*m.Privileged)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.EnableCoreDump != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdBool(*m.EnableCoreDump)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.LogLevel != 0 {
		n += 1 + sovIstiocontrolplane(uint64(m.LogLevel))
	}
	l = len(m.ComponentLogLevel)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	l = len(m.ClusterDomain)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.HoldApplicationUntilProxyStarts != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdBool(*m.HoldApplicationUntilProxyStarts)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.Lifecycle != nil {
		l = m.Lifecycle.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.Resources != nil {
		l = m.Resources.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	l = len(m.IncludeIPRanges)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	l = len(m.ExcludeIPRanges)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	l = len(m.ExcludeInboundPorts)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	l = len(m.ExcludeOutboundPorts)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProxyInitConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.Resources != nil {
		l = m.Resources.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *IstiodConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Deployment != nil {
		l = m.Deployment.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.EnableAnalysis != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdBool(*m.EnableAnalysis)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.EnableStatus != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdBool(*m.EnableStatus)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.ExternalIstiod != nil {
		l = m.ExternalIstiod.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.TraceSampling != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdFloat(*m.TraceSampling)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.EnableProtocolSniffingOutbound != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdBool(*m.EnableProtocolSniffingOutbound)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.EnableProtocolSniffingInbound != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdBool(*m.EnableProtocolSniffingInbound)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.CertProvider != 0 {
		n += 1 + sovIstiocontrolplane(uint64(m.CertProvider))
	}
	if m.Spiffe != nil {
		l = m.Spiffe.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExternalIstiodConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enabled != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdBool(*m.Enabled)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SPIFFEConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OperatorEndpoints != nil {
		l = m.OperatorEndpoints.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OperatorEndpointsConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enabled != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdBool(*m.Enabled)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TelemetryV2Configuration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enabled != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdBool(*m.Enabled)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProxyWasmConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enabled != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdBool(*m.Enabled)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PDBConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enabled != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdBool(*m.Enabled)
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HTTPProxyEnvsConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.HttpProxy)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	l = len(m.HttpsProxy)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	l = len(m.NoProxy)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *IstioControlPlaneStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovIstiocontrolplane(uint64(m.Status))
	}
	if len(m.GatewayAddress) > 0 {
		for _, s := range m.GatewayAddress {
			l = len(s)
			n += 1 + l + sovIstiocontrolplane(uint64(l))
		}
	}
	l = len(m.ErrorMessage)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.MeshConfig != nil {
		l = m.MeshConfig.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.Checksums != nil {
		l = m.Checksums.Size()
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatusChecksums) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MeshConfig)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	l = len(m.SidecarInjector)
	if l > 0 {
		n += 1 + l + sovIstiocontrolplane(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovIstiocontrolplane(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozIstiocontrolplane(x uint64) (n int) {
	return sovIstiocontrolplane(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *IstioControlPlaneSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IstioControlPlaneSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IstioControlPlaneSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Version = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Logging", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Logging == nil {
				m.Logging = &LoggingConfiguration{}
			}
			if err := m.Logging.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MountMtlsCerts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MountMtlsCerts == nil {
				m.MountMtlsCerts = new(bool)
			}
			if err := github_com_gogo_protobuf_types.StdBoolUnmarshal(m.MountMtlsCerts, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Istiod", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Istiod == nil {
				m.Istiod = &IstiodConfiguration{}
			}
			if err := m.Istiod.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proxy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Proxy == nil {
				m.Proxy = &ProxyConfiguration{}
			}
			if err := m.Proxy.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProxyInit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ProxyInit == nil {
				m.ProxyInit = &ProxyInitConfiguration{}
			}
			if err := m.ProxyInit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TelemetryV2", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TelemetryV2 == nil {
				m.TelemetryV2 = &TelemetryV2Configuration{}
			}
			if err := m.TelemetryV2.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sds == nil {
				m.Sds = &SDSConfiguration{}
			}
			if err := m.Sds.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProxyWasm", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ProxyWasm == nil {
				m.ProxyWasm = &ProxyWasmConfiguration{}
			}
			if err := m.ProxyWasm.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WatchOneNamespace", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WatchOneNamespace == nil {
				m.WatchOneNamespace = new(bool)
			}
			if err := github_com_gogo_protobuf_types.StdBoolUnmarshal(m.WatchOneNamespace, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field JwtPolicy", wireType)
			}
			m.JwtPolicy = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.JwtPolicy |= JWTPolicyType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CaAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CaAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Distribution", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Distribution = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HttpProxyEnvs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HttpProxyEnvs == nil {
				m.HttpProxyEnvs = &HTTPProxyEnvsConfiguration{}
			}
			if err := m.HttpProxyEnvs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MeshConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MeshConfig == nil {
				m.MeshConfig = &v1alpha1.MeshConfig{}
			}
			if err := m.MeshConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field K8SResourceOverlays", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.K8SResourceOverlays = append(m.K8SResourceOverlays, &K8SResourceOverlayPatch{})
			if err := m.K8SResourceOverlays[len(m.K8SResourceOverlays)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MeshID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MeshID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LoggingConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LoggingConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LoggingConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Level = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SDSConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SDSConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SDSConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenAudience", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TokenAudience = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProxyConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxyConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxyConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Privileged", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Privileged == nil {
				m.Privileged = new(bool)
			}
			if err := github_com_gogo_protobuf_types.StdBoolUnmarshal(m.Privileged, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableCoreDump", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EnableCoreDump == nil {
				m.EnableCoreDump = new(bool)
			}
			if err := github_com_gogo_protobuf_types.StdBoolUnmarshal(m.EnableCoreDump, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogLevel", wireType)
			}
			m.LogLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LogLevel |= ProxyLogLevel(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentLogLevel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentLogLevel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterDomain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterDomain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HoldApplicationUntilProxyStarts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HoldApplicationUntilProxyStarts == nil {
				m.HoldApplicationUntilProxyStarts = new(bool)
			}
			if err := github_com_gogo_protobuf_types.StdBoolUnmarshal(m.HoldApplicationUntilProxyStarts, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lifecycle", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Lifecycle == nil {
				m.Lifecycle = &v1.Lifecycle{}
			}
			if err := m.Lifecycle.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Resources == nil {
				m.Resources = &ResourceRequirements{}
			}
			if err := m.Resources.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IncludeIPRanges", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IncludeIPRanges = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludeIPRanges", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExcludeIPRanges = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludeInboundPorts", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExcludeInboundPorts = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludeOutboundPorts", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExcludeOutboundPorts = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProxyInitConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxyInitConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxyInitConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Resources == nil {
				m.Resources = &ResourceRequirements{}
			}
			if err := m.Resources.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IstiodConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IstiodConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IstiodConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deployment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Deployment == nil {
				m.Deployment = &BaseKubernetesResourceConfig{}
			}
			if err := m.Deployment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableAnalysis", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EnableAnalysis == nil {
				m.EnableAnalysis = new(bool)
			}
			if err := github_com_gogo_protobuf_types.StdBoolUnmarshal(m.EnableAnalysis, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EnableStatus == nil {
				m.EnableStatus = new(bool)
			}
			if err := github_com_gogo_protobuf_types.StdBoolUnmarshal(m.EnableStatus, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExternalIstiod", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExternalIstiod == nil {
				m.ExternalIstiod = &ExternalIstiodConfiguration{}
			}
			if err := m.ExternalIstiod.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TraceSampling", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TraceSampling == nil {
				m.TraceSampling = new(float32)
			}
			if err := github_com_gogo_protobuf_types.StdFloatUnmarshal(m.TraceSampling, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableProtocolSniffingOutbound", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EnableProtocolSniffingOutbound == nil {
				m.EnableProtocolSniffingOutbound = new(bool)
			}
			if err := github_com_gogo_protobuf_types.StdBoolUnmarshal(m.EnableProtocolSniffingOutbound, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableProtocolSniffingInbound", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EnableProtocolSniffingInbound == nil {
				m.EnableProtocolSniffingInbound = new(bool)
			}
			if err := github_com_gogo_protobuf_types.StdBoolUnmarshal(m.EnableProtocolSniffingInbound, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CertProvider", wireType)
			}
			m.CertProvider = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CertProvider |= PilotCertProviderType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spiffe", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Spiffe == nil {
				m.Spiffe = &SPIFFEConfiguration{}
			}
			if err := m.Spiffe.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExternalIstiodConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExternalIstiodConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExternalIstiodConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = new(bool)
			}
			if err := github_com_gogo_protobuf_types.StdBoolUnmarshal(m.Enabled, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SPIFFEConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SPIFFEConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SPIFFEConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatorEndpoints", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OperatorEndpoints == nil {
				m.OperatorEndpoints = &OperatorEndpointsConfiguration{}
			}
			if err := m.OperatorEndpoints.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OperatorEndpointsConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OperatorEndpointsConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OperatorEndpointsConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = new(bool)
			}
			if err := github_com_gogo_protobuf_types.StdBoolUnmarshal(m.Enabled, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TelemetryV2Configuration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TelemetryV2Configuration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TelemetryV2Configuration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = new(bool)
			}
			if err := github_com_gogo_protobuf_types.StdBoolUnmarshal(m.Enabled, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProxyWasmConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxyWasmConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxyWasmConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = new(bool)
			}
			if err := github_com_gogo_protobuf_types.StdBoolUnmarshal(m.Enabled, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PDBConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PDBConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PDBConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = new(bool)
			}
			if err := github_com_gogo_protobuf_types.StdBoolUnmarshal(m.Enabled, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HTTPProxyEnvsConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HTTPProxyEnvsConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HTTPProxyEnvsConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HttpProxy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HttpProxy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HttpsProxy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HttpsProxy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoProxy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NoProxy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IstioControlPlaneStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IstioControlPlaneStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IstioControlPlaneStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= ConfigState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GatewayAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GatewayAddress = append(m.GatewayAddress, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrorMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MeshConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MeshConfig == nil {
				m.MeshConfig = &v1alpha1.MeshConfig{}
			}
			if err := m.MeshConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Checksums", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Checksums == nil {
				m.Checksums = &StatusChecksums{}
			}
			if err := m.Checksums.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatusChecksums) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatusChecksums: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatusChecksums: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MeshConfig", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MeshConfig = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SidecarInjector", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SidecarInjector = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIstiocontrolplane(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIstiocontrolplane
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipIstiocontrolplane(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowIstiocontrolplane
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowIstiocontrolplane
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthIstiocontrolplane
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupIstiocontrolplane
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthIstiocontrolplane
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthIstiocontrolplane        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowIstiocontrolplane          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupIstiocontrolplane = fmt.Errorf("proto: unexpected end of group")
)
