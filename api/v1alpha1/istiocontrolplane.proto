// Copyright 2021 Cisco Systems, Inc. and/or its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "api/v1alpha1/common.proto";
import "k8s.io/api/core/v1/generated.proto";
import "mesh/v1alpha1/config.proto";
import "gogoproto/gogo.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/wrappers.proto";

// $schema: istio-operator.api.v1alpha1.IstioControlPlaneSpec
// $title: Istio ControlPlane Spec
// $description: Istio control plane descriptor

package istio_operator.v2.api.v1alpha1;

option go_package = "github.com/banzaicloud/istio-operator/v2/api/v1alpha1";

// IstioControlPlane defines an Istio control plane
//
// <!-- crd generation tags
// +cue-gen:IstioControlPlane:groupName:servicemesh.cisco.com
// +cue-gen:IstioControlPlane:version:v1alpha1
// +cue-gen:IstioControlPlane:storageVersion
// +cue-gen:IstioControlPlane:annotations:helm.sh/resource-policy=keep
// +cue-gen:IstioControlPlane:subresource:status
// +cue-gen:IstioControlPlane:scope:Namespaced
// +cue-gen:IstioControlPlane:resource:shortNames=icp,istiocp
// +cue-gen:IstioControlPlane:printerColumn:name="Status",type="string",JSONPath=".status.status",description="Status of the resource"
// +cue-gen:IstioControlPlane:printerColumn:name="Error",type="string",JSONPath=".status.errorMessage",description="Error message"
// +cue-gen:IstioControlPlane:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description="CreationTimestamp is a timestamp
// representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations.
// Clients may not set this value. It is represented in RFC3339 form and is in UTC.
// Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
// +cue-gen:IstioControlPlane:preserveUnknownFields:false
// -->
//
// <!-- go code generation tags
// +genclient
// +k8s:deepcopy-gen=true
// -->
message IstioControlPlaneSpec {
    // Contains the intended version for the Istio control plane.
    // +kubebuilder:validation:Pattern=^1.
    string version = 1 [(gogoproto.jsontag) = "version", (google.api.field_behavior) = REQUIRED];
    // Logging configurations.
    LoggingConfiguration logging = 2 [(gogoproto.jsontag) = "logging"];
    // Use the user-specified, secret volume mounted key and certs for Pilot and workloads.
    google.protobuf.BoolValue mountMtlsCerts = 3 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "mountMtlsCerts"];
    // Istiod configuration.
    IstiodConfiguration istiod = 4 [(gogoproto.jsontag) = "istiod"];
    // Proxy configuration options.
    ProxyConfiguration proxy = 5 [(gogoproto.jsontag) = "proxy"];
    // Proxy Init configuration options.
    ProxyInitConfiguration proxyInit = 6 [(gogoproto.jsontag) = "proxyInit"];
    // Telemetry V2 configuration.
    TelemetryV2Configuration telemetryV2 = 7 [(gogoproto.jsontag) = "telemetryV2"];
    // If SDS is configured, mTLS certificates for the sidecars will be distributed through the
    // SecretDiscoveryService instead of using K8S secrets to mount the certificates.
    SDSConfiguration sds = 8 [(gogoproto.jsontag) = "sds"];
    // ProxyWasm configuration options.
    ProxyWasmConfiguration proxyWasm = 9 [(gogoproto.jsontag) = "proxyWasm"];
    // Whether to restrict the applications namespace the controller manages.
    // If not set, controller watches all namespaces
    google.protobuf.BoolValue watchOneNamespace = 10 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "watchOneNamespace"];
    // Configure the policy for validating JWT.
    // Currently, two options are supported: "third-party-jwt" and "first-party-jwt".
    // +kubebuilder:validation:Enum=THIRD_PARTY_JWT;FIRST_PARTY_JWT
    JWTPolicyType jwtPolicy = 11 [(gogoproto.jsontag) = "jwtPolicy"];
    // The customized CA address to retrieve certificates for the pods in the cluster.
    // CSR clients such as the Istio Agent and ingress gateways can use this to specify the CA endpoint.
    string caAddress = 12 [(gogoproto.jsontag) = "caAddress"];
    // Contains the intended distribution for the Istio control plane.
    // The official distribution is used by default unless special preserved distribution value is set.
    // The only preserved distribution is "cisco" as of now.
    string distribution = 13 [(gogoproto.jsontag) = "distribution"];
    // Upstream HTTP proxy properties to be injected as environment variables to the pod containers.
    HTTPProxyEnvsConfiguration httpProxyEnvs = 14 [(gogoproto.jsontag) = "httpProxyEnvs"];
    // Defines mesh-wide settings for the Istio control plane.
    istio.mesh.v1alpha1.MeshConfig mesh_config = 15;
    // K8s resource overlay patches
    repeated K8sResourceOverlayPatch k8sResourceOverlays = 16;
}

// Comma-separated minimum per-scope logging level of messages to output, in the form of <scope>:<level>,<scope>:<level>
// The control plane has different scopes depending on component, but can configure default log level across all components
// If empty, default scope and level will be used as configured in code
message LoggingConfiguration {
    // +kubebuilder:validation:Pattern=`^([a-zA-Z]+:[a-zA-Z]+,?)+$`
    string level = 1 [(gogoproto.jsontag) = "level"];
}

// SDSConfiguration defines Secret Discovery Service config options
message SDSConfiguration {
    // The JWT token for SDS and the aud field of such JWT. See RFC 7519, section 4.1.3.
    // When a CSR is sent from Citadel Agent to the CA (e.g. Citadel), this aud is to make sure the
    // 	JWT is intended for the CA.
    string tokenAudience = 1 [(gogoproto.jsontag) = "tokenAudience"];
}

// ProxyConfiguration defines config options for Proxy
message ProxyConfiguration {
    string image = 1 [(gogoproto.jsontag) = "image"];
    // If set to true, istio-proxy container will have privileged securityContext
    google.protobuf.BoolValue privileged = 2 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "privileged"];
    // If set, newly injected sidecars will have core dumps enabled.
    google.protobuf.BoolValue enableCoreDump = 3 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "enableCoreDump"];
    // Log level for proxy, applies to gateways and sidecars. If left empty, "warning" is used.
    // Expected values are: trace|debug|info|warning|error|critical|off
    // +kubebuilder:validation:Enum=TRACE;DEBUG;INFO;WARNING;ERROR;CRITICAL;OFF
    ProxyLogLevel logLevel = 4 [(gogoproto.jsontag) = "logLevel"];
    // Per Component log level for proxy, applies to gateways and sidecars. If a component level is
    // not set, then the "LogLevel" will be used. If left empty, "misc:error" is used.
    string componentLogLevel = 5 [(gogoproto.jsontag) = "componentLogLevel"];
    // cluster domain. Default value is "cluster.local"
    string clusterDomain = 6 [(gogoproto.jsontag) = "clusterDomain"];
    // Controls if sidecar is injected at the front of the container list and blocks
    // the start of the other containers until the proxy is ready
    // Default value is 'false'.
    google.protobuf.BoolValue holdApplicationUntilProxyStarts = 7 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "holdApplicationUntilProxyStarts"];
    k8s.io.api.core.v1.Lifecycle lifecycle = 8 [(gogoproto.jsontag) = "lifecycle"];
    ResourceRequirements resources = 9 [(gogoproto.jsontag) = "resources"];
    // IncludeIPRanges the range where to capture egress traffic
    string includeIPRanges = 10 [(gogoproto.jsontag) = "includeIPRanges"];
    // ExcludeIPRanges the range where not to capture egress traffic
    string excludeIPRanges = 11 [(gogoproto.jsontag) = "excludeIPRanges"];
    // ExcludeInboundPorts the comma separated list of inbound ports to be excluded from redirection to Envoy
    string excludeInboundPorts = 12 [(gogoproto.jsontag) = "excludeInboundPorts"];
    // ExcludeOutboundPorts the comma separated list of outbound ports to be excluded from redirection to Envoy
    string excludeOutboundPorts = 13 [(gogoproto.jsontag) = "excludeOutboundPorts"];
}

enum ProxyLogLevel {
    UNSPECIFIED = 0;
    TRACE = 1;
    DEBUG = 2;
    INFO = 3;
    WARNING = 4;
    ERROR = 5;
    CRITICAL = 6;
    OFF = 7;
}

// ProxyInitConfiguration defines config options for Proxy Init containers
message ProxyInitConfiguration {
    string image = 1 [(gogoproto.jsontag) = "image"];
    ResourceRequirements resources = 2 [(gogoproto.jsontag) = "resources"];
}

// IstiodConfiguration defines config options for Istiod
message IstiodConfiguration {
    // Deployment spec
    BaseKubernetesResourceConfig deployment = 1;
    // If enabled, pilot will run Istio analyzers and write analysis errors to the Status field of any Istio Resources
    google.protobuf.BoolValue enableAnalysis = 2 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "enableAnalysis"];
    // If enabled, pilot will update the CRD Status field of all Istio resources with reconciliation status
    google.protobuf.BoolValue enableStatus = 3 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "enableStatus"];
    // Settings for local istiod to control remote clusters as well
    ExternalIstiodConfiguration externalIstiod = 4 [(gogoproto.jsontag) = "externalIstiod"];
    google.protobuf.FloatValue traceSampling = 5 [(gogoproto.wktpointer) = true];
    // If enabled, protocol sniffing will be used for outbound listeners whose port protocol is not specified or unsupported
    google.protobuf.BoolValue enableProtocolSniffingOutbound = 6 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "enableProtocolSniffingOutbound"];
    // If enabled, protocol sniffing will be used for inbound listeners whose port protocol is not specified or unsupported
    google.protobuf.BoolValue enableProtocolSniffingInbound = 7 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "enableProtocolSniffingInbound"];
    // Configure the certificate provider for control plane communication.
    // Currently, two providers are supported: "kubernetes" and "istiod".
    // As some platforms may not have kubernetes signing APIs,
    // Istiod is the default
    // +kubebuilder:validation:Enum=KUBERNETES;ISTIOD
    PilotCertProviderType certProvider = 8 [(gogoproto.jsontag) = "certProvider"];
    // SPIFFE configuration of Pilot
    SPIFFEConfiguration spiffe = 9 [(gogoproto.jsontag) = "spiffe"];
}

// ExternalIstiodConfiguration defines settings for local istiod to control remote clusters as well
message ExternalIstiodConfiguration {
    google.protobuf.BoolValue enabled = 1 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "enabled"];
}

enum PilotCertProviderType {
    UNSPECIFIED = 0;
    KUBERNETES = 1;
    ISTIOD = 2;
}

// SPIFFEConfiguration is for SPIFFE configuration of Pilot
message SPIFFEConfiguration {
    OperatorEndpointsConfiguration operatorEndpoints = 1 [(gogoproto.jsontag) = "operatorEndpoints"];
}

// OperatorEndpointsConfiguration defines config options for automatic SPIFFE endpoints
message OperatorEndpointsConfiguration {
    google.protobuf.BoolValue enabled = 1 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "enabled"];
}

message TelemetryV2Configuration {
    google.protobuf.BoolValue enabled = 1 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "enabled"];
}

// ProxyWasmConfiguration defines config options for Envoy wasm
message ProxyWasmConfiguration {
    google.protobuf.BoolValue enabled = 1 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "enabled"];
}

// PDBConfiguration holds Pod Disruption Budget related config options
message PDBConfiguration {
    google.protobuf.BoolValue enabled = 1 [(gogoproto.wktpointer) = true, (gogoproto.jsontag) = "enabled"];
}

enum JWTPolicyType {
    UNSPECIFIED = 0;
    THIRD_PARTY_JWT = 1;
    FIRST_PARTY_JWT = 2;
}

message HTTPProxyEnvsConfiguration {
    string httpProxy = 1 [(gogoproto.jsontag) = "httpProxy"];
    string httpsProxy = 2 [(gogoproto.jsontag) = "httpsProxy"];
    string noProxy = 3 [(gogoproto.jsontag) = "noProxy"];
}

// <!-- go code generation tags
// +genclient
// +k8s:deepcopy-gen=true
// -->
message IstioControlPlaneStatus {
    // Reconciliation status of the Istio control plane
    ConfigState status = 1;

    // Current addresses for the corresponding gateways
    repeated string gatewayAddress = 2;

    // Reconciliation error message if any
    string errorMessage = 3;

    istio.mesh.v1alpha1.MeshConfig meshConfig = 4;

    StatusChecksums checksums = 5;
}

// <!-- go code generation tags
// +genclient
// +k8s:deepcopy-gen=true
// -->
message StatusChecksums {
    string meshConfig = 1;
    string sidecarInjector = 2;
}
