# DO NOT EDIT - Generated by Cue OpenAPI generator based on Istio APIs.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  name: istiocontrolplanes.servicemesh.cisco.com
spec:
  group: servicemesh.cisco.com
  names:
    kind: IstioControlPlane
    listKind: IstioControlPlaneList
    plural: istiocontrolplanes
    shortNames:
    - icp
    - istiocp
    singular: istiocontrolplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: IstioControlPlane defines an Istio control plane.
            properties:
              caAddress:
                description: The customized CA address to retrieve certificates for
                  the pods in the cluster.
                type: string
              defaultPodDisruptionBudget:
                description: |-
                  Enable pod disruption budget for the control plane, which is used to ensure Istio control plane
                  components are gradually upgraded or recovered.
                properties:
                  enabled:
                    nullable: true
                    type: boolean
                type: object
              distribution:
                description: Contains the intended distribution for the Istio control
                  plane.
                type: string
              httpProxyEnvs:
                description: Upstream HTTP proxy properties to be injected as environment
                  variables to the pod containers.
                properties:
                  httpProxy:
                    type: string
                  httpsProxy:
                    type: string
                  noProxy:
                    type: string
                type: object
              istiod:
                description: Istiod configuration.
                properties:
                  certProvider:
                    description: Configure the certificate provider for control plane
                      communication.
                    enum:
                    - KUBERNETES
                    - ISTIOD
                    type: string
                  deployment:
                    description: Deployment spec.
                    properties:
                      affinity:
                        description: Standard Kubernetes affinity configuration.
                        properties:
                          nodeAffinity:
                            description: Describes node affinity scheduling rules
                              for the pod.
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  The scheduler will prefer to schedule pods to nodes that satisfy
                                  the affinity expressions specified by this field, but it may choose
                                  a node that violates one or more of the expressions.
                                items:
                                  properties:
                                    preference:
                                      description: A node selector term, associated
                                        with the corresponding weight.
                                      properties:
                                        matchExpressions:
                                          description: A list of node selector requirements
                                            by node's labels.
                                          items:
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          type: array
                                        matchFields:
                                          description: A list of node selector requirements
                                            by node's fields.
                                          items:
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                    weight:
                                      description: Weight associated with matching
                                        the corresponding nodeSelectorTerm, in the
                                        range 1-100.
                                      format: int32
                                      type: integer
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  If the affinity requirements specified by this field are not met at
                                  scheduling time, the pod will not be scheduled onto the node.
                                properties:
                                  nodeSelectorTerms:
                                    description: Required.
                                    items:
                                      properties:
                                        matchExpressions:
                                          description: A list of node selector requirements
                                            by node's labels.
                                          items:
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          type: array
                                        matchFields:
                                          description: A list of node selector requirements
                                            by node's fields.
                                          items:
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                type: object
                            type: object
                          podAffinity:
                            description: Describes pod affinity scheduling rules (e.g.
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  The scheduler will prefer to schedule pods to nodes that satisfy
                                  the affinity expressions specified by this field, but it may choose
                                  a node that violates one or more of the expressions.
                                items:
                                  properties:
                                    podAffinityTerm:
                                      description: Required.
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements.
                                              items:
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: |-
                                            namespaces specifies which namespaces the labelSelector applies to (matches against);
                                            null or empty list means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: |-
                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                            selected pods is running.
                                          type: string
                                      type: object
                                    weight:
                                      description: |-
                                        weight associated with matching the corresponding podAffinityTerm,
                                        in the range 1-100.
                                      format: int32
                                      type: integer
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  If the affinity requirements specified by this field are not met at
                                  scheduling time, the pod will not be scheduled onto the node.
                                items:
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements.
                                          items:
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: |-
                                        namespaces specifies which namespaces the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: |-
                                        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                        the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches that of any node on which any of the
                                        selected pods is running.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          podAntiAffinity:
                            description: Describes pod anti-affinity scheduling rules
                              (e.g.
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  The scheduler will prefer to schedule pods to nodes that satisfy
                                  the anti-affinity expressions specified by this field, but it may choose
                                  a node that violates one or more of the expressions.
                                items:
                                  properties:
                                    podAffinityTerm:
                                      description: Required.
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements.
                                              items:
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: |-
                                            namespaces specifies which namespaces the labelSelector applies to (matches against);
                                            null or empty list means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: |-
                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                            selected pods is running.
                                          type: string
                                      type: object
                                    weight:
                                      description: |-
                                        weight associated with matching the corresponding podAffinityTerm,
                                        in the range 1-100.
                                      format: int32
                                      type: integer
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  If the anti-affinity requirements specified by this field are not met at
                                  scheduling time, the pod will not be scheduled onto the node.
                                items:
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements.
                                          items:
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: |-
                                        namespaces specifies which namespaces the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: |-
                                        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                        the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches that of any node on which any of the
                                        selected pods is running.
                                      type: string
                                  type: object
                                type: array
                            type: object
                        type: object
                      deploymentStrategy:
                        properties:
                          rollingUpdate:
                            description: Rolling update config params.
                            properties:
                              maxSurge:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              maxUnavailable:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                            type: object
                          type:
                            description: Type of deployment.
                            type: string
                        type: object
                      env:
                        description: If present will be appended to the environment
                          variables of the container.
                        items:
                          properties:
                            name:
                              description: Name of the environment variable.
                              type: string
                            value:
                              description: |-
                                Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in the container and
                                any service environment variables.
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    localObjectReference:
                                      description: The ConfigMap to select from.
                                      properties:
                                        name:
                                          description: Name of the referent.
                                          type: string
                                      type: object
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined.
                                      type: boolean
                                  type: object
                                fieldRef:
                                  description: |-
                                    Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations,
                                    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  type: object
                                resourceFieldRef:
                                  description: |-
                                    Selects a resource of the container: only resources limits and requests
                                    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars.'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1".
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select.'
                                      type: string
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.
                                      type: string
                                    localObjectReference:
                                      description: The name of the secret in the pod's
                                        namespace to select from.
                                      properties:
                                        name:
                                          description: Name of the referent.
                                          type: string
                                      type: object
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined.
                                      type: boolean
                                  type: object
                              type: object
                          type: object
                        type: array
                      image:
                        description: Standard Kubernetes container image configuration.
                        type: string
                      imagePullPolicy:
                        description: Image pull policy.
                        type: string
                      imagePullSecrets:
                        description: ImagePullSecrets is an optional list of references
                          to secrets to use for pulling any of the images.
                        items:
                          properties:
                            name:
                              description: Name of the referent.
                              type: string
                          type: object
                        type: array
                      metadata:
                        description: Generic k8s resource metadata.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations is an unstructured key value map stored with a resource that may be
                              set by external tools to store and retrieve arbitrary metadata.
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              Map of string keys and values that can be used to organize and categorize
                              (scope and select) objects.
                            type: object
                        type: object
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: Standard Kubernetes node selector configuration.
                        type: object
                      podDisruptionBudget:
                        description: PodDisruptionBudget configuration.
                        properties:
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              An eviction is allowed if at most "maxUnavailable" pods selected by
                              "selector" are unavailable after the eviction, i.e.
                            x-kubernetes-int-or-string: true
                          minAvailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              An eviction is allowed if at least "minAvailable" pods selected by
                              "selector" will still be available after the eviction, i.e.
                            x-kubernetes-int-or-string: true
                        type: object
                      podMetadata:
                        description: Standard Kubernetes pod annotation and label
                          configuration.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations is an unstructured key value map stored with a resource that may be
                              set by external tools to store and retrieve arbitrary metadata.
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              Map of string keys and values that can be used to organize and categorize
                              (scope and select) objects.
                            type: object
                        type: object
                      priorityClassName:
                        description: If specified, indicates the pod's priority.
                        type: string
                      replicas:
                        description: Replica configuration.
                        properties:
                          count:
                            description: Standard Kubernetes replica count configuration.
                            minimum: 0
                            nullable: true
                            type: integer
                          max:
                            description: Standard Kubernetes maximum replicas configuration.
                            minimum: 0
                            nullable: true
                            type: integer
                          min:
                            description: Standard Kubernetes minimum replicas configuration.
                            minimum: 0
                            nullable: true
                            type: integer
                          targetCPUUtilizationPercentage:
                            description: |-
                              target average CPU utilization (represented as a percentage of requested CPU) over all the pods;
                              if not specified the default autoscaling policy will be used.
                            minimum: 0
                            nullable: true
                            type: integer
                        type: object
                      resources:
                        description: Standard Kubernetes resource configuration, memory
                          and CPU resource requirements.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              x-kubernetes-int-or-string: true
                            description: Limits describes the maximum amount of compute
                              resources allowed.
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              x-kubernetes-int-or-string: true
                            description: Requests describes the minimum amount of
                              compute resources required.
                            type: object
                        type: object
                      securityContext:
                        description: Standard Kubernetes security context configuration.
                        properties:
                          allowPrivilegeEscalation:
                            description: |-
                              AllowPrivilegeEscalation controls whether a process can gain more
                              privileges than its parent process.
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running
                              containers.
                            properties:
                              add:
                                description: Added capabilities.
                                items:
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities.
                                items:
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount
                              to use for the containers.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root
                              filesystem.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as
                              a non-root user.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the
                              container.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to
                              all containers.
                            properties:
                              gmsaCredentialSpec:
                                description: |-
                                  GMSACredentialSpec is where the GMSA admission webhook
                                  (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                  GMSA credential spec named by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of
                                  the GMSA credential spec to use.
                                type: string
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process.
                                type: string
                            type: object
                        type: object
                      tolerations:
                        description: |-
                          google.protobuf.Int32Value replicaCount = 1 [(gogoproto.wktpointer) = true];
                          If specified, the pod's tolerations.
                        items:
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value.
                              type: string
                            tolerationSeconds:
                              description: |-
                                TolerationSeconds represents the period of time the toleration (which must be
                                of effect NoExecute, otherwise this field is ignored) tolerates the taint.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to.
                              type: string
                          type: object
                        type: array
                      volumeMounts:
                        description: Pod volumes to mount into the container's filesystem.
                        items:
                          properties:
                            mountPath:
                              description: Path within the container at which the
                                volume should be mounted.
                              type: string
                            mountPropagation:
                              description: |-
                                mountPropagation determines how mounts are propagated from the host
                                to container and the other way around.
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: Mounted read-only if true, read-write otherwise
                                (false or unspecified).
                              type: boolean
                            subPath:
                              description: Path within the volume from which the container's
                                volume should be mounted.
                              type: string
                            subPathExpr:
                              description: Expanded path within the volume from which
                                the container's volume should be mounted.
                              type: string
                          type: object
                        type: array
                      volumes:
                        description: List of volumes that can be mounted by containers
                          belonging to the pod.
                        items:
                          properties:
                            name:
                              description: Volume's name.
                              type: string
                            volumeSource:
                              description: VolumeSource represents the location and
                                type of the mounted volume.
                              properties:
                                awsElasticBlockStore:
                                  description: |-
                                    AWSElasticBlockStore represents an AWS Disk resource that is attached to a
                                    kubelet's host machine and then exposed to the pod.
                                  properties:
                                    fsType:
                                      description: Filesystem type of the volume that
                                        you want to mount.
                                      type: string
                                    partition:
                                      description: The partition in the volume that
                                        you want to mount.
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: Specify "true" to force and set
                                        the ReadOnly property in VolumeMounts to "true".
                                      type: boolean
                                    volumeID:
                                      description: Unique ID of the persistent disk
                                        resource in AWS (Amazon EBS volume).
                                      type: string
                                  type: object
                                azureDisk:
                                  description: AzureDisk represents an Azure Data
                                    Disk mount on the host and bind mount to the pod.
                                  properties:
                                    cachingMode:
                                      description: 'Host Caching mode: None, Read
                                        Only, Read Write.'
                                      type: string
                                    diskName:
                                      description: The Name of the data disk in the
                                        blob storage.
                                      type: string
                                    diskURI:
                                      description: The URI the data disk in the blob
                                        storage.
                                      type: string
                                    fsType:
                                      description: Filesystem type to mount.
                                      type: string
                                    kind:
                                      description: 'Expected values Shared: multiple
                                        blob disks per storage account  Dedicated:
                                        single blob disk per storage account  Managed:
                                        azure managed data disk (only in managed availability
                                        set).'
                                      type: string
                                    readOnly:
                                      description: Defaults to false (read/write).
                                      type: boolean
                                  type: object
                                azureFile:
                                  description: AzureFile represents an Azure File
                                    Service mount on the host and bind mount to the
                                    pod.
                                  properties:
                                    readOnly:
                                      description: Defaults to false (read/write).
                                      type: boolean
                                    secretName:
                                      description: the name of secret that contains
                                        Azure Storage Account Name and Key.
                                      type: string
                                    shareName:
                                      description: Share Name.
                                      type: string
                                  type: object
                                cephfs:
                                  description: CephFS represents a Ceph FS mount on
                                    the host that shares a pod's lifetime.
                                  properties:
                                    monitors:
                                      description: |-
                                        Required: Monitors is a collection of Ceph monitors
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.
                                      items:
                                        type: string
                                      type: array
                                    path:
                                      description: 'Optional: Used as the mounted
                                        root, rather than the full Ceph tree, default
                                        is /.'
                                      type: string
                                    readOnly:
                                      description: 'Optional: Defaults to false (read/write).'
                                      type: boolean
                                    secretFile:
                                      description: |-
                                        Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.
                                      type: string
                                    secretRef:
                                      description: 'Optional: SecretRef is reference
                                        to the authentication secret for User, default
                                        is empty.'
                                      properties:
                                        name:
                                          description: Name of the referent.
                                          type: string
                                      type: object
                                    user:
                                      description: |-
                                        Optional: User is the rados user name, default is admin
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.
                                      type: string
                                  type: object
                                cinder:
                                  description: Cinder represents a cinder volume attached
                                    and mounted on kubelets host machine.
                                  properties:
                                    fsType:
                                      description: Filesystem type to mount.
                                      type: string
                                    readOnly:
                                      description: 'Optional: Defaults to false (read/write).'
                                      type: boolean
                                    secretRef:
                                      description: |-
                                        Optional: points to a secret object containing parameters used to connect
                                        to OpenStack.
                                      properties:
                                        name:
                                          description: Name of the referent.
                                          type: string
                                      type: object
                                    volumeID:
                                      description: volume id used to identify the
                                        volume in cinder.
                                      type: string
                                  type: object
                                configMap:
                                  description: ConfigMap represents a configMap that
                                    should populate this volume.
                                  properties:
                                    defaultMode:
                                      description: 'Optional: mode bits to use on
                                        created files by default.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: |-
                                        If unspecified, each key-value pair in the Data field of the referenced
                                        ConfigMap will be projected into the volume as a file whose name is the
                                        key and content is the value.
                                      items:
                                        properties:
                                          key:
                                            description: The key to project.
                                            type: string
                                          mode:
                                            description: |-
                                              Optional: mode bits to use on this file, must be a value between 0
                                              and 0777.
                                            format: int32
                                            type: integer
                                          path:
                                            description: The relative path of the
                                              file to map the key to.
                                            type: string
                                        type: object
                                      type: array
                                    localObjectReference:
                                      properties:
                                        name:
                                          description: Name of the referent.
                                          type: string
                                      type: object
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its keys must be defined.
                                      type: boolean
                                  type: object
                                csi:
                                  description: CSI (Container Storage Interface) represents
                                    storage that is handled by an external CSI driver
                                    (Alpha feature).
                                  properties:
                                    driver:
                                      description: Driver is the name of the CSI driver
                                        that handles this volume.
                                      type: string
                                    fsType:
                                      description: Filesystem type to mount.
                                      type: string
                                    nodePublishSecretRef:
                                      description: |-
                                        NodePublishSecretRef is a reference to the secret object containing
                                        sensitive information to pass to the CSI driver to complete the CSI
                                        NodePublishVolume and NodeUnpublishVolume calls.
                                      properties:
                                        name:
                                          description: Name of the referent.
                                          type: string
                                      type: object
                                    readOnly:
                                      description: Specifies a read-only configuration
                                        for the volume.
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        VolumeAttributes stores driver-specific properties that are passed to the CSI
                                        driver.
                                      type: object
                                  type: object
                                downwardAPI:
                                  description: DownwardAPI represents downward API
                                    about the pod that should populate this volume.
                                  properties:
                                    defaultMode:
                                      description: 'Optional: mode bits to use on
                                        created files by default.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: Items is a list of downward API
                                        volume file.
                                      items:
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field
                                              of the pod: only annotations, labels,
                                              name and namespace are supported.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            type: object
                                          mode:
                                            description: |-
                                              Optional: mode bits to use on this file, must be a value between 0
                                              and 0777.
                                            format: int32
                                            type: integer
                                          path:
                                            description: 'Required: Path is  the relative
                                              path name of the file to be created.'
                                            type: string
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars.'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1".
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select.'
                                                type: string
                                            type: object
                                        type: object
                                      type: array
                                  type: object
                                emptyDir:
                                  description: EmptyDir represents a temporary directory
                                    that shares a pod's lifetime.
                                  properties:
                                    medium:
                                      description: What type of storage medium should
                                        back this directory.
                                      type: string
                                    sizeLimit:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Total amount of local storage required
                                        for this EmptyDir volume.
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  type: object
                                fc:
                                  description: FC represents a Fibre Channel resource
                                    that is attached to a kubelet's host machine and
                                    then exposed to the pod.
                                  properties:
                                    fsType:
                                      description: Filesystem type to mount.
                                      type: string
                                    lun:
                                      description: 'Optional: FC target lun number.'
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: 'Optional: Defaults to false (read/write).'
                                      type: boolean
                                    targetWWNs:
                                      description: 'Optional: FC target worldwide
                                        names (WWNs).'
                                      items:
                                        type: string
                                      type: array
                                    wwids:
                                      description: |-
                                        Optional: FC volume world wide identifiers (wwids)
                                        Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                flexVolume:
                                  description: |-
                                    FlexVolume represents a generic volume resource that is
                                    provisioned/attached using an exec based plugin.
                                  properties:
                                    driver:
                                      description: Driver is the name of the driver
                                        to use for this volume.
                                      type: string
                                    fsType:
                                      description: Filesystem type to mount.
                                      type: string
                                    options:
                                      additionalProperties:
                                        type: string
                                      description: 'Optional: Extra command options
                                        if any.'
                                      type: object
                                    readOnly:
                                      description: 'Optional: Defaults to false (read/write).'
                                      type: boolean
                                    secretRef:
                                      description: |-
                                        Optional: SecretRef is reference to the secret object containing
                                        sensitive information to pass to the plugin scripts.
                                      properties:
                                        name:
                                          description: Name of the referent.
                                          type: string
                                      type: object
                                  type: object
                                flocker:
                                  description: Flocker represents a Flocker volume
                                    attached to a kubelet's host machine.
                                  properties:
                                    datasetName:
                                      description: |-
                                        Name of the dataset stored as metadata -> name on the dataset for Flocker
                                        should be considered as deprecated.
                                      type: string
                                    datasetUUID:
                                      description: UUID of the dataset.
                                      type: string
                                  type: object
                                gcePersistentDisk:
                                  description: |-
                                    GCEPersistentDisk represents a GCE Disk resource that is attached to a
                                    kubelet's host machine and then exposed to the pod.
                                  properties:
                                    fsType:
                                      description: Filesystem type of the volume that
                                        you want to mount.
                                      type: string
                                    partition:
                                      description: The partition in the volume that
                                        you want to mount.
                                      format: int32
                                      type: integer
                                    pdName:
                                      description: Unique name of the PD resource
                                        in GCE.
                                      type: string
                                    readOnly:
                                      description: ReadOnly here will force the ReadOnly
                                        setting in VolumeMounts.
                                      type: boolean
                                  type: object
                                gitRepo:
                                  description: GitRepo represents a git repository
                                    at a particular revision.
                                  properties:
                                    directory:
                                      description: Target directory name.
                                      type: string
                                    repository:
                                      description: Repository URL.
                                      type: string
                                    revision:
                                      description: Commit hash for the specified revision.
                                      type: string
                                  type: object
                                glusterfs:
                                  description: Glusterfs represents a Glusterfs mount
                                    on the host that shares a pod's lifetime.
                                  properties:
                                    endpoints:
                                      description: EndpointsName is the endpoint name
                                        that details Glusterfs topology.
                                      type: string
                                    path:
                                      description: Path is the Glusterfs volume path.
                                      type: string
                                    readOnly:
                                      description: ReadOnly here will force the Glusterfs
                                        volume to be mounted with read-only permissions.
                                      type: boolean
                                  type: object
                                hostPath:
                                  description: |-
                                    HostPath represents a pre-existing file or directory on the host
                                    machine that is directly exposed to the container.
                                  properties:
                                    path:
                                      description: Path of the directory on the host.
                                      type: string
                                    type:
                                      description: |-
                                        Type for HostPath Volume
                                        Defaults to ""
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath.
                                      type: string
                                  type: object
                                iscsi:
                                  description: |-
                                    ISCSI represents an ISCSI Disk resource that is attached to a
                                    kubelet's host machine and then exposed to the pod.
                                  properties:
                                    chapAuthDiscovery:
                                      description: whether support iSCSI Discovery
                                        CHAP authentication.
                                      type: boolean
                                    chapAuthSession:
                                      description: whether support iSCSI Session CHAP
                                        authentication.
                                      type: boolean
                                    fsType:
                                      description: Filesystem type of the volume that
                                        you want to mount.
                                      type: string
                                    initiatorName:
                                      description: Custom iSCSI Initiator Name.
                                      type: string
                                    iqn:
                                      description: Target iSCSI Qualified Name.
                                      type: string
                                    iscsiInterface:
                                      description: iSCSI Interface Name that uses
                                        an iSCSI transport.
                                      type: string
                                    lun:
                                      description: iSCSI Target Lun number.
                                      format: int32
                                      type: integer
                                    portals:
                                      description: iSCSI Target Portal List.
                                      items:
                                        type: string
                                      type: array
                                    readOnly:
                                      description: ReadOnly here will force the ReadOnly
                                        setting in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: CHAP Secret for iSCSI target and
                                        initiator authentication.
                                      properties:
                                        name:
                                          description: Name of the referent.
                                          type: string
                                      type: object
                                    targetPortal:
                                      description: iSCSI Target Portal.
                                      type: string
                                  type: object
                                nfs:
                                  description: |-
                                    NFS represents an NFS mount on the host that shares a pod's lifetime
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs.
                                  properties:
                                    path:
                                      description: Path that is exported by the NFS
                                        server.
                                      type: string
                                    readOnly:
                                      description: |-
                                        ReadOnly here will force
                                        the NFS export to be mounted with read-only permissions.
                                      type: boolean
                                    server:
                                      description: Server is the hostname or IP address
                                        of the NFS server.
                                      type: string
                                  type: object
                                persistentVolumeClaim:
                                  description: |-
                                    PersistentVolumeClaimVolumeSource represents a reference to a
                                    PersistentVolumeClaim in the same namespace.
                                  properties:
                                    claimName:
                                      description: ClaimName is the name of a PersistentVolumeClaim
                                        in the same namespace as the pod using this
                                        volume.
                                      type: string
                                    readOnly:
                                      description: Will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                  type: object
                                photonPersistentDisk:
                                  description: PhotonPersistentDisk represents a PhotonController
                                    persistent disk attached and mounted on kubelets
                                    host machine.
                                  properties:
                                    fsType:
                                      description: Filesystem type to mount.
                                      type: string
                                    pdID:
                                      description: ID that identifies Photon Controller
                                        persistent disk.
                                      type: string
                                  type: object
                                portworxVolume:
                                  description: PortworxVolume represents a portworx
                                    volume attached and mounted on kubelets host machine.
                                  properties:
                                    fsType:
                                      description: |-
                                        FSType represents the filesystem type to mount
                                        Must be a filesystem type supported by the host operating system.
                                      type: string
                                    readOnly:
                                      description: Defaults to false (read/write).
                                      type: boolean
                                    volumeID:
                                      description: VolumeID uniquely identifies a
                                        Portworx volume.
                                      type: string
                                  type: object
                                projected:
                                  description: Items for all in one resources secrets,
                                    configmaps, and downward API.
                                  properties:
                                    defaultMode:
                                      description: Mode bits to use on created files
                                        by default.
                                      format: int32
                                      type: integer
                                    sources:
                                      description: list of volume projections.
                                      items:
                                        properties:
                                          configMap:
                                            description: information about the configMap
                                              data to project.
                                            properties:
                                              items:
                                                description: |-
                                                  If unspecified, each key-value pair in the Data field of the referenced
                                                  ConfigMap will be projected into the volume as a file whose name is the
                                                  key and content is the value.
                                                items:
                                                  properties:
                                                    key:
                                                      description: The key to project.
                                                      type: string
                                                    mode:
                                                      description: |-
                                                        Optional: mode bits to use on this file, must be a value between 0
                                                        and 0777.
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: The relative path
                                                        of the file to map the key
                                                        to.
                                                      type: string
                                                  type: object
                                                type: array
                                              localObjectReference:
                                                properties:
                                                  name:
                                                    description: Name of the referent.
                                                    type: string
                                                type: object
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its keys must be defined.
                                                type: boolean
                                            type: object
                                          downwardAPI:
                                            description: information about the downwardAPI
                                              data to project.
                                            properties:
                                              items:
                                                description: Items is a list of DownwardAPIVolume
                                                  file.
                                                items:
                                                  properties:
                                                    fieldRef:
                                                      description: 'Required: Selects
                                                        a field of the pod: only annotations,
                                                        labels, name and namespace
                                                        are supported.'
                                                      properties:
                                                        apiVersion:
                                                          description: Version of
                                                            the schema the FieldPath
                                                            is written in terms of,
                                                            defaults to "v1".
                                                          type: string
                                                        fieldPath:
                                                          description: Path of the
                                                            field to select in the
                                                            specified API version.
                                                          type: string
                                                      type: object
                                                    mode:
                                                      description: |-
                                                        Optional: mode bits to use on this file, must be a value between 0
                                                        and 0777.
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: 'Required: Path
                                                        is  the relative path name
                                                        of the file to be created.'
                                                      type: string
                                                    resourceFieldRef:
                                                      description: |-
                                                        Selects a resource of the container: only resources limits and requests
                                                        (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                      properties:
                                                        containerName:
                                                          description: 'Container
                                                            name: required for volumes,
                                                            optional for env vars.'
                                                          type: string
                                                        divisor:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Specifies the
                                                            output format of the exposed
                                                            resources, defaults to
                                                            "1".
                                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                          x-kubernetes-int-or-string: true
                                                        resource:
                                                          description: 'Required:
                                                            resource to select.'
                                                          type: string
                                                      type: object
                                                  type: object
                                                type: array
                                            type: object
                                          secret:
                                            description: information about the secret
                                              data to project.
                                            properties:
                                              items:
                                                description: |-
                                                  If unspecified, each key-value pair in the Data field of the referenced
                                                  Secret will be projected into the volume as a file whose name is the
                                                  key and content is the value.
                                                items:
                                                  properties:
                                                    key:
                                                      description: The key to project.
                                                      type: string
                                                    mode:
                                                      description: |-
                                                        Optional: mode bits to use on this file, must be a value between 0
                                                        and 0777.
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: The relative path
                                                        of the file to map the key
                                                        to.
                                                      type: string
                                                  type: object
                                                type: array
                                              localObjectReference:
                                                properties:
                                                  name:
                                                    description: Name of the referent.
                                                    type: string
                                                type: object
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined.
                                                type: boolean
                                            type: object
                                          serviceAccountToken:
                                            description: information about the serviceAccountToken
                                              data to project.
                                            properties:
                                              audience:
                                                description: Audience is the intended
                                                  audience of the token.
                                                type: string
                                              expirationSeconds:
                                                description: |-
                                                  ExpirationSeconds is the requested duration of validity of the service
                                                  account token.
                                                format: int64
                                                type: integer
                                              path:
                                                description: |-
                                                  Path is the path relative to the mount point of the file to project the
                                                  token into.
                                                type: string
                                            type: object
                                        type: object
                                      type: array
                                  type: object
                                quobyte:
                                  description: Quobyte represents a Quobyte mount
                                    on the host that shares a pod's lifetime.
                                  properties:
                                    group:
                                      description: |-
                                        Group to map volume access to
                                        Default is no group.
                                      type: string
                                    readOnly:
                                      description: ReadOnly here will force the Quobyte
                                        volume to be mounted with read-only permissions.
                                      type: boolean
                                    registry:
                                      description: |-
                                        Registry represents a single or multiple Quobyte Registry services
                                        specified as a string as host:port pair (multiple entries are separated with commas)
                                        which acts as the central registry for volumes.
                                      type: string
                                    tenant:
                                      description: |-
                                        Tenant owning the given Quobyte volume in the Backend
                                        Used with dynamically provisioned Quobyte volumes, value is set by the plugin.
                                      type: string
                                    user:
                                      description: |-
                                        User to map volume access to
                                        Defaults to serivceaccount user.
                                      type: string
                                    volume:
                                      description: Volume is a string that references
                                        an already created Quobyte volume by name.
                                      type: string
                                  type: object
                                rbd:
                                  description: RBD represents a Rados Block Device
                                    mount on the host that shares a pod's lifetime.
                                  properties:
                                    fsType:
                                      description: Filesystem type of the volume that
                                        you want to mount.
                                      type: string
                                    image:
                                      description: The rados image name.
                                      type: string
                                    keyring:
                                      description: Keyring is the path to key ring
                                        for RBDUser.
                                      type: string
                                    monitors:
                                      description: A collection of Ceph monitors.
                                      items:
                                        type: string
                                      type: array
                                    pool:
                                      description: The rados pool name.
                                      type: string
                                    readOnly:
                                      description: ReadOnly here will force the ReadOnly
                                        setting in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: SecretRef is name of the authentication
                                        secret for RBDUser.
                                      properties:
                                        name:
                                          description: Name of the referent.
                                          type: string
                                      type: object
                                    user:
                                      description: The rados user name.
                                      type: string
                                  type: object
                                scaleIO:
                                  description: ScaleIO represents a ScaleIO persistent
                                    volume attached and mounted on Kubernetes nodes.
                                  properties:
                                    fsType:
                                      description: Filesystem type to mount.
                                      type: string
                                    gateway:
                                      description: The host address of the ScaleIO
                                        API Gateway.
                                      type: string
                                    protectionDomain:
                                      description: The name of the ScaleIO Protection
                                        Domain for the configured storage.
                                      type: string
                                    readOnly:
                                      description: Defaults to false (read/write).
                                      type: boolean
                                    secretRef:
                                      description: |-
                                        SecretRef references to the secret for ScaleIO user and other
                                        sensitive information.
                                      properties:
                                        name:
                                          description: Name of the referent.
                                          type: string
                                      type: object
                                    sslEnabled:
                                      description: Flag to enable/disable SSL communication
                                        with Gateway, default false.
                                      type: boolean
                                    storageMode:
                                      description: Indicates whether the storage for
                                        a volume should be ThickProvisioned or ThinProvisioned.
                                      type: string
                                    storagePool:
                                      description: The ScaleIO Storage Pool associated
                                        with the protection domain.
                                      type: string
                                    system:
                                      description: The name of the storage system
                                        as configured in ScaleIO.
                                      type: string
                                    volumeName:
                                      description: |-
                                        The name of a volume already created in the ScaleIO system
                                        that is associated with this volume source.
                                      type: string
                                  type: object
                                secret:
                                  description: Secret represents a secret that should
                                    populate this volume.
                                  properties:
                                    defaultMode:
                                      description: 'Optional: mode bits to use on
                                        created files by default.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: |-
                                        If unspecified, each key-value pair in the Data field of the referenced
                                        Secret will be projected into the volume as a file whose name is the
                                        key and content is the value.
                                      items:
                                        properties:
                                          key:
                                            description: The key to project.
                                            type: string
                                          mode:
                                            description: |-
                                              Optional: mode bits to use on this file, must be a value between 0
                                              and 0777.
                                            format: int32
                                            type: integer
                                          path:
                                            description: The relative path of the
                                              file to map the key to.
                                            type: string
                                        type: object
                                      type: array
                                    optional:
                                      description: Specify whether the Secret or its
                                        keys must be defined.
                                      type: boolean
                                    secretName:
                                      description: Name of the secret in the pod's
                                        namespace to use.
                                      type: string
                                  type: object
                                storageos:
                                  description: StorageOS represents a StorageOS volume
                                    attached and mounted on Kubernetes nodes.
                                  properties:
                                    fsType:
                                      description: Filesystem type to mount.
                                      type: string
                                    readOnly:
                                      description: Defaults to false (read/write).
                                      type: boolean
                                    secretRef:
                                      description: |-
                                        SecretRef specifies the secret to use for obtaining the StorageOS API
                                        credentials.
                                      properties:
                                        name:
                                          description: Name of the referent.
                                          type: string
                                      type: object
                                    volumeName:
                                      description: VolumeName is the human-readable
                                        name of the StorageOS volume.
                                      type: string
                                    volumeNamespace:
                                      description: VolumeNamespace specifies the scope
                                        of the volume within StorageOS.
                                      type: string
                                  type: object
                                vsphereVolume:
                                  description: VsphereVolume represents a vSphere
                                    volume attached and mounted on kubelets host machine.
                                  properties:
                                    fsType:
                                      description: Filesystem type to mount.
                                      type: string
                                    storagePolicyID:
                                      description: Storage Policy Based Management
                                        (SPBM) profile ID associated with the StoragePolicyName.
                                      type: string
                                    storagePolicyName:
                                      description: Storage Policy Based Management
                                        (SPBM) profile name.
                                      type: string
                                    volumePath:
                                      description: Path that identifies vSphere volume
                                        vmdk.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        type: array
                    type: object
                  enableAnalysis:
                    description: If enabled, pilot will run Istio analyzers and write
                      analysis errors to the Status field of any Istio Resources.
                    nullable: true
                    type: boolean
                  enableProtocolSniffingInbound:
                    description: If enabled, protocol sniffing will be used for inbound
                      listeners whose port protocol is not specified or unsupported.
                    nullable: true
                    type: boolean
                  enableProtocolSniffingOutbound:
                    description: If enabled, protocol sniffing will be used for outbound
                      listeners whose port protocol is not specified or unsupported.
                    nullable: true
                    type: boolean
                  enableStatus:
                    description: If enabled, pilot will update the CRD Status field
                      of all Istio resources with reconciliation status.
                    nullable: true
                    type: boolean
                  externalIstiod:
                    description: Settings for local istiod to control remote clusters
                      as well.
                    properties:
                      enabled:
                        nullable: true
                        type: boolean
                    type: object
                  spiffe:
                    description: SPIFFE configuration of Pilot.
                    properties:
                      operatorEndpoints:
                        properties:
                          enabled:
                            nullable: true
                            type: boolean
                        type: object
                    type: object
                  traceSampling:
                    nullable: true
                    type: number
                type: object
              jwtPolicy:
                description: Configure the policy for validating JWT.
                enum:
                - THIRD_PARTY_JWT
                - FIRST_PARTY_JWT
                type: string
              k8sResourceOverlays:
                description: K8s resource overlay patches.
                items:
                  properties:
                    groupVersionKind:
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                        version:
                          type: string
                      type: object
                    objectKey:
                      properties:
                        name:
                          description: Name of the referenced Kubernetes resource.
                          type: string
                        namespace:
                          description: Namespace of the referenced Kubernetes resource.
                          type: string
                      type: object
                    patches:
                      items:
                        properties:
                          parseValue:
                            type: boolean
                          path:
                            type: string
                          type:
                            enum:
                            - unspecified
                            - replace
                            - remove
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              logging:
                description: Logging configurations.
                properties:
                  level:
                    pattern: ^([a-zA-Z]+:[a-zA-Z]+,?)+$
                    type: string
                type: object
              meshConfig:
                description: Defines mesh-wide settings for the Istio control plane.
                properties:
                  accessLogEncoding:
                    description: Encoding for the proxy access log (`TEXT` or `JSON`).
                    enum:
                    - TEXT
                    - JSON
                    type: string
                  accessLogFile:
                    description: File address for the proxy access log (e.g.
                    type: string
                  accessLogFormat:
                    description: |-
                      Format for the proxy access log
                      Empty value results in proxy's default access log format.
                    type: string
                  ca:
                    properties:
                      address:
                        description: REQUIRED.
                        type: string
                      istiodSide:
                        description: |-
                          Use istiod_side to specify CA Server integrate to Istiod side or Agent side
                          Default: true.
                        type: boolean
                      requestTimeout:
                        description: |-
                          timeout for forward CSR requests from Istiod to External CA
                          Default: 10s.
                        type: string
                      tlsSettings:
                        description: Use the tls_settings to specify the tls mode
                          to use.
                        properties:
                          caCertificates:
                            description: |-
                              OPTIONAL: The path to the file containing certificate authority
                              certificates to use in verifying a presented server certificate.
                            type: string
                          clientCertificate:
                            description: REQUIRED if mode is `MUTUAL`.
                            type: string
                          credentialName:
                            description: |-
                              The name of the secret that holds the TLS certs for the
                              client including the CA certificates.
                            type: string
                          mode:
                            description: |-
                              Indicates whether connections to this port should be secured
                              using TLS.
                            enum:
                            - DISABLE
                            - SIMPLE
                            - MUTUAL
                            - ISTIO_MUTUAL
                            type: string
                          privateKey:
                            description: REQUIRED if mode is `MUTUAL`.
                            type: string
                          sni:
                            description: SNI string to present to the server during
                              TLS handshake.
                            type: string
                          subjectAltNames:
                            description: |-
                              A list of alternate names to verify the subject identity in the
                              certificate.
                            items:
                              type: string
                            type: array
                        required:
                        - mode
                        type: object
                    type: object
                  caCertificates:
                    description: The extra root certificates for workload-to-workload
                      communication.
                    items:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - pem
                          - required:
                            - spiffeBundleUrl
                      - required:
                        - pem
                      - required:
                        - spiffeBundleUrl
                      properties:
                        pem:
                          description: The PEM data of the certificate.
                          type: string
                        spiffeBundleUrl:
                          description: |-
                            The SPIFFE bundle endpoint URL that complies to:
                            https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE_Trust_Domain_and_Bundle.md#the-spiffe-trust-domain-and-bundle
                            The endpoint should support authentication based on Web PKI:
                            https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE_Trust_Domain_and_Bundle.md#521-web-pki
                            The certificate is retrieved from the endpoint.
                          type: string
                      type: object
                    type: array
                  certificates:
                    description: Configure the provision of certificates.
                    items:
                      properties:
                        dnsNames:
                          description: The DNS names for the certificate.
                          items:
                            type: string
                          type: array
                        secretName:
                          description: Name of the secret the certificate and its
                            key will be stored into.
                          type: string
                      type: object
                    type: array
                  configSources:
                    description: |-
                      ConfigSource describes a source of configuration data for networking
                      rules, and other Istio configuration artifacts.
                    items:
                      properties:
                        address:
                          description: |-
                            Address of the server implementing the Istio Mesh Configuration
                            protocol (MCP).
                          type: string
                        subscribedResources:
                          description: Describes the source of configuration, if nothing
                            is specified default is MCP.
                          items:
                            enum:
                            - SERVICE_REGISTRY
                            type: string
                          type: array
                        tlsSettings:
                          description: Use the tls_settings to specify the tls mode
                            to use.
                          properties:
                            caCertificates:
                              description: |-
                                OPTIONAL: The path to the file containing certificate authority
                                certificates to use in verifying a presented server certificate.
                              type: string
                            clientCertificate:
                              description: REQUIRED if mode is `MUTUAL`.
                              type: string
                            credentialName:
                              description: |-
                                The name of the secret that holds the TLS certs for the
                                client including the CA certificates.
                              type: string
                            mode:
                              description: |-
                                Indicates whether connections to this port should be secured
                                using TLS.
                              enum:
                              - DISABLE
                              - SIMPLE
                              - MUTUAL
                              - ISTIO_MUTUAL
                              type: string
                            privateKey:
                              description: REQUIRED if mode is `MUTUAL`.
                              type: string
                            sni:
                              description: SNI string to present to the server during
                                TLS handshake.
                              type: string
                            subjectAltNames:
                              description: |-
                                A list of alternate names to verify the subject identity in the
                                certificate.
                              items:
                                type: string
                              type: array
                          required:
                          - mode
                          type: object
                      type: object
                    type: array
                  connectTimeout:
                    description: Connection timeout used by Envoy.
                    type: string
                  defaultConfig:
                    description: Default proxy config used by gateway and sidecars.
                    properties:
                      availabilityZone:
                        type: string
                      binaryPath:
                        description: Path to the proxy binary.
                        type: string
                      caCertificatesPem:
                        description: The PEM data of the extra root certificates for
                          workload-to-workload communication.
                        items:
                          type: string
                        type: array
                      concurrency:
                        description: The number of worker threads to run.
                        nullable: true
                        type: integer
                      configPath:
                        description: Path to the generated configuration file directory.
                        type: string
                      controlPlaneAuthPolicy:
                        description: AuthenticationPolicy defines how the proxy is
                          authenticated when it connects to the control plane.
                        enum:
                        - NONE
                        - MUTUAL_TLS
                        - INHERIT
                        type: string
                      customConfigFile:
                        description: |-
                          File path of custom proxy configuration, currently used by proxies
                          in front of Mixer and Pilot.
                        type: string
                      discoveryAddress:
                        description: Address of the discovery service exposing xDS
                          with mTLS connection.
                        type: string
                      discoveryRefreshDelay:
                        type: string
                      drainDuration:
                        description: |-
                          The time in seconds that Envoy will drain connections during a hot
                          restart.
                        type: string
                      envoyAccessLogService:
                        description: |-
                          Address of the service to which access logs from Envoys should be
                          sent.
                        properties:
                          address:
                            description: |-
                              Address of a remove service used for various purposes (access log
                              receiver, metrics receiver, etc.).
                            type: string
                          tcpKeepalive:
                            description: If set then set `SO_KEEPALIVE` on the socket
                              to enable TCP Keepalives.
                            properties:
                              interval:
                                description: The time duration between keep-alive
                                  probes.
                                type: string
                              probes:
                                description: |-
                                  Maximum number of keepalive probes to send without response before
                                  deciding the connection is dead.
                                type: integer
                              time:
                                description: |-
                                  The time duration a connection needs to be idle before keep-alive
                                  probes start being sent.
                                type: string
                            type: object
                          tlsSettings:
                            description: Use the `tls_settings` to specify the tls
                              mode to use.
                            properties:
                              caCertificates:
                                description: |-
                                  OPTIONAL: The path to the file containing certificate authority
                                  certificates to use in verifying a presented server certificate.
                                type: string
                              clientCertificate:
                                description: REQUIRED if mode is `MUTUAL`.
                                type: string
                              credentialName:
                                description: |-
                                  The name of the secret that holds the TLS certs for the
                                  client including the CA certificates.
                                type: string
                              mode:
                                description: |-
                                  Indicates whether connections to this port should be secured
                                  using TLS.
                                enum:
                                - DISABLE
                                - SIMPLE
                                - MUTUAL
                                - ISTIO_MUTUAL
                                type: string
                              privateKey:
                                description: REQUIRED if mode is `MUTUAL`.
                                type: string
                              sni:
                                description: SNI string to present to the server during
                                  TLS handshake.
                                type: string
                              subjectAltNames:
                                description: |-
                                  A list of alternate names to verify the subject identity in the
                                  certificate.
                                items:
                                  type: string
                                type: array
                            required:
                            - mode
                            type: object
                        type: object
                      envoyMetricsService:
                        description: Address of the Envoy Metrics Service implementation
                          (e.g.
                        properties:
                          address:
                            description: |-
                              Address of a remove service used for various purposes (access log
                              receiver, metrics receiver, etc.).
                            type: string
                          tcpKeepalive:
                            description: If set then set `SO_KEEPALIVE` on the socket
                              to enable TCP Keepalives.
                            properties:
                              interval:
                                description: The time duration between keep-alive
                                  probes.
                                type: string
                              probes:
                                description: |-
                                  Maximum number of keepalive probes to send without response before
                                  deciding the connection is dead.
                                type: integer
                              time:
                                description: |-
                                  The time duration a connection needs to be idle before keep-alive
                                  probes start being sent.
                                type: string
                            type: object
                          tlsSettings:
                            description: Use the `tls_settings` to specify the tls
                              mode to use.
                            properties:
                              caCertificates:
                                description: |-
                                  OPTIONAL: The path to the file containing certificate authority
                                  certificates to use in verifying a presented server certificate.
                                type: string
                              clientCertificate:
                                description: REQUIRED if mode is `MUTUAL`.
                                type: string
                              credentialName:
                                description: |-
                                  The name of the secret that holds the TLS certs for the
                                  client including the CA certificates.
                                type: string
                              mode:
                                description: |-
                                  Indicates whether connections to this port should be secured
                                  using TLS.
                                enum:
                                - DISABLE
                                - SIMPLE
                                - MUTUAL
                                - ISTIO_MUTUAL
                                type: string
                              privateKey:
                                description: REQUIRED if mode is `MUTUAL`.
                                type: string
                              sni:
                                description: SNI string to present to the server during
                                  TLS handshake.
                                type: string
                              subjectAltNames:
                                description: |-
                                  A list of alternate names to verify the subject identity in the
                                  certificate.
                                items:
                                  type: string
                                type: array
                            required:
                            - mode
                            type: object
                        type: object
                      envoyMetricsServiceAddress:
                        type: string
                      extraStatTags:
                        description: An additional list of tags to extract from the
                          in-proxy Istio telemetry.
                        items:
                          type: string
                        type: array
                      gatewayTopology:
                        properties:
                          forwardClientCertDetails:
                            enum:
                            - UNDEFINED
                            - SANITIZE
                            - FORWARD_ONLY
                            - APPEND_FORWARD
                            - SANITIZE_SET
                            - ALWAYS_FORWARD_ONLY
                            type: string
                          numTrustedProxies:
                            type: integer
                        type: object
                      holdApplicationUntilProxyStarts:
                        description: Boolean flag for enabling/disabling the holdApplicationUntilProxyStarts
                          behavior.
                        nullable: true
                        type: boolean
                      interceptionMode:
                        description: The mode used to redirect inbound traffic to
                          Envoy.
                        enum:
                        - REDIRECT
                        - TPROXY
                        type: string
                      meshId:
                        description: |-
                          The unique identifier for the [service mesh](https://istio.io/docs/reference/glossary/#service-mesh)
                          All control planes running in the same service mesh should specify the same mesh ID.
                        type: string
                      parentShutdownDuration:
                        description: |-
                          The time in seconds that Envoy will wait before shutting down the
                          parent process during a hot restart.
                        type: string
                      proxyAdminPort:
                        description: Port on which Envoy should listen for administrative
                          commands.
                        format: int32
                        type: integer
                      proxyBootstrapTemplatePath:
                        description: Path to the proxy bootstrap template file.
                        type: string
                      proxyMetadata:
                        additionalProperties:
                          type: string
                        description: Additional environment variables for the proxy.
                        type: object
                      proxyStatsMatcher:
                        description: Proxy stats matcher defines configuration for
                          reporting custom Envoy stats.
                        properties:
                          inclusionPrefixes:
                            description: Proxy stats name prefix matcher for inclusion.
                            items:
                              type: string
                            type: array
                          inclusionRegexps:
                            description: Proxy stats name regexps matcher for inclusion.
                            items:
                              type: string
                            type: array
                          inclusionSuffixes:
                            description: Proxy stats name suffix matcher for inclusion.
                            items:
                              type: string
                            type: array
                        type: object
                      readinessProbe:
                        description: VM Health Checking readiness probe.
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - httpGet
                            - required:
                              - tcpSocket
                            - required:
                              - exec
                        - required:
                          - httpGet
                        - required:
                          - tcpSocket
                        - required:
                          - exec
                        properties:
                          exec:
                            description: Health is determined by how the command that
                              is executed exited.
                            properties:
                              command:
                                description: Command to run.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded.
                            format: int32
                            type: integer
                          httpGet:
                            description: |-
                              `httpGet` is performed to a given endpoint
                              and the status/able to connect determines health.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP.
                                type: string
                              httpHeaders:
                                description: Headers the proxy will pass on to make
                                  the request.
                                items:
                                  properties:
                                    name:
                                      description: The header field name.
                                      type: string
                                    value:
                                      description: The header field value.
                                      type: string
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                description: Port on which the endpoint lives.
                                type: integer
                              scheme:
                                description: HTTP or HTTPS, defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: Number of seconds after the container has
                              started before readiness probes are initiated.
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: Health is determined by if the proxy is able
                              to connect.
                            properties:
                              host:
                                description: Host to connect to, defaults to localhost.
                                type: string
                              port:
                                description: Port of host.
                                type: integer
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: Number of seconds after which the probe times
                              out.
                            format: int32
                            type: integer
                        type: object
                      sds:
                        description: Secret Discovery Service(SDS) configuration to
                          be used by the proxy.
                        properties:
                          enabled:
                            description: True if SDS is enabled.
                            type: boolean
                          k8sSaJwtPath:
                            description: Path of k8s service account JWT path.
                            type: string
                        type: object
                      serviceCluster:
                        description: |-
                          Service cluster defines the name for the `service_cluster` that is
                          shared by all Envoy instances.
                        type: string
                      statNameLength:
                        description: Maximum length of name field in Envoy's metrics.
                        format: int32
                        type: integer
                      statsdUdpAddress:
                        description: IP Address and Port of a statsd UDP listener
                          (e.g.
                        type: string
                      statusPort:
                        description: Port on which the agent should listen for administrative
                          commands such as readiness probe.
                        format: int32
                        type: integer
                      terminationDrainDuration:
                        description: The amount of time allowed for connections to
                          complete on proxy shutdown.
                        type: string
                      tracing:
                        description: Tracing configuration to be used by the proxy.
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - zipkin
                            - required:
                              - lightstep
                            - required:
                              - datadog
                            - required:
                              - stackdriver
                            - required:
                              - openCensusAgent
                        - required:
                          - zipkin
                        - required:
                          - lightstep
                        - required:
                          - datadog
                        - required:
                          - stackdriver
                        - required:
                          - openCensusAgent
                        properties:
                          customTags:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - literal
                                  - required:
                                    - environment
                                  - required:
                                    - header
                              - required:
                                - literal
                              - required:
                                - environment
                              - required:
                                - header
                              properties:
                                environment:
                                  description: |-
                                    The custom tag's value should be populated from an environmental
                                    variable.
                                  properties:
                                    defaultValue:
                                      description: |-
                                        When the environment variable is not found,
                                        the tag's value will be populated with this default value if specified,
                                        otherwise the tag will not be populated.
                                      type: string
                                    name:
                                      description: Name of the environment variable
                                        used to populate the tag's value.
                                      type: string
                                  type: object
                                header:
                                  description: |-
                                    The custom tag's value is populated by an http header from
                                    an incoming request.
                                  properties:
                                    defaultValue:
                                      description: Default value to be used for the
                                        tag when the named HTTP header does not exist.
                                      type: string
                                    name:
                                      description: HTTP header name used to obtain
                                        the value from to populate the tag value.
                                      type: string
                                  type: object
                                literal:
                                  description: The custom tag's value is the specified
                                    literal.
                                  properties:
                                    value:
                                      description: Static literal value used to populate
                                        the tag value.
                                      type: string
                                  type: object
                              type: object
                            description: Configures the custom tags to be added to
                              active span by all proxies (i.e.
                            type: object
                          datadog:
                            description: Use a Datadog tracer.
                            properties:
                              address:
                                description: Address of the Datadog Agent.
                                type: string
                            type: object
                          lightstep:
                            description: Use a Lightstep tracer.
                            properties:
                              accessToken:
                                description: The Lightstep access token.
                                type: string
                              address:
                                description: Address of the Lightstep Satellite pool.
                                type: string
                            type: object
                          maxPathTagLength:
                            description: |-
                              Configures the maximum length of the request path to extract and include in the
                              HttpUrl tag.
                            type: integer
                          openCensusAgent:
                            description: Use an OpenCensus tracer exporting to an
                              OpenCensus agent.
                            properties:
                              address:
                                description: gRPC address for the OpenCensus agent
                                  (e.g.
                                type: string
                              context:
                                description: |-
                                  Specifies the set of context propagation headers used for distributed
                                  tracing.
                                items:
                                  enum:
                                  - UNSPECIFIED
                                  - W3C_TRACE_CONTEXT
                                  - GRPC_BIN
                                  - CLOUD_TRACE_CONTEXT
                                  - B3
                                  type: string
                                type: array
                            type: object
                          sampling:
                            description: |-
                              The percentage of requests (0.0 - 100.0) that will be randomly selected for trace generation,
                              if not requested by the client or not forced.
                            format: double
                            type: number
                          stackdriver:
                            description: Use a Stackdriver tracer.
                            properties:
                              debug:
                                description: debug enables trace output to stdout.
                                type: boolean
                              maxNumberOfAnnotations:
                                description: The global default max number of annotation
                                  events per span.
                                nullable: true
                                type: integer
                              maxNumberOfAttributes:
                                description: The global default max number of attributes
                                  per span.
                                nullable: true
                                type: integer
                              maxNumberOfMessageEvents:
                                description: The global default max number of message
                                  events per span.
                                nullable: true
                                type: integer
                            type: object
                          tlsSettings:
                            description: Use the tls_settings to specify the tls mode
                              to use.
                            properties:
                              caCertificates:
                                description: |-
                                  OPTIONAL: The path to the file containing certificate authority
                                  certificates to use in verifying a presented server certificate.
                                type: string
                              clientCertificate:
                                description: REQUIRED if mode is `MUTUAL`.
                                type: string
                              credentialName:
                                description: |-
                                  The name of the secret that holds the TLS certs for the
                                  client including the CA certificates.
                                type: string
                              mode:
                                description: |-
                                  Indicates whether connections to this port should be secured
                                  using TLS.
                                enum:
                                - DISABLE
                                - SIMPLE
                                - MUTUAL
                                - ISTIO_MUTUAL
                                type: string
                              privateKey:
                                description: REQUIRED if mode is `MUTUAL`.
                                type: string
                              sni:
                                description: SNI string to present to the server during
                                  TLS handshake.
                                type: string
                              subjectAltNames:
                                description: |-
                                  A list of alternate names to verify the subject identity in the
                                  certificate.
                                items:
                                  type: string
                                type: array
                            required:
                            - mode
                            type: object
                          zipkin:
                            description: Use a Zipkin tracer.
                            properties:
                              address:
                                description: Address of the Zipkin service (e.g.
                                type: string
                            type: object
                        type: object
                      zipkinAddress:
                        description: Address of the Zipkin service (e.g.
                        type: string
                    type: object
                  defaultDestinationRuleExportTo:
                    description: The default value for the `DestinationRule.export_to`
                      field.
                    items:
                      type: string
                    type: array
                  defaultProviders:
                    description: Specifies extension providers to use by default in
                      Istio configuration resources.
                    properties:
                      tracing:
                        description: Name of the default provider for tracing.
                        type: string
                    type: object
                  defaultServiceExportTo:
                    description: |-
                      The default value for the ServiceEntry.export_to field and services
                      imported through container registry integrations, e.g.
                    items:
                      type: string
                    type: array
                  defaultVirtualServiceExportTo:
                    description: The default value for the VirtualService.export_to
                      field.
                    items:
                      type: string
                    type: array
                  disableEnvoyListenerLog:
                    description: This flag disables Envoy Listener logs.
                    type: boolean
                  discoverySelectors:
                    description: |-
                      A list of Kubernetes selectors that specify the set of namespaces that Istio considers when
                      computing configuration updates for sidecars.
                    items:
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements.
                          items:
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values.
                                type: string
                              values:
                                description: values is an array of string values.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                          type: object
                      type: object
                    type: array
                  dnsRefreshRate:
                    description: |-
                      Configures DNS refresh rate for Envoy clusters of type `STRICT_DNS`
                      Default refresh rate is `5s`.
                    type: string
                  enableAutoMtls:
                    description: |-
                      This flag is used to enable mutual `TLS` automatically for service to service communication
                      within the mesh, default true.
                    nullable: true
                    type: boolean
                  enableEnvoyAccessLogService:
                    description: This flag enables Envoy's gRPC Access Log Service.
                    type: boolean
                  enablePrometheusMerge:
                    description: |-
                      If enabled, Istio agent will merge metrics exposed by the application with metrics from Envoy
                      and Istio agent.
                    nullable: true
                    type: boolean
                  enableTracing:
                    description: Flag to control generation of trace spans and request
                      IDs.
                    type: boolean
                  extensionProviders:
                    description: Defines a list of extension providers that extend
                      Istio's functionality.
                    items:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - envoyExtAuthzHttp
                          - required:
                            - envoyExtAuthzGrpc
                          - required:
                            - zipkin
                          - required:
                            - lightstep
                          - required:
                            - datadog
                          - required:
                            - stackdriver
                          - required:
                            - opencensus
                      - required:
                        - envoyExtAuthzHttp
                      - required:
                        - envoyExtAuthzGrpc
                      - required:
                        - zipkin
                      - required:
                        - lightstep
                      - required:
                        - datadog
                      - required:
                        - stackdriver
                      - required:
                        - opencensus
                      properties:
                        datadog:
                          description: Configures a Datadog tracing provider.
                          properties:
                            maxTagLength:
                              description: Optional.
                              type: integer
                            port:
                              description: REQUIRED.
                              type: integer
                            service:
                              description: REQUIRED.
                              type: string
                          type: object
                        envoyExtAuthzGrpc:
                          description: Configures an external authorizer that implements
                            the Envoy ext_authz filter authorization check service
                            using the gRPC API.
                          properties:
                            failOpen:
                              description: |-
                                If true, the HTTP request or TCP connection will be allowed even if the communication with the authorization service has failed,
                                or if the authorization service has returned a HTTP 5xx error.
                              type: boolean
                            includeRequestBodyInCheck:
                              description: If set, the client request body will be
                                included in the authorization request sent to the
                                authorization service.
                              properties:
                                allowPartialMessage:
                                  description: When this field is true, ext-authz
                                    filter will buffer the message until max_request_bytes
                                    is reached.
                                  type: boolean
                                maxRequestBytes:
                                  description: Sets the maximum size of a message
                                    body that the ext-authz filter will hold in memory.
                                  type: integer
                                packAsBytes:
                                  description: |-
                                    If true, the body sent to the external authorization service in the gRPC authorization request is set with raw bytes
                                    in the raw_body field (https://github.com/envoyproxy/envoy/blame/cffb095d59d7935abda12b9509bcd136808367bb/api/envoy/service/auth/v3/attribute_context.proto#L153).
                                  type: boolean
                              type: object
                            port:
                              description: REQUIRED.
                              type: integer
                            service:
                              description: REQUIRED.
                              type: string
                            statusOnError:
                              description: Sets the HTTP status that is returned to
                                the client when there is a network error to the authorization
                                service.
                              type: string
                            timeout:
                              description: 'The maximum duration that the proxy will
                                wait for a response from the provider, this is the
                                timeout for a specific request (default timeout: 600s).'
                              type: string
                          type: object
                        envoyExtAuthzHttp:
                          description: Configures an external authorizer that implements
                            the Envoy ext_authz filter authorization check service
                            using the HTTP API.
                          properties:
                            failOpen:
                              description: |-
                                If true, the user request will be allowed even if the communication with the authorization service has failed,
                                or if the authorization service has returned a HTTP 5xx error.
                              type: boolean
                            headersToDownstreamOnDeny:
                              description: |-
                                List of headers from the authorization service that should be forwarded to downstream when the authorization
                                check result is not allowed (HTTP code other than 200).
                              items:
                                type: string
                              type: array
                            headersToUpstreamOnAllow:
                              description: |-
                                List of headers from the authorization service that should be added or overridden in the original request and
                                forwarded to the upstream when the authorization check result is allowed (HTTP code 200).
                              items:
                                type: string
                              type: array
                            includeAdditionalHeadersInCheck:
                              additionalProperties:
                                type: string
                              description: Set of additional fixed headers that should
                                be included in the authorization request sent to the
                                authorization service.
                              type: object
                            includeHeadersInCheck:
                              description: DEPRECATED.
                              items:
                                type: string
                              type: array
                            includeRequestBodyInCheck:
                              description: If set, the client request body will be
                                included in the authorization request sent to the
                                authorization service.
                              properties:
                                allowPartialMessage:
                                  description: When this field is true, ext-authz
                                    filter will buffer the message until max_request_bytes
                                    is reached.
                                  type: boolean
                                maxRequestBytes:
                                  description: Sets the maximum size of a message
                                    body that the ext-authz filter will hold in memory.
                                  type: integer
                                packAsBytes:
                                  description: |-
                                    If true, the body sent to the external authorization service in the gRPC authorization request is set with raw bytes
                                    in the raw_body field (https://github.com/envoyproxy/envoy/blame/cffb095d59d7935abda12b9509bcd136808367bb/api/envoy/service/auth/v3/attribute_context.proto#L153).
                                  type: boolean
                              type: object
                            includeRequestHeadersInCheck:
                              description: List of client request headers that should
                                be included in the authorization request sent to the
                                authorization service.
                              items:
                                type: string
                              type: array
                            pathPrefix:
                              description: Sets a prefix to the value of authorization
                                request header *Path*.
                              type: string
                            port:
                              description: REQUIRED.
                              type: integer
                            service:
                              description: REQUIRED.
                              type: string
                            statusOnError:
                              description: Sets the HTTP status that is returned to
                                the client when there is a network error to the authorization
                                service.
                              type: string
                            timeout:
                              description: 'The maximum duration that the proxy will
                                wait for a response from the provider (default timeout:
                                600s).'
                              type: string
                          type: object
                        lightstep:
                          description: Configures a Lightstep tracing provider.
                          properties:
                            accessToken:
                              description: The Lightstep access token.
                              type: string
                            maxTagLength:
                              description: Optional.
                              type: integer
                            port:
                              description: REQUIRED.
                              type: integer
                            service:
                              description: REQUIRED.
                              type: string
                          type: object
                        name:
                          description: REQUIRED.
                          type: string
                        opencensus:
                          description: Configures an OpenCensusAgent tracing provider.
                          properties:
                            context:
                              description: |-
                                Specifies the set of context propagation headers used for distributed
                                tracing.
                              items:
                                enum:
                                - UNSPECIFIED
                                - W3C_TRACE_CONTEXT
                                - GRPC_BIN
                                - CLOUD_TRACE_CONTEXT
                                - B3
                                type: string
                              type: array
                            maxTagLength:
                              description: Optional.
                              type: integer
                            port:
                              description: REQUIRED.
                              type: integer
                            service:
                              description: REQUIRED.
                              type: string
                          type: object
                        stackdriver:
                          description: Configures a Stackdriver provider.
                          properties:
                            debug:
                              description: debug enables trace output to stdout.
                              type: boolean
                            maxNumberOfAnnotations:
                              description: The global default max number of annotation
                                events per span.
                              nullable: true
                              type: integer
                            maxNumberOfAttributes:
                              description: The global default max number of attributes
                                per span.
                              nullable: true
                              type: integer
                            maxNumberOfMessageEvents:
                              description: The global default max number of message
                                events per span.
                              nullable: true
                              type: integer
                            maxTagLength:
                              description: Optional.
                              type: integer
                          type: object
                        zipkin:
                          description: Configures a tracing provider that uses the
                            Zipkin API.
                          properties:
                            maxTagLength:
                              description: Optional.
                              type: integer
                            port:
                              description: REQUIRED.
                              type: integer
                            service:
                              description: REQUIRED.
                              type: string
                          type: object
                      type: object
                    type: array
                  h2UpgradePolicy:
                    description: Specify if http1.1 connections should be upgraded
                      to http2 by default.
                    enum:
                    - DO_NOT_UPGRADE
                    - UPGRADE
                    type: string
                  inboundClusterStatName:
                    description: Name to be used while emitting statistics for inbound
                      clusters.
                    type: string
                  ingressClass:
                    description: |-
                      Class of ingress resources to be processed by Istio ingress
                      controller.
                    type: string
                  ingressControllerMode:
                    description: Defines whether to use Istio ingress controller for
                      annotated or all ingress resources.
                    enum:
                    - UNSPECIFIED
                    - "OFF"
                    - DEFAULT
                    - STRICT
                    type: string
                  ingressSelector:
                    description: Defines which gateway deployment to use as the Ingress
                      controller.
                    type: string
                  ingressService:
                    description: Name of the Kubernetes service used for the istio
                      ingress controller.
                    type: string
                  localityLbSetting:
                    description: Locality based load balancing distribution or failover
                      settings.
                    properties:
                      distribute:
                        description: 'Optional: only one of distribute or failover
                          can be set.'
                        items:
                          properties:
                            from:
                              description: Originating locality, '/' separated, e.g.
                              type: string
                            to:
                              additionalProperties:
                                type: integer
                              description: Map of upstream localities to traffic distribution
                                weights.
                              type: object
                          type: object
                        type: array
                      enabled:
                        description: enable locality load balancing, this is DestinationRule-level
                          and will override mesh wide settings in entirety.
                        nullable: true
                        type: boolean
                      failover:
                        description: 'Optional: only failover or distribute can be
                          set.'
                        items:
                          properties:
                            from:
                              description: Originating region.
                              type: string
                            to:
                              description: |-
                                Destination region the traffic will fail over to when endpoints in
                                the 'from' region becomes unhealthy.
                              type: string
                          type: object
                        type: array
                    type: object
                  outboundClusterStatName:
                    description: Name to be used while emitting statistics for outbound
                      clusters.
                    type: string
                  outboundTrafficPolicy:
                    description: |-
                      Set the default behavior of the sidecar for handling outbound
                      traffic from the application.
                    properties:
                      mode:
                        enum:
                        - REGISTRY_ONLY
                        - ALLOW_ANY
                        type: string
                    type: object
                  pathNormalization:
                    description: |-
                      ProxyPathNormalization configures how URL paths in incoming and outgoing HTTP requests are
                      normalized by the sidecars and gateways.
                    properties:
                      normalization:
                        enum:
                        - DEFAULT
                        - NONE
                        - BASE
                        - MERGE_SLASHES
                        - DECODE_AND_MERGE_SLASHES
                        type: string
                    type: object
                  protocolDetectionTimeout:
                    description: |-
                      Automatic protocol detection uses a set of heuristics to
                      determine whether the connection is using TLS or not (on the
                      server side), as well as the application protocol being used
                      (e.g., http vs tcp).
                    type: string
                  proxyHttpPort:
                    description: Port on which Envoy should listen for HTTP PROXY
                      requests if set.
                    format: int32
                    type: integer
                  proxyListenPort:
                    description: |-
                      Port on which Envoy should listen for incoming connections from
                      other services.
                    format: int32
                    type: integer
                  rootNamespace:
                    description: |-
                      The namespace to treat as the administrative root namespace for
                      Istio configuration.
                    type: string
                  serviceSettings:
                    items:
                      properties:
                        hosts:
                          description: The services to which the Settings should be
                            applied.
                          items:
                            type: string
                          type: array
                        settings:
                          description: The settings to apply to the selected services.
                          properties:
                            clusterLocal:
                              description: If true, specifies that the client and
                                service endpoints must reside in the same cluster.
                              type: boolean
                          type: object
                      type: object
                    type: array
                  tcpKeepalive:
                    description: If set then set `SO_KEEPALIVE` on the socket to enable
                      TCP Keepalives.
                    properties:
                      interval:
                        description: The time duration between keep-alive probes.
                        type: string
                      probes:
                        description: |-
                          Maximum number of keepalive probes to send without response before
                          deciding the connection is dead.
                        type: integer
                      time:
                        description: |-
                          The time duration a connection needs to be idle before keep-alive
                          probes start being sent.
                        type: string
                    type: object
                  thriftConfig:
                    description: Set configuration for Thrift protocol.
                    properties:
                      rateLimitTimeout:
                        description: Specify thrift rate limit service timeout, in
                          milliseconds.
                        type: string
                      rateLimitUrl:
                        description: Specify thrift rate limit service URL.
                        type: string
                    type: object
                  trustDomain:
                    description: The trust domain corresponds to the trust root of
                      a system.
                    type: string
                  trustDomainAliases:
                    description: The trust domain aliases represent the aliases of
                      `trust_domain`.
                    items:
                      type: string
                    type: array
                  verifyCertificateAtClient:
                    description: |-
                      `VerifyCertificateAtClient` sets the mesh global default for peer certificate validation
                      at the client-side proxy when `SIMPLE` TLS or `MUTUAL` TLS (non `ISTIO_MUTUAL`) origination
                      modes are used.
                    nullable: true
                    type: boolean
                type: object
              mountMtlsCerts:
                description: Use the user-specified, secret volume mounted key and
                  certs for Pilot and workloads.
                nullable: true
                type: boolean
              proxy:
                description: Proxy configuration options.
                properties:
                  clusterDomain:
                    description: cluster domain.
                    type: string
                  componentLogLevel:
                    description: Per Component log level for proxy, applies to gateways
                      and sidecars.
                    type: string
                  enableCoreDump:
                    description: If set, newly injected sidecars will have core dumps
                      enabled.
                    nullable: true
                    type: boolean
                  excludeIPRanges:
                    description: ExcludeIPRanges the range where not to capture egress
                      traffic.
                    type: string
                  excludeInboundPorts:
                    description: ExcludeInboundPorts the comma separated list of inbound
                      ports to be excluded from redirection to Envoy.
                    type: string
                  excludeOutboundPorts:
                    description: ExcludeOutboundPorts the comma separated list of
                      outbound ports to be excluded from redirection to Envoy.
                    type: string
                  holdApplicationUntilProxyStarts:
                    description: |-
                      Controls if sidecar is injected at the front of the container list and blocks
                      the start of the other containers until the proxy is ready
                      Default value is 'false'.
                    nullable: true
                    type: boolean
                  image:
                    type: string
                  includeIPRanges:
                    description: IncludeIPRanges the range where to capture egress
                      traffic.
                    type: string
                  lifecycle:
                    properties:
                      postStart:
                        description: PostStart is called immediately after a container
                          is created.
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified.
                            properties:
                              command:
                                description: |-
                                  Command is the command line to execute inside the container, the working directory for the
                                  command  is root ('/') in the container's filesystem.
                                items:
                                  type: string
                                type: array
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                items:
                                  properties:
                                    name:
                                      description: The header field name.
                                      type: string
                                    value:
                                      description: The header field value.
                                      type: string
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                type: string
                            type: object
                          tcpSocket:
                            description: TCPSocket specifies an action involving a
                              TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container.
                                x-kubernetes-int-or-string: true
                            type: object
                        type: object
                      preStop:
                        description: |-
                          PreStop is called immediately before a container is terminated due to an
                          API request or management event such as liveness probe failure,
                          preemption, resource contention, etc.
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified.
                            properties:
                              command:
                                description: |-
                                  Command is the command line to execute inside the container, the working directory for the
                                  command  is root ('/') in the container's filesystem.
                                items:
                                  type: string
                                type: array
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                items:
                                  properties:
                                    name:
                                      description: The header field name.
                                      type: string
                                    value:
                                      description: The header field value.
                                      type: string
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                type: string
                            type: object
                          tcpSocket:
                            description: TCPSocket specifies an action involving a
                              TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container.
                                x-kubernetes-int-or-string: true
                            type: object
                        type: object
                    type: object
                  logLevel:
                    description: Log level for proxy, applies to gateways and sidecars.
                    enum:
                    - TRACE
                    - DEBUG
                    - INFO
                    - WARNING
                    - ERROR
                    - CRITICAL
                    - "OFF"
                    type: string
                  privileged:
                    description: If set to true, istio-proxy container will have privileged
                      securityContext.
                    nullable: true
                    type: boolean
                  resources:
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        description: Limits describes the maximum amount of compute
                          resources allowed.
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        description: Requests describes the minimum amount of compute
                          resources required.
                        type: object
                    type: object
                type: object
              proxyInit:
                description: Proxy Init configuration options.
                properties:
                  image:
                    type: string
                  resources:
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        description: Limits describes the maximum amount of compute
                          resources allowed.
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        description: Requests describes the minimum amount of compute
                          resources required.
                        type: object
                    type: object
                type: object
              proxyWasm:
                description: ProxyWasm configuration options.
                properties:
                  enabled:
                    nullable: true
                    type: boolean
                type: object
              sds:
                description: |-
                  If SDS is configured, mTLS certificates for the sidecars will be distributed through the
                  SecretDiscoveryService instead of using K8S secrets to mount the certificates.
                properties:
                  tokenAudience:
                    description: The JWT token for SDS and the aud field of such JWT.
                    type: string
                type: object
              telemetryV2:
                description: Telemetry V2 configuration.
                properties:
                  enabled:
                    nullable: true
                    type: boolean
                type: object
              version:
                description: Contains the intended version for the Istio control plane.
                pattern: ^1.
                type: string
              watchOneNamespace:
                description: Whether to restrict the applications namespace the controller
                  manages.
                nullable: true
                type: boolean
            required:
            - version
            type: object
          status:
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  name: meshgateways.servicemesh.cisco.com
spec:
  group: servicemesh.cisco.com
  names:
    kind: MeshGateway
    listKind: MeshGatewayList
    plural: meshgateways
    shortNames:
    - mgw
    - meshgw
    singular: meshgateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Type of the gateway
      jsonPath: .spec.type
      name: Type
      type: string
    - description: Type of the service
      jsonPath: .spec.service.type
      name: Service Type
      type: string
    - description: Status of the resource
      jsonPath: .status.Status
      name: Status
      type: string
    - description: Ingress gateway addresses of the resource
      jsonPath: .status.GatewayAddress
      name: Ingress IPs
      type: string
    - description: Error message
      jsonPath: .status.ErrorMessage
      name: Error
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.istioControlPlane
      name: Control Plane
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: MeshGateway defines an Istio ingress or egress gateway.
            properties:
              deployment:
                description: Deployment spec.
                properties:
                  affinity:
                    description: Standard Kubernetes affinity configuration.
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              The scheduler will prefer to schedule pods to nodes that satisfy
                              the affinity expressions specified by this field, but it may choose
                              a node that violates one or more of the expressions.
                            items:
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values.
                                            type: string
                                          values:
                                            description: An array of string values.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values.
                                            type: string
                                          values:
                                            description: An array of string values.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              If the affinity requirements specified by this field are not met at
                              scheduling time, the pod will not be scheduled onto the node.
                            properties:
                              nodeSelectorTerms:
                                description: Required.
                                items:
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values.
                                            type: string
                                          values:
                                            description: An array of string values.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values.
                                            type: string
                                          values:
                                            description: An array of string values.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              The scheduler will prefer to schedule pods to nodes that satisfy
                              the affinity expressions specified by this field, but it may choose
                              a node that violates one or more of the expressions.
                            items:
                              properties:
                                podAffinityTerm:
                                  description: Required.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements.
                                          items:
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: |-
                                        namespaces specifies which namespaces the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: |-
                                        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                        the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches that of any node on which any of the
                                        selected pods is running.
                                      type: string
                                  type: object
                                weight:
                                  description: |-
                                    weight associated with matching the corresponding podAffinityTerm,
                                    in the range 1-100.
                                  format: int32
                                  type: integer
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              If the affinity requirements specified by this field are not met at
                              scheduling time, the pod will not be scheduled onto the node.
                            items:
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements.
                                      items:
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs.
                                      type: object
                                  type: object
                                namespaces:
                                  description: |-
                                    namespaces specifies which namespaces the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                  type: string
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              The scheduler will prefer to schedule pods to nodes that satisfy
                              the anti-affinity expressions specified by this field, but it may choose
                              a node that violates one or more of the expressions.
                            items:
                              properties:
                                podAffinityTerm:
                                  description: Required.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements.
                                          items:
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: |-
                                        namespaces specifies which namespaces the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: |-
                                        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                        the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches that of any node on which any of the
                                        selected pods is running.
                                      type: string
                                  type: object
                                weight:
                                  description: |-
                                    weight associated with matching the corresponding podAffinityTerm,
                                    in the range 1-100.
                                  format: int32
                                  type: integer
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              If the anti-affinity requirements specified by this field are not met at
                              scheduling time, the pod will not be scheduled onto the node.
                            items:
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements.
                                      items:
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs.
                                      type: object
                                  type: object
                                namespaces:
                                  description: |-
                                    namespaces specifies which namespaces the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                  deploymentStrategy:
                    properties:
                      rollingUpdate:
                        description: Rolling update config params.
                        properties:
                          maxSurge:
                            anyOf:
                            - type: integer
                            - type: string
                            x-kubernetes-int-or-string: true
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            x-kubernetes-int-or-string: true
                        type: object
                      type:
                        description: Type of deployment.
                        type: string
                    type: object
                  env:
                    description: If present will be appended to the environment variables
                      of the container.
                    items:
                      properties:
                        name:
                          description: Name of the environment variable.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previous defined environment variables in the container and
                            any service environment variables.
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                localObjectReference:
                                  description: The ConfigMap to select from.
                                  properties:
                                    name:
                                      description: Name of the referent.
                                      type: string
                                  type: object
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined.
                                  type: boolean
                              type: object
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              type: object
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars.'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1".
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select.'
                                  type: string
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace.
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                  type: string
                                localObjectReference:
                                  description: The name of the secret in the pod's
                                    namespace to select from.
                                  properties:
                                    name:
                                      description: Name of the referent.
                                      type: string
                                  type: object
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined.
                                  type: boolean
                              type: object
                          type: object
                      type: object
                    type: array
                  image:
                    description: Standard Kubernetes container image configuration.
                    type: string
                  imagePullPolicy:
                    description: Image pull policy.
                    type: string
                  imagePullSecrets:
                    description: ImagePullSecrets is an optional list of references
                      to secrets to use for pulling any of the images.
                    items:
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      type: object
                    type: array
                  metadata:
                    description: Generic k8s resource metadata.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects.
                        type: object
                    type: object
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: Standard Kubernetes node selector configuration.
                    type: object
                  podDisruptionBudget:
                    description: PodDisruptionBudget configuration.
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          An eviction is allowed if at most "maxUnavailable" pods selected by
                          "selector" are unavailable after the eviction, i.e.
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          An eviction is allowed if at least "minAvailable" pods selected by
                          "selector" will still be available after the eviction, i.e.
                        x-kubernetes-int-or-string: true
                    type: object
                  podMetadata:
                    description: Standard Kubernetes pod annotation and label configuration.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects.
                        type: object
                    type: object
                  priorityClassName:
                    description: If specified, indicates the pod's priority.
                    type: string
                  replicas:
                    description: Replica configuration.
                    properties:
                      count:
                        description: Standard Kubernetes replica count configuration.
                        minimum: 0
                        nullable: true
                        type: integer
                      max:
                        description: Standard Kubernetes maximum replicas configuration.
                        minimum: 0
                        nullable: true
                        type: integer
                      min:
                        description: Standard Kubernetes minimum replicas configuration.
                        minimum: 0
                        nullable: true
                        type: integer
                      targetCPUUtilizationPercentage:
                        description: |-
                          target average CPU utilization (represented as a percentage of requested CPU) over all the pods;
                          if not specified the default autoscaling policy will be used.
                        minimum: 0
                        nullable: true
                        type: integer
                    type: object
                  resources:
                    description: Standard Kubernetes resource configuration, memory
                      and CPU resource requirements.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        description: Limits describes the maximum amount of compute
                          resources allowed.
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        description: Requests describes the minimum amount of compute
                          resources required.
                        type: object
                    type: object
                  securityContext:
                    description: Standard Kubernetes security context configuration.
                    properties:
                      allowPrivilegeEscalation:
                        description: |-
                          AllowPrivilegeEscalation controls whether a process can gain more
                          privileges than its parent process.
                        type: boolean
                      capabilities:
                        description: The capabilities to add/drop when running containers.
                        properties:
                          add:
                            description: Added capabilities.
                            items:
                              type: string
                            type: array
                          drop:
                            description: Removed capabilities.
                            items:
                              type: string
                            type: array
                        type: object
                      privileged:
                        description: Run container in privileged mode.
                        type: boolean
                      procMount:
                        description: procMount denotes the type of proc mount to use
                          for the containers.
                        type: string
                      readOnlyRootFilesystem:
                        description: Whether this container has a read-only root filesystem.
                        type: boolean
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to the container.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers.
                        properties:
                          gmsaCredentialSpec:
                            description: |-
                              GMSACredentialSpec is where the GMSA admission webhook
                              (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                              GMSA credential spec named by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process.
                            type: string
                        type: object
                    type: object
                  tolerations:
                    description: |-
                      google.protobuf.Int32Value replicaCount = 1 [(gogoproto.wktpointer) = true];
                      If specified, the pod's tolerations.
                    items:
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value.
                          type: string
                        tolerationSeconds:
                          description: |-
                            TolerationSeconds represents the period of time the toleration (which must be
                            of effect NoExecute, otherwise this field is ignored) tolerates the taint.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to.
                          type: string
                      type: object
                    type: array
                  volumeMounts:
                    description: Pod volumes to mount into the container's filesystem.
                    items:
                      properties:
                        mountPath:
                          description: Path within the container at which the volume
                            should be mounted.
                          type: string
                        mountPropagation:
                          description: |-
                            mountPropagation determines how mounts are propagated from the host
                            to container and the other way around.
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: Mounted read-only if true, read-write otherwise
                            (false or unspecified).
                          type: boolean
                        subPath:
                          description: Path within the volume from which the container's
                            volume should be mounted.
                          type: string
                        subPathExpr:
                          description: Expanded path within the volume from which
                            the container's volume should be mounted.
                          type: string
                      type: object
                    type: array
                  volumes:
                    description: List of volumes that can be mounted by containers
                      belonging to the pod.
                    items:
                      properties:
                        name:
                          description: Volume's name.
                          type: string
                        volumeSource:
                          description: VolumeSource represents the location and type
                            of the mounted volume.
                          properties:
                            awsElasticBlockStore:
                              description: |-
                                AWSElasticBlockStore represents an AWS Disk resource that is attached to a
                                kubelet's host machine and then exposed to the pod.
                              properties:
                                fsType:
                                  description: Filesystem type of the volume that
                                    you want to mount.
                                  type: string
                                partition:
                                  description: The partition in the volume that you
                                    want to mount.
                                  format: int32
                                  type: integer
                                readOnly:
                                  description: Specify "true" to force and set the
                                    ReadOnly property in VolumeMounts to "true".
                                  type: boolean
                                volumeID:
                                  description: Unique ID of the persistent disk resource
                                    in AWS (Amazon EBS volume).
                                  type: string
                              type: object
                            azureDisk:
                              description: AzureDisk represents an Azure Data Disk
                                mount on the host and bind mount to the pod.
                              properties:
                                cachingMode:
                                  description: 'Host Caching mode: None, Read Only,
                                    Read Write.'
                                  type: string
                                diskName:
                                  description: The Name of the data disk in the blob
                                    storage.
                                  type: string
                                diskURI:
                                  description: The URI the data disk in the blob storage.
                                  type: string
                                fsType:
                                  description: Filesystem type to mount.
                                  type: string
                                kind:
                                  description: 'Expected values Shared: multiple blob
                                    disks per storage account  Dedicated: single blob
                                    disk per storage account  Managed: azure managed
                                    data disk (only in managed availability set).'
                                  type: string
                                readOnly:
                                  description: Defaults to false (read/write).
                                  type: boolean
                              type: object
                            azureFile:
                              description: AzureFile represents an Azure File Service
                                mount on the host and bind mount to the pod.
                              properties:
                                readOnly:
                                  description: Defaults to false (read/write).
                                  type: boolean
                                secretName:
                                  description: the name of secret that contains Azure
                                    Storage Account Name and Key.
                                  type: string
                                shareName:
                                  description: Share Name.
                                  type: string
                              type: object
                            cephfs:
                              description: CephFS represents a Ceph FS mount on the
                                host that shares a pod's lifetime.
                              properties:
                                monitors:
                                  description: |-
                                    Required: Monitors is a collection of Ceph monitors
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.
                                  items:
                                    type: string
                                  type: array
                                path:
                                  description: 'Optional: Used as the mounted root,
                                    rather than the full Ceph tree, default is /.'
                                  type: string
                                readOnly:
                                  description: 'Optional: Defaults to false (read/write).'
                                  type: boolean
                                secretFile:
                                  description: |-
                                    Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.
                                  type: string
                                secretRef:
                                  description: 'Optional: SecretRef is reference to
                                    the authentication secret for User, default is
                                    empty.'
                                  properties:
                                    name:
                                      description: Name of the referent.
                                      type: string
                                  type: object
                                user:
                                  description: |-
                                    Optional: User is the rados user name, default is admin
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.
                                  type: string
                              type: object
                            cinder:
                              description: Cinder represents a cinder volume attached
                                and mounted on kubelets host machine.
                              properties:
                                fsType:
                                  description: Filesystem type to mount.
                                  type: string
                                readOnly:
                                  description: 'Optional: Defaults to false (read/write).'
                                  type: boolean
                                secretRef:
                                  description: |-
                                    Optional: points to a secret object containing parameters used to connect
                                    to OpenStack.
                                  properties:
                                    name:
                                      description: Name of the referent.
                                      type: string
                                  type: object
                                volumeID:
                                  description: volume id used to identify the volume
                                    in cinder.
                                  type: string
                              type: object
                            configMap:
                              description: ConfigMap represents a configMap that should
                                populate this volume.
                              properties:
                                defaultMode:
                                  description: 'Optional: mode bits to use on created
                                    files by default.'
                                  format: int32
                                  type: integer
                                items:
                                  description: |-
                                    If unspecified, each key-value pair in the Data field of the referenced
                                    ConfigMap will be projected into the volume as a file whose name is the
                                    key and content is the value.
                                  items:
                                    properties:
                                      key:
                                        description: The key to project.
                                        type: string
                                      mode:
                                        description: |-
                                          Optional: mode bits to use on this file, must be a value between 0
                                          and 0777.
                                        format: int32
                                        type: integer
                                      path:
                                        description: The relative path of the file
                                          to map the key to.
                                        type: string
                                    type: object
                                  type: array
                                localObjectReference:
                                  properties:
                                    name:
                                      description: Name of the referent.
                                      type: string
                                  type: object
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    keys must be defined.
                                  type: boolean
                              type: object
                            csi:
                              description: CSI (Container Storage Interface) represents
                                storage that is handled by an external CSI driver
                                (Alpha feature).
                              properties:
                                driver:
                                  description: Driver is the name of the CSI driver
                                    that handles this volume.
                                  type: string
                                fsType:
                                  description: Filesystem type to mount.
                                  type: string
                                nodePublishSecretRef:
                                  description: |-
                                    NodePublishSecretRef is a reference to the secret object containing
                                    sensitive information to pass to the CSI driver to complete the CSI
                                    NodePublishVolume and NodeUnpublishVolume calls.
                                  properties:
                                    name:
                                      description: Name of the referent.
                                      type: string
                                  type: object
                                readOnly:
                                  description: Specifies a read-only configuration
                                    for the volume.
                                  type: boolean
                                volumeAttributes:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    VolumeAttributes stores driver-specific properties that are passed to the CSI
                                    driver.
                                  type: object
                              type: object
                            downwardAPI:
                              description: DownwardAPI represents downward API about
                                the pod that should populate this volume.
                              properties:
                                defaultMode:
                                  description: 'Optional: mode bits to use on created
                                    files by default.'
                                  format: int32
                                  type: integer
                                items:
                                  description: Items is a list of downward API volume
                                    file.
                                  items:
                                    properties:
                                      fieldRef:
                                        description: 'Required: Selects a field of
                                          the pod: only annotations, labels, name
                                          and namespace are supported.'
                                        properties:
                                          apiVersion:
                                            description: Version of the schema the
                                              FieldPath is written in terms of, defaults
                                              to "v1".
                                            type: string
                                          fieldPath:
                                            description: Path of the field to select
                                              in the specified API version.
                                            type: string
                                        type: object
                                      mode:
                                        description: |-
                                          Optional: mode bits to use on this file, must be a value between 0
                                          and 0777.
                                        format: int32
                                        type: integer
                                      path:
                                        description: 'Required: Path is  the relative
                                          path name of the file to be created.'
                                        type: string
                                      resourceFieldRef:
                                        description: |-
                                          Selects a resource of the container: only resources limits and requests
                                          (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                        properties:
                                          containerName:
                                            description: 'Container name: required
                                              for volumes, optional for env vars.'
                                            type: string
                                          divisor:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Specifies the output format
                                              of the exposed resources, defaults to
                                              "1".
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          resource:
                                            description: 'Required: resource to select.'
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                              type: object
                            emptyDir:
                              description: EmptyDir represents a temporary directory
                                that shares a pod's lifetime.
                              properties:
                                medium:
                                  description: What type of storage medium should
                                    back this directory.
                                  type: string
                                sizeLimit:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Total amount of local storage required
                                    for this EmptyDir volume.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              type: object
                            fc:
                              description: FC represents a Fibre Channel resource
                                that is attached to a kubelet's host machine and then
                                exposed to the pod.
                              properties:
                                fsType:
                                  description: Filesystem type to mount.
                                  type: string
                                lun:
                                  description: 'Optional: FC target lun number.'
                                  format: int32
                                  type: integer
                                readOnly:
                                  description: 'Optional: Defaults to false (read/write).'
                                  type: boolean
                                targetWWNs:
                                  description: 'Optional: FC target worldwide names
                                    (WWNs).'
                                  items:
                                    type: string
                                  type: array
                                wwids:
                                  description: |-
                                    Optional: FC volume world wide identifiers (wwids)
                                    Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            flexVolume:
                              description: |-
                                FlexVolume represents a generic volume resource that is
                                provisioned/attached using an exec based plugin.
                              properties:
                                driver:
                                  description: Driver is the name of the driver to
                                    use for this volume.
                                  type: string
                                fsType:
                                  description: Filesystem type to mount.
                                  type: string
                                options:
                                  additionalProperties:
                                    type: string
                                  description: 'Optional: Extra command options if
                                    any.'
                                  type: object
                                readOnly:
                                  description: 'Optional: Defaults to false (read/write).'
                                  type: boolean
                                secretRef:
                                  description: |-
                                    Optional: SecretRef is reference to the secret object containing
                                    sensitive information to pass to the plugin scripts.
                                  properties:
                                    name:
                                      description: Name of the referent.
                                      type: string
                                  type: object
                              type: object
                            flocker:
                              description: Flocker represents a Flocker volume attached
                                to a kubelet's host machine.
                              properties:
                                datasetName:
                                  description: |-
                                    Name of the dataset stored as metadata -> name on the dataset for Flocker
                                    should be considered as deprecated.
                                  type: string
                                datasetUUID:
                                  description: UUID of the dataset.
                                  type: string
                              type: object
                            gcePersistentDisk:
                              description: |-
                                GCEPersistentDisk represents a GCE Disk resource that is attached to a
                                kubelet's host machine and then exposed to the pod.
                              properties:
                                fsType:
                                  description: Filesystem type of the volume that
                                    you want to mount.
                                  type: string
                                partition:
                                  description: The partition in the volume that you
                                    want to mount.
                                  format: int32
                                  type: integer
                                pdName:
                                  description: Unique name of the PD resource in GCE.
                                  type: string
                                readOnly:
                                  description: ReadOnly here will force the ReadOnly
                                    setting in VolumeMounts.
                                  type: boolean
                              type: object
                            gitRepo:
                              description: GitRepo represents a git repository at
                                a particular revision.
                              properties:
                                directory:
                                  description: Target directory name.
                                  type: string
                                repository:
                                  description: Repository URL.
                                  type: string
                                revision:
                                  description: Commit hash for the specified revision.
                                  type: string
                              type: object
                            glusterfs:
                              description: Glusterfs represents a Glusterfs mount
                                on the host that shares a pod's lifetime.
                              properties:
                                endpoints:
                                  description: EndpointsName is the endpoint name
                                    that details Glusterfs topology.
                                  type: string
                                path:
                                  description: Path is the Glusterfs volume path.
                                  type: string
                                readOnly:
                                  description: ReadOnly here will force the Glusterfs
                                    volume to be mounted with read-only permissions.
                                  type: boolean
                              type: object
                            hostPath:
                              description: |-
                                HostPath represents a pre-existing file or directory on the host
                                machine that is directly exposed to the container.
                              properties:
                                path:
                                  description: Path of the directory on the host.
                                  type: string
                                type:
                                  description: |-
                                    Type for HostPath Volume
                                    Defaults to ""
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath.
                                  type: string
                              type: object
                            iscsi:
                              description: |-
                                ISCSI represents an ISCSI Disk resource that is attached to a
                                kubelet's host machine and then exposed to the pod.
                              properties:
                                chapAuthDiscovery:
                                  description: whether support iSCSI Discovery CHAP
                                    authentication.
                                  type: boolean
                                chapAuthSession:
                                  description: whether support iSCSI Session CHAP
                                    authentication.
                                  type: boolean
                                fsType:
                                  description: Filesystem type of the volume that
                                    you want to mount.
                                  type: string
                                initiatorName:
                                  description: Custom iSCSI Initiator Name.
                                  type: string
                                iqn:
                                  description: Target iSCSI Qualified Name.
                                  type: string
                                iscsiInterface:
                                  description: iSCSI Interface Name that uses an iSCSI
                                    transport.
                                  type: string
                                lun:
                                  description: iSCSI Target Lun number.
                                  format: int32
                                  type: integer
                                portals:
                                  description: iSCSI Target Portal List.
                                  items:
                                    type: string
                                  type: array
                                readOnly:
                                  description: ReadOnly here will force the ReadOnly
                                    setting in VolumeMounts.
                                  type: boolean
                                secretRef:
                                  description: CHAP Secret for iSCSI target and initiator
                                    authentication.
                                  properties:
                                    name:
                                      description: Name of the referent.
                                      type: string
                                  type: object
                                targetPortal:
                                  description: iSCSI Target Portal.
                                  type: string
                              type: object
                            nfs:
                              description: |-
                                NFS represents an NFS mount on the host that shares a pod's lifetime
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs.
                              properties:
                                path:
                                  description: Path that is exported by the NFS server.
                                  type: string
                                readOnly:
                                  description: |-
                                    ReadOnly here will force
                                    the NFS export to be mounted with read-only permissions.
                                  type: boolean
                                server:
                                  description: Server is the hostname or IP address
                                    of the NFS server.
                                  type: string
                              type: object
                            persistentVolumeClaim:
                              description: |-
                                PersistentVolumeClaimVolumeSource represents a reference to a
                                PersistentVolumeClaim in the same namespace.
                              properties:
                                claimName:
                                  description: ClaimName is the name of a PersistentVolumeClaim
                                    in the same namespace as the pod using this volume.
                                  type: string
                                readOnly:
                                  description: Will force the ReadOnly setting in
                                    VolumeMounts.
                                  type: boolean
                              type: object
                            photonPersistentDisk:
                              description: PhotonPersistentDisk represents a PhotonController
                                persistent disk attached and mounted on kubelets host
                                machine.
                              properties:
                                fsType:
                                  description: Filesystem type to mount.
                                  type: string
                                pdID:
                                  description: ID that identifies Photon Controller
                                    persistent disk.
                                  type: string
                              type: object
                            portworxVolume:
                              description: PortworxVolume represents a portworx volume
                                attached and mounted on kubelets host machine.
                              properties:
                                fsType:
                                  description: |-
                                    FSType represents the filesystem type to mount
                                    Must be a filesystem type supported by the host operating system.
                                  type: string
                                readOnly:
                                  description: Defaults to false (read/write).
                                  type: boolean
                                volumeID:
                                  description: VolumeID uniquely identifies a Portworx
                                    volume.
                                  type: string
                              type: object
                            projected:
                              description: Items for all in one resources secrets,
                                configmaps, and downward API.
                              properties:
                                defaultMode:
                                  description: Mode bits to use on created files by
                                    default.
                                  format: int32
                                  type: integer
                                sources:
                                  description: list of volume projections.
                                  items:
                                    properties:
                                      configMap:
                                        description: information about the configMap
                                          data to project.
                                        properties:
                                          items:
                                            description: |-
                                              If unspecified, each key-value pair in the Data field of the referenced
                                              ConfigMap will be projected into the volume as a file whose name is the
                                              key and content is the value.
                                            items:
                                              properties:
                                                key:
                                                  description: The key to project.
                                                  type: string
                                                mode:
                                                  description: |-
                                                    Optional: mode bits to use on this file, must be a value between 0
                                                    and 0777.
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: The relative path of
                                                    the file to map the key to.
                                                  type: string
                                              type: object
                                            type: array
                                          localObjectReference:
                                            properties:
                                              name:
                                                description: Name of the referent.
                                                type: string
                                            type: object
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its keys must be defined.
                                            type: boolean
                                        type: object
                                      downwardAPI:
                                        description: information about the downwardAPI
                                          data to project.
                                        properties:
                                          items:
                                            description: Items is a list of DownwardAPIVolume
                                              file.
                                            items:
                                              properties:
                                                fieldRef:
                                                  description: 'Required: Selects
                                                    a field of the pod: only annotations,
                                                    labels, name and namespace are
                                                    supported.'
                                                  properties:
                                                    apiVersion:
                                                      description: Version of the
                                                        schema the FieldPath is written
                                                        in terms of, defaults to "v1".
                                                      type: string
                                                    fieldPath:
                                                      description: Path of the field
                                                        to select in the specified
                                                        API version.
                                                      type: string
                                                  type: object
                                                mode:
                                                  description: |-
                                                    Optional: mode bits to use on this file, must be a value between 0
                                                    and 0777.
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: 'Required: Path is  the
                                                    relative path name of the file
                                                    to be created.'
                                                  type: string
                                                resourceFieldRef:
                                                  description: |-
                                                    Selects a resource of the container: only resources limits and requests
                                                    (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                  properties:
                                                    containerName:
                                                      description: 'Container name:
                                                        required for volumes, optional
                                                        for env vars.'
                                                      type: string
                                                    divisor:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      description: Specifies the output
                                                        format of the exposed resources,
                                                        defaults to "1".
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    resource:
                                                      description: 'Required: resource
                                                        to select.'
                                                      type: string
                                                  type: object
                                              type: object
                                            type: array
                                        type: object
                                      secret:
                                        description: information about the secret
                                          data to project.
                                        properties:
                                          items:
                                            description: |-
                                              If unspecified, each key-value pair in the Data field of the referenced
                                              Secret will be projected into the volume as a file whose name is the
                                              key and content is the value.
                                            items:
                                              properties:
                                                key:
                                                  description: The key to project.
                                                  type: string
                                                mode:
                                                  description: |-
                                                    Optional: mode bits to use on this file, must be a value between 0
                                                    and 0777.
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: The relative path of
                                                    the file to map the key to.
                                                  type: string
                                              type: object
                                            type: array
                                          localObjectReference:
                                            properties:
                                              name:
                                                description: Name of the referent.
                                                type: string
                                            type: object
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined.
                                            type: boolean
                                        type: object
                                      serviceAccountToken:
                                        description: information about the serviceAccountToken
                                          data to project.
                                        properties:
                                          audience:
                                            description: Audience is the intended
                                              audience of the token.
                                            type: string
                                          expirationSeconds:
                                            description: |-
                                              ExpirationSeconds is the requested duration of validity of the service
                                              account token.
                                            format: int64
                                            type: integer
                                          path:
                                            description: |-
                                              Path is the path relative to the mount point of the file to project the
                                              token into.
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                              type: object
                            quobyte:
                              description: Quobyte represents a Quobyte mount on the
                                host that shares a pod's lifetime.
                              properties:
                                group:
                                  description: |-
                                    Group to map volume access to
                                    Default is no group.
                                  type: string
                                readOnly:
                                  description: ReadOnly here will force the Quobyte
                                    volume to be mounted with read-only permissions.
                                  type: boolean
                                registry:
                                  description: |-
                                    Registry represents a single or multiple Quobyte Registry services
                                    specified as a string as host:port pair (multiple entries are separated with commas)
                                    which acts as the central registry for volumes.
                                  type: string
                                tenant:
                                  description: |-
                                    Tenant owning the given Quobyte volume in the Backend
                                    Used with dynamically provisioned Quobyte volumes, value is set by the plugin.
                                  type: string
                                user:
                                  description: |-
                                    User to map volume access to
                                    Defaults to serivceaccount user.
                                  type: string
                                volume:
                                  description: Volume is a string that references
                                    an already created Quobyte volume by name.
                                  type: string
                              type: object
                            rbd:
                              description: RBD represents a Rados Block Device mount
                                on the host that shares a pod's lifetime.
                              properties:
                                fsType:
                                  description: Filesystem type of the volume that
                                    you want to mount.
                                  type: string
                                image:
                                  description: The rados image name.
                                  type: string
                                keyring:
                                  description: Keyring is the path to key ring for
                                    RBDUser.
                                  type: string
                                monitors:
                                  description: A collection of Ceph monitors.
                                  items:
                                    type: string
                                  type: array
                                pool:
                                  description: The rados pool name.
                                  type: string
                                readOnly:
                                  description: ReadOnly here will force the ReadOnly
                                    setting in VolumeMounts.
                                  type: boolean
                                secretRef:
                                  description: SecretRef is name of the authentication
                                    secret for RBDUser.
                                  properties:
                                    name:
                                      description: Name of the referent.
                                      type: string
                                  type: object
                                user:
                                  description: The rados user name.
                                  type: string
                              type: object
                            scaleIO:
                              description: ScaleIO represents a ScaleIO persistent
                                volume attached and mounted on Kubernetes nodes.
                              properties:
                                fsType:
                                  description: Filesystem type to mount.
                                  type: string
                                gateway:
                                  description: The host address of the ScaleIO API
                                    Gateway.
                                  type: string
                                protectionDomain:
                                  description: The name of the ScaleIO Protection
                                    Domain for the configured storage.
                                  type: string
                                readOnly:
                                  description: Defaults to false (read/write).
                                  type: boolean
                                secretRef:
                                  description: |-
                                    SecretRef references to the secret for ScaleIO user and other
                                    sensitive information.
                                  properties:
                                    name:
                                      description: Name of the referent.
                                      type: string
                                  type: object
                                sslEnabled:
                                  description: Flag to enable/disable SSL communication
                                    with Gateway, default false.
                                  type: boolean
                                storageMode:
                                  description: Indicates whether the storage for a
                                    volume should be ThickProvisioned or ThinProvisioned.
                                  type: string
                                storagePool:
                                  description: The ScaleIO Storage Pool associated
                                    with the protection domain.
                                  type: string
                                system:
                                  description: The name of the storage system as configured
                                    in ScaleIO.
                                  type: string
                                volumeName:
                                  description: |-
                                    The name of a volume already created in the ScaleIO system
                                    that is associated with this volume source.
                                  type: string
                              type: object
                            secret:
                              description: Secret represents a secret that should
                                populate this volume.
                              properties:
                                defaultMode:
                                  description: 'Optional: mode bits to use on created
                                    files by default.'
                                  format: int32
                                  type: integer
                                items:
                                  description: |-
                                    If unspecified, each key-value pair in the Data field of the referenced
                                    Secret will be projected into the volume as a file whose name is the
                                    key and content is the value.
                                  items:
                                    properties:
                                      key:
                                        description: The key to project.
                                        type: string
                                      mode:
                                        description: |-
                                          Optional: mode bits to use on this file, must be a value between 0
                                          and 0777.
                                        format: int32
                                        type: integer
                                      path:
                                        description: The relative path of the file
                                          to map the key to.
                                        type: string
                                    type: object
                                  type: array
                                optional:
                                  description: Specify whether the Secret or its keys
                                    must be defined.
                                  type: boolean
                                secretName:
                                  description: Name of the secret in the pod's namespace
                                    to use.
                                  type: string
                              type: object
                            storageos:
                              description: StorageOS represents a StorageOS volume
                                attached and mounted on Kubernetes nodes.
                              properties:
                                fsType:
                                  description: Filesystem type to mount.
                                  type: string
                                readOnly:
                                  description: Defaults to false (read/write).
                                  type: boolean
                                secretRef:
                                  description: |-
                                    SecretRef specifies the secret to use for obtaining the StorageOS API
                                    credentials.
                                  properties:
                                    name:
                                      description: Name of the referent.
                                      type: string
                                  type: object
                                volumeName:
                                  description: VolumeName is the human-readable name
                                    of the StorageOS volume.
                                  type: string
                                volumeNamespace:
                                  description: VolumeNamespace specifies the scope
                                    of the volume within StorageOS.
                                  type: string
                              type: object
                            vsphereVolume:
                              description: VsphereVolume represents a vSphere volume
                                attached and mounted on kubelets host machine.
                              properties:
                                fsType:
                                  description: Filesystem type to mount.
                                  type: string
                                storagePolicyID:
                                  description: Storage Policy Based Management (SPBM)
                                    profile ID associated with the StoragePolicyName.
                                  type: string
                                storagePolicyName:
                                  description: Storage Policy Based Management (SPBM)
                                    profile name.
                                  type: string
                                volumePath:
                                  description: Path that identifies vSphere volume
                                    vmdk.
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                type: object
              istioControlPlane:
                description: Istio CR to which this gateway belongs to.
                properties:
                  name:
                    description: Name of the referenced Kubernetes resource.
                    type: string
                  namespace:
                    description: Namespace of the referenced Kubernetes resource.
                    type: string
                type: object
              k8sResourceOverlays:
                description: K8s resource overlay patches.
                items:
                  properties:
                    groupVersionKind:
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                        version:
                          type: string
                      type: object
                    objectKey:
                      properties:
                        name:
                          description: Name of the referenced Kubernetes resource.
                          type: string
                        namespace:
                          description: Namespace of the referenced Kubernetes resource.
                          type: string
                      type: object
                    patches:
                      items:
                        properties:
                          parseValue:
                            type: boolean
                          path:
                            type: string
                          type:
                            enum:
                            - unspecified
                            - replace
                            - remove
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              runAsRoot:
                description: Whether to run the gateway in a privileged container.
                nullable: true
                type: boolean
              service:
                description: Service spec.
                properties:
                  clusterIP:
                    description: |-
                      clusterIP is the IP address of the service and is usually assigned
                      randomly by the master.
                    type: string
                  externalIPs:
                    description: |-
                      externalIPs is a list of IP addresses for which nodes in the cluster
                      will also accept traffic for this service.
                    items:
                      type: string
                    type: array
                  externalName:
                    description: |-
                      externalName is the external reference that kubedns or equivalent will
                      return as a CNAME record for this service.
                    type: string
                  externalTrafficPolicy:
                    description: |-
                      externalTrafficPolicy denotes if this Service desires to route external
                      traffic to node-local or cluster-wide endpoints.
                    type: string
                  healthCheckNodePort:
                    description: healthCheckNodePort specifies the healthcheck nodePort
                      for the service.
                    format: int32
                    type: integer
                  ipFamily:
                    description: ipFamily specifies whether this Service has a preference
                      for a particular IP family (e.g.
                    type: string
                  loadBalancerIP:
                    description: |-
                      Only applies to Service Type: LoadBalancer
                      LoadBalancer will get created with the IP specified in this field.
                    type: string
                  loadBalancerSourceRanges:
                    description: |-
                      If specified and supported by the platform, this will restrict traffic through the cloud-provider
                      load-balancer will be restricted to the specified client IPs.
                    items:
                      type: string
                    type: array
                  metadata:
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects.
                        type: object
                    type: object
                  ports:
                    description: The list of ports that are exposed by this service.
                    items:
                      properties:
                        name:
                          description: The name of this port within the service.
                          type: string
                        nodePort:
                          description: The port on each node on which this service
                            is exposed when type=NodePort or LoadBalancer.
                          format: int32
                          type: integer
                        port:
                          description: The port that will be exposed by this service.
                          format: int32
                          type: integer
                        protocol:
                          default: TCP
                          description: The IP protocol for this port.
                          type: string
                        targetPort:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            pods targeted by the service.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    minItems: 1
                    type: array
                    x-kubernetes-list-map-keys:
                    - port
                    - protocol
                    x-kubernetes-list-type: map
                  publishNotReadyAddresses:
                    description: |-
                      publishNotReadyAddresses, when set to true, indicates that DNS implementations
                      must publish the notReadyAddresses of subsets for the Endpoints associated with
                      the Service.
                    type: boolean
                  selector:
                    additionalProperties:
                      type: string
                    description: |-
                      Route service traffic to pods with label keys and values matching this
                      selector.
                    type: object
                  sessionAffinity:
                    description: Supports "ClientIP" and "None".
                    type: string
                  sessionAffinityConfig:
                    description: sessionAffinityConfig contains the configurations
                      of session affinity.
                    properties:
                      clientIP:
                        description: clientIP contains the configurations of Client
                          IP based session affinity.
                        properties:
                          timeoutSeconds:
                            description: timeoutSeconds specifies the seconds of ClientIP
                              type session sticky time.
                            format: int32
                            type: integer
                        type: object
                    type: object
                  type:
                    description: type determines how the Service is exposed.
                    enum:
                    - ClusterIP
                    - NodePort
                    - LoadBalancer
                    type: string
                required:
                - ports
                - type
                type: object
              type:
                description: Type of gateway, either ingress or egress.
                enum:
                - ingress
                - egress
                type: string
            required:
            - istioControlPlane
            - service
            - type
            type: object
          status:
            properties:
              ErrorMessage:
                description: Reconciliation error message if any.
                type: string
              GatewayAddress:
                description: Current address for the gateway.
                items:
                  type: string
                type: array
              Status:
                description: Reconciliation status of the mesh gateway.
                enum:
                - Unspecified
                - Created
                - ReconcileFailed
                - Reconciling
                - Available
                - Unmanaged
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
