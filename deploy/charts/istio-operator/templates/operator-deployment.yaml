apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "istio-operator.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "istio-operator.operatorLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "istio-operator.operatorSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "istio-operator.operatorSelectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.rbac.enabled }}
      serviceAccountName: {{ include "istio-operator.fullname" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 60
      containers:
      {{- if and .Values.prometheusMetrics.enabled .Values.prometheusMetrics.authProxy.enabled }}
      - name: kube-rbac-proxy
        image: "{{ .Values.prometheusMetrics.authProxy.image.repository }}:{{ .Values.prometheusMetrics.authProxy.image.tag }}"
        imagePullPolicy: {{ .Values.prometheusMetrics.authProxy.image.pullPolicy }}
        args:
          - "--secure-listen-address=0.0.0.0:8443"
          - "--upstream=http://127.0.0.1:8080/"
          - "--logtostderr=true"
          - "--v=10"
        ports:
          - containerPort: 8443
            name: https
      {{- end }}
      - command:
        - /manager
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: manager
        args:
          {{- if and .Values.prometheusMetrics.enabled .Values.prometheusMetrics.authProxy.enabled }}
          - "--metrics-addr=127.0.0.1:8080"
          {{- end }}
          {{- if .Values.leaderElection.enabled }}
          - "--leader-election-enabled"
          {{- if .Values.leaderElection.nameOverride }}
          - "--leader-election-name={{ .Values.leaderElection.nameOverride }}"
          {{- else }}
          - "--leader-election-name={{ include "istio-operator.fullname" . }}-leader"
          {{- end }}
          - "--leader-election-namespace={{ .Values.leaderElection.namespace }}"
          {{- end }}
          - "--apiserver-endpoint-address={{ .Values.apiServerEndpointAddress }}"
          {{- if .Values.clusterRegistry.clusterAPI.enabled }}
          - "--cluster-registry-api-enabled"
          {{- end }}
          {{- if .Values.clusterRegistry.resourceSyncRules.enabled }}
          - "--cluster-registry-sync-rules-enabled"
          {{- end }}
          {{- range $value := .Values.extraArgs }}
          - {{ quote $value }}
          {{- end }}
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        ports:
        - containerPort: 443
          name: webhook-server
          protocol: TCP
          {{- if and .Values.prometheusMetrics.enabled (not .Values.prometheusMetrics.authProxy.enabled) }}
        - containerPort: 8080
          name: metrics
          protocol: TCP
          {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
