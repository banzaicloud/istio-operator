cni:
  hub: ""
  tag: ""
  variant: ""
  image: install-cni

  # Configuration log level of istio-cni binary
  # by default istio-cni send all logs to UDS server
  # if want to see them you need change global.logging.level with cni:debug
  logLevel: debug

  # Configuration file to insert istio-cni plugin configuration
  # by default this will be the first file found in the cni-conf-dir
  # Example
  # cniConfFileName: 10-calico.conflist

  # CNI bin and conf dir override settings
  # defaults:
  cniBinDir: "" # Auto-detected based on version; defaults to /opt/cni/bin.
  cniConfDir: /etc/cni/net.d
  cniConfFileName: ""

  excludeNamespaces:
    # TODO JAJ - recheck this is commented out in working diffs
    # - istio-system
    - kube-system

  includeNamespaces: []

  # If this value is set a RoleBinding will be created
  # in the same namespace as the istio-cni DaemonSet is created.
  # This can be used to bind a preexisting ClusterRole to the istio/cni ServiceAccount
  # e.g. if you use PodSecurityPolicies
  psp_cluster_role: ""

  # Deploy the config files as plugin chain (value "true") or as standalone files in the conf dir (value "false")?
  # Some k8s flavors (e.g. OpenShift) do not support the chain approach, set to false if this is the case
  chained: true

  # Configure ambient settings
  ambient:
    # If enabled, ambient redirection will be enabled
    enabled: false
    # Set ambient redirection mode: "iptables" or "ebpf"
    redirectMode: "iptables"

  repair:
    enabled: true

    labelPods: true
    deletePods: true

    initContainerName: "istio-validation"

    brokenPodLabelKey: "cni.istio.io/uninitialized"
    brokenPodLabelValue: "true"

  # Experimental taint controller for further race condition mitigation
  taint:
    enabled: false

  resourceQuotas:
    enabled: true
    pods: "128"
    priorityClasses:
    - system-node-critical
    - system-cluster-critical

  metadata:
    labels: {}
    annotations: {}
  podMetadata:
    labels: {}
    # TODO JAJ test - annotations: {ambient.istio.io/redirection: disabled}
  deploymentStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  env: []
  nodeSelector:
    kubernetes.io/os: linux
  affinity: {}
  tolerations: []
  volumes: []
  volumeMounts: []

  # Set to `type: RuntimeDefault` to use the default profile if available.
  seccompProfile: {}

  resources:
    requests:
      cpu: 100m
      memory: 100Mi

  priorityClassName: system-node-critical

  # TODO Shouldn't this always be privileged
  privileged: true

# Revision is set as 'version' label and part of the resource names when installing multiple control planes.
revision: ""

global:
  # Default hub for Istio images.
  # Releases are published to docker hub under 'istio' project.
  # Dev builds from prow are on gcr.io
  hub: gcr.io/istio-testing

  # Default tag for Istio images.
  tag: latest

  # Variant of the image to use.
  # Currently supported are: [debug, distroless]
  variant: ""

  # Specify image pull policy if default behavior isn't desired.
  # Default behavior: latest images will be Always else IfNotPresent.
  imagePullPolicy: ""

  # change cni scope level to control logging out of istio-cni-node DaemonSet
  logging:
    level: default:info,cni:info

  # ImagePullSecrets for all ServiceAccount, list of secrets in the same namespace
  # to use for pulling any images in pods that reference this ServiceAccount.
  # For components that don't use ServiceAccounts (i.e. grafana, servicegraph, tracing)
  # ImagePullSecrets will be added to the corresponding Deployment(StatefulSet) objects.
  # Must be set for any cluster configured with private docker registry.
  imagePullSecrets: []
  # - private-registry-key
