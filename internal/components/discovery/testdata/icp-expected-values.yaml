global:
  istioNamespace: istio-system
  proxy:
    image: proxyv2
    privileged: false
    enableCoreDump: false
    logLevel: warning
    componentLogLevel: "misc:debug"
    clusterDomain: "acme.corp"
    holdApplicationUntilProxyStarts: true
    lifecycle:
      postStart:
        exec:
          command:
          - pilot-agent
          - wait
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
    includeIPRanges: "*"
    tracer: "zipkin"
  proxy_init:
    image: proxyv2
    resources:
      limits:
        cpu: 100m
        memory: 64Mi
      requests:
        cpu: 50m
        memory: 32Mi
  hub: gcr.io/istio-testing
  tag: latest
  imagePullPolicy: Never
  imagePullSecrets:
  - pullsecret-1
  - pullsecret-2
  priorityClassName: high-priority
  defaultPodDisruptionBudget:
    enabled: true
    maxUnavailable: 5
    minAvailable: 1
  jwtPolicy: third-party-jwt
  logging:
    level: "default:warning"
  istiod:
    enableAnalysis: false
  mountMtlsCerts: false
  network: network1
  externalIstiod: false
  pilotCertProvider: istiod
  sds:
    token:
      aud: istio-ca
  oneNamespace: false
  caName: Citadel
  caAddress: localhost
  distribution: cisco
  meshID: mesh1
  meshNetworks:
    network1:
      endpoints:
      - fromRegistry: demo-cluster2
      gateways:
      - address: 127.0.0.1
        locality: us-east-1a
        port: 15443
  mode: ACTIVE
  multiCluster:
    clusterName: demo-cluster1
pilot:
  image: "container-hub/image-name:tag"
  deploymentAnnotations:
    testannotation.banzaicloud.io/name: value
  deploymentLabels:
    testlabel.banzaicloud.io/name: value
  volumes:
  - name: dddemo
    secret:
      optional: true
      secretName: ssname
  - name: config-vol
    configMap:
      name: log-config
      items:
      - key: log_level
        path: log_level
  volumeMounts:
  - name: config-vol
    mountPath: /etc/config
  env:
    - name: ISTIOD_CUSTOM_HOST
      value: istiod-cp-v117x.istio-system.svc
    - name: PILOT_ENABLE_STATUS
      value: "true"
    - name: INJECTION_WEBHOOK_CONFIG_NAME
      value: istio-sidecar-injector-cp-v117x-istio-system
    - name: VALIDATION_WEBHOOK_CONFIG_NAME
      value: istio-validator-cp-v117x-istio-system
    - name: LEADER_ELECTION_NAME_SUFFIX
      value: -cp-v117x
    - name: CACERT_CONFIG_NAME
      value: istio-ca-root-cert-cp-v117x
    - name: MESHCONFIG_CONFIGMAP_NAME
      value: istio-cp-v117x
    - name: INJECTOR_CONFIGMAP_NAME
      value: istio-sidecar-injector-cp-v117x
    - name: TEST_ENV
      value: test-env-value
  resources:
    limits:
      cpu: "2"
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector:
    disktype: ssd
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/e2e-az-name
            operator: In
            values:
            - e2e-az1
            - e2e-az2
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: security
            operator: In
            values:
            - S1
        topologyKey: topology.kubernetes.io/zone
  securityContext:
    runAsUser: 1337
    runAsGroup: 1337
    runAsNonRoot: true
  podSecurityContext:
    runAsUser: 1337
  tolerations:
  - key: key1
    effect: NoSchedule
    operator: Equal
    tolerationSeconds: 5
    value: value1
  autoscaleEnabled: true
  autoscaleMax: 5
  autoscaleMin: 1
  replicaCount: 1
  cpu:
    targetAverageUtilization: 80
  podAnnotations:
    podannotation: podannotationvalue
  podLabels:
    podlabel: podlabelvalue
  deploymentStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 30%
  traceSampling: 0.5
  enableProtocolSniffingForOutbound: false
  enableProtocolSniffingForInbound: false
revision: cp-v117x
meshConfig:
  rootNamespace: istio-system
  connectTimeout: 5s
  caCertificates:
  - pem: "<pem content>"

telemetry:
  v2:
    enabled: true
    metadataExchange:
      wasmEnabled: false
    prometheus:
      wasmEnabled: false
sidecarInjectorWebhook:
  defaultTemplates: [ sidecar, sidecarOverrides ]
  templates:
    custom1: |
      spec:
        containers:
        - name: istio-proxy
          env:
          - name: TEMPLATE
            value: custom1
    custom2: |
      spec:
        containers:
        - name: istio-proxy
          env:
          - name: TEMPLATE
            value: custom2
    gatewayOverrides: |
      spec:
        containers:
        - name: istio-proxy
          env:
          - name: TEMPLATE
            value: gateway
    sidecarOverrides: |
      spec:
        containers:
        - name: istio-proxy
          env:
          - name: TEMPLATE
            value: sidecar
  httpProxyEnvs:
    noProxy: localhost
istio_cni:
  enabled: true
  name: istio-cni-cp-v117x-istio-system
