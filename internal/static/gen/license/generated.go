// Code generated by vfsgen; DO NOT EDIT.

package license

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Root statically implements the virtual filesystem provided to vfsgen.
var Root = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰CompressedFileInfo{
			name:             "/",
			modTime:          time.Date(2021, 5, 4, 8, 23, 13, 364970848, time.UTC),
			uncompressedSize: 11356,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xdc\x5a\x5f\x73\xdc\x46\x72\x7f\xd7\xa7\xe8\x6c\x55\x2a\x64\x15\xb4\xd2\x39\x77\x49\xce\x7e\xa2\x45\xea\xbc\x89\xbc\x54\x91\xab\x28\x2e\x97\x1f\x66\x81\xc6\x62\xa2\xc1\x0c\x3c\x33\xe0\x12\xf9\xf4\xa9\xee\xf9\x83\xc1\xee\x52\x56\x2a\x6f\xe7\x07\x97\x48\x02\x3d\x3d\xfd\xe7\xd7\xbf\xee\x06\xfc\xd1\x7f\x37\x83\xa8\x3b\x84\x0f\xb2\x46\xed\xf0\xd5\x57\x9e\xfc\x4f\xb4\x4e\x1a\x0d\xdf\xad\xdf\x56\xf0\xef\x42\x8f\xc2\x4e\xf0\xdd\xdb\xb7\x7f\x7e\xf1\xa5\xce\xfb\xe1\xfb\x37\x6f\x8e\xc7\xe3\x5a\xf0\x31\x6b\x63\x0f\x6f\x54\x38\xca\xbd\x79\x45\x2f\xee\xee\x1e\x7e\x7e\x84\x9b\xed\x2d\xbc\xbb\xdf\xde\x6e\x76\x9b\xfb\xed\x23\xbc\xbf\x7f\x80\x4f\x8f\x77\x15\x3c\xdc\x7d\x7c\xb8\xbf\xfd\xf4\x8e\x7e\x5d\xf1\x53\xb7\x9b\xc7\xdd\xc3\xe6\xc7\x4f\xf4\x1b\x16\xf0\xa7\x35\xdc\x62\x2b\xb5\xf4\xd2\x68\xb7\x7e\x15\xb5\x59\xc5\x1b\xad\xc0\x75\x42\x29\xe8\x51\x68\xf0\x1d\x82\x47\xdb\x3b\x10\xba\x81\xda\xe8\x26\xbc\x05\xad\xb1\x30\x3a\xac\xc0\xe2\x60\x4d\x33\xd6\xf4\xeb\x2a\x8a\xa2\x67\x1b\xe9\xbc\x95\xfb\x91\x7e\x0f\xc2\x41\x43\x47\x62\x03\xfb\x09\x1e\xb1\x0e\x42\xfe\x04\xbe\xb3\x66\x3c\x74\xf0\x57\x30\x2d\xf8\x4e\x3a\x68\x4c\x3d\xf6\xa8\xfd\xa9\x5e\xc6\x9e\x29\x56\x9b\x61\xb2\xf2\xd0\x79\x30\x47\x8d\x16\x8c\x05\xd4\x5e\xfa\x09\xc4\xe8\x3b\x63\xe5\xff\xf0\x79\x51\xce\xa5\x37\x7c\x27\x3c\x48\x07\x07\x2b\xb4\x97\xfa\xc0\x0f\x45\x3b\x14\x0a\xe0\x41\x28\xb8\x63\xd1\x67\x4a\x8c\x9a\x2e\xc8\xda\x23\x88\x9a\xa5\x24\x2d\x74\x03\x42\xa9\x28\xc6\xf8\x0e\xa3\x82\x12\x5d\x38\xba\x36\xda\x5b\xa3\x2a\x10\x16\xd3\x0f\x8a\x95\xae\xe8\x36\xf4\xdb\x51\x37\x68\xa1\x36\x7d\x6f\x74\x94\x14\x1f\x84\xa3\xf4\x5d\x90\x13\x0e\x5c\xc3\x7b\x63\x59\x8f\x61\xb4\x83\x71\xe8\x66\xab\x66\x87\x27\x1f\xad\xa2\x94\x15\x5f\xc5\xc1\x95\xbc\x0e\xaf\x9a\x23\xda\x0a\x1a\x69\xb1\xf6\xa4\x84\xd4\xe1\xdf\x15\x78\x03\xb5\x18\x1d\xd2\x73\x51\x4a\xf8\x13\x5b\xc0\x42\x2f\xb4\x38\x20\x39\x8f\xce\x75\x63\xdd\x45\xc5\x2a\x38\x76\xc8\xd7\xdf\x4f\x41\x7b\xc1\xb2\x4b\xcb\x1c\x25\x45\x93\xb1\x70\x25\xe5\x75\x70\x8f\xeb\xe4\x40\x92\x5a\xd9\xfa\x09\x06\xb4\x35\x89\xbe\xfa\xcb\xdb\x7f\xbc\xe6\xe3\x8c\xc5\x68\xf8\x24\x68\xf4\xce\x0b\xdd\x90\x0f\x5c\x27\x2c\xba\x24\x51\x5e\xc3\x1e\x35\xb6\xb2\x96\x42\x2d\xa5\x17\x7a\xce\x2e\xff\xc5\x8c\x2b\xb8\x32\x96\xff\x65\x57\xd7\xa5\xd7\x85\x66\x9b\x3c\xc9\x66\x24\x59\x16\xca\xf8\x88\x02\xf0\x19\x6d\x2d\x1d\x29\x32\xa0\xed\xa5\x73\x1c\xf0\x1c\x67\x21\x09\xd8\x2d\x67\xa1\xf6\x68\x46\x5b\xe3\x8a\xd2\xab\x3f\x8d\xb4\xc1\x62\x8b\xd6\x62\x13\xfe\xda\xb2\xc5\xbf\xd0\x11\xbd\x69\x64\x2b\x6b\xc1\x59\x95\x1c\x2c\x75\xad\x46\x36\xc5\x7e\xf4\xa0\x8d\x07\x25\x7b\x49\xa7\x7b\x03\xce\xb4\xfe\x48\xe1\xe5\xf8\x40\xa8\x4d\x83\x55\xce\x3d\x16\x14\xc5\x84\x07\xaa\x94\xff\xad\x3c\x8c\x96\xff\x0e\xad\x54\x58\xc0\xc7\xfd\xfe\xbf\xb1\xf6\xe7\xaa\x0b\x3d\x85\xdf\x59\x74\xa3\xe2\xfc\x68\xad\xe9\xa1\xc7\xba\x13\x5a\xd6\x22\x25\x88\xb7\x42\x3b\x7a\x52\xa4\x80\xe2\xdf\xa8\xf8\x63\x0b\x02\x82\x79\x58\x5c\xb5\xbc\x60\x94\x71\x72\xcd\xda\xf4\x83\xa4\x84\x32\xac\x5c\xbc\xe6\x01\x35\x5a\x41\x8f\x2c\x2e\x5c\xa2\x57\x6d\xf4\x53\x40\x6f\x47\x72\x42\xee\xf6\xd8\x48\x01\x7e\x1a\xca\x6b\x7f\x36\xf6\xcb\x19\x28\x1c\x8d\xfd\xc2\x1a\x33\x0e\x51\xa4\xcd\x29\x20\x75\xba\x46\x4e\x80\x60\xba\x78\xad\x5e\x34\x08\xe2\x49\x48\x25\xf6\x2a\xe5\x7f\x81\x4b\x15\xa1\x29\x05\x60\x2d\x62\x28\x89\x8c\x0b\x09\xdd\xb4\xf1\xb2\xc6\x0c\x6f\xc1\x52\xd8\xd0\xd9\x04\x2b\xde\x53\x6d\x61\x0b\x25\x6d\xa3\x88\x2b\xa1\x01\x9f\x45\x3f\x28\xa4\x17\x07\x6b\x9e\x64\x7c\x91\x9e\xbc\x19\x06\xd4\x8d\x7c\x86\x3d\x2a\x73\xbc\x9e\xad\x70\x8b\x56\x3e\x09\x2f\x9f\x10\xc8\x20\x6e\x75\x1a\x01\x74\xc6\x65\x1b\xc4\xdb\x47\x49\xc1\x06\x49\xf1\xbd\x70\xe4\x3c\xcd\xa9\xd8\xd0\x19\x14\xfd\xd6\xf4\x01\xab\xe8\x28\x76\x17\xe5\xc2\xb1\x93\x75\x57\x80\x01\x36\xd2\x1b\x4b\xe9\x6e\xf1\x49\xb2\x2b\x29\x8a\xb5\xf1\x31\x4f\x00\x95\xd8\x1b\x9b\x7e\x32\x36\xb9\xb9\xcc\xa6\x28\x8c\xaa\x1c\x3a\xd4\x9e\xad\x2f\xe0\xd8\x19\xc5\x49\x01\xc6\xca\x83\xd4\x42\x5d\xf0\xf9\x39\x1e\x27\x9c\x6a\x17\xe9\x5f\xc1\xa9\xf9\xa2\xf5\x28\x9a\xa3\xef\x58\x7c\xac\x1a\x16\x7b\x21\x73\x7e\xe2\x20\x2c\x47\x0a\xd9\x85\xaf\xd1\xa3\x45\x35\x81\x92\xfa\x0b\x1b\x6e\x2f\x35\xc7\x89\x16\x3d\x5e\x27\xa7\x4b\xed\xd1\xb6\xa2\xe6\x22\x51\x15\x35\x32\x1b\xf5\x4c\x29\xb2\x0e\x9a\x76\xf6\xfa\x3b\x82\xf2\x58\xe3\x2f\x7a\xfc\x34\x07\x72\xca\x16\xe7\x65\x03\xc6\x84\x4b\xb5\x34\xeb\x41\xc2\x16\x3e\xe1\x18\x6e\x22\x13\x49\x92\x4c\xb0\x0d\xbf\x65\xec\x8b\xca\x57\x45\x52\x78\x42\x7d\xa3\x85\x52\x09\xb6\xdd\xb8\xef\xa5\x8f\xe0\x91\x78\x07\x47\x17\x6b\xce\xea\xc5\x54\xe0\x83\x18\xc7\xcf\x68\x45\xf2\x32\x97\xbb\xaf\x56\x8b\x92\xa8\x10\x2a\xf3\xf1\x14\xef\x7b\xec\x84\x6a\xc1\xb4\x2f\x93\x97\x6f\xab\xf6\xb0\xca\x77\x5a\x45\x59\xa1\xde\x67\x58\x36\x2d\xa0\xc2\xda\x5b\xa3\x65\x5d\x91\x17\xf6\x42\x71\x1c\x1d\x2d\xbd\xa7\x99\x7c\x8c\x3a\x5a\x1f\x28\x0b\x4a\xa3\xe3\x6c\x28\xb2\x93\x77\x73\xb2\xb0\xfd\x5d\xf5\xd5\x52\x94\xb1\xab\x3c\xc3\xe8\x42\x27\xe8\x85\x54\xf4\xb2\x92\xce\xbb\xaa\x2c\x59\x99\x0a\xb9\xc9\x79\xec\x5d\x09\xe1\xd2\xb9\x11\xa9\x84\xd4\x5c\x23\xe3\x13\xc1\xfd\x54\xf9\x02\x5b\xc9\x5c\xab\x34\x7a\x55\xc0\xc8\x22\x0a\x0a\x6b\x93\xdd\x1a\xe9\xea\xd1\x71\x95\xe7\x13\x7b\xc6\xcb\x48\x23\x3f\x33\xe2\xcd\xa5\x09\x9f\x93\x11\x96\x77\x4d\xf1\x58\x1b\xed\x06\x59\x8f\x66\x74\x6a\x82\x5e\xd8\x2f\x04\x7d\x76\x66\x47\x89\x72\xa1\x93\x07\xcd\xd8\x2f\x35\xfb\x88\x0d\x7b\x31\x12\x09\xac\x56\x5b\xe3\x41\x40\x99\xab\xeb\xd5\x79\x0a\x9f\xf0\xeb\x7c\xed\x94\x81\x7f\x48\x79\x4a\x03\x12\x3e\xf6\x27\x87\x42\x27\x1c\xec\x11\x35\x58\xac\x91\x91\x7c\x3f\x2d\xce\x99\x93\xd0\xe1\xef\x23\x6a\xaf\xe8\xd8\xda\xd8\xc1\x84\x72\x4d\x84\xb7\x48\xbf\x00\x44\xdf\xad\xe1\x6f\x44\xab\xe8\xd8\x77\xf9\xfa\x89\x59\xc1\xe3\x18\x8a\x6b\x8c\xd5\x8b\xcd\x4c\x91\x66\x25\x2a\xa3\xa8\x3b\x28\x0c\x04\x04\x21\xfb\x29\xb0\x38\xe6\x05\xbf\x98\x11\x04\x31\xbc\x01\xfd\x28\x54\x0a\xbf\xa3\xb1\xaa\x39\x4a\xe2\x1a\xda\xe8\xd7\xec\x79\x27\x9f\xf8\xc7\xd7\x75\x27\xec\x81\x1a\x27\x33\x09\xe5\xa7\xd7\xad\x45\xac\x40\x5a\x8b\x4f\xa6\x26\x20\x3f\xab\xe6\xb1\xff\xa3\x03\x53\xb7\x85\x15\xd1\xc1\x81\xe2\xf8\x0c\xe9\x66\x38\x1f\xc6\xbd\x92\xb5\x9a\x28\x50\x07\x25\xa6\x6a\xfe\xcd\x80\x36\x94\x5a\xc7\xbf\x89\xc4\xa2\xec\xdb\x4a\x9a\x9f\xb1\x98\xc9\xf2\xd9\x89\x17\xca\x39\x63\x4b\x70\xd0\x3f\x17\x0e\xfa\x28\x08\x74\xff\x0e\xbc\x73\x85\xcf\x35\x0e\x9e\x12\xcc\xf9\x94\x8c\xac\xa0\x0b\x0d\xd1\x35\x0c\xe1\xae\x85\xf7\x7a\xf1\x05\x2b\xe8\xc4\x13\x32\xcb\x4b\x0a\x71\x1f\x6d\xda\x96\x78\x9e\x01\x87\x4a\x55\xf1\xff\xb2\x1f\x8c\xf5\xc1\x31\x19\x07\x22\x51\x8e\xac\x90\x61\x26\xdd\x8c\x4c\x10\x7c\x94\x4e\x15\xc3\xa0\xa8\xdd\x34\x5a\x4d\xc1\xca\x84\x5d\x51\xb5\x5a\x09\xd9\xbb\xf8\x6c\x71\xb9\xfd\x14\x84\x94\xd6\xcd\xb8\xa9\xb1\x46\xe7\x84\x95\x9c\x9d\xad\x95\xfa\x90\x3a\x1a\x94\xa9\xf6\x95\x89\x7f\xe5\xae\x41\x28\xa3\x31\x56\xc4\xda\xf4\x7b\xa9\x33\xab\xe7\xd7\x4e\x5f\x48\x17\x0a\x1d\x6e\xac\xb6\xde\x44\x92\xb7\x54\x2e\x1e\x71\x24\x57\xa4\x5a\xb7\x86\x4d\x4b\xfe\xcf\xbd\x90\xf3\xd2\x53\x4c\x67\xa7\x78\x79\x08\x2a\x88\x83\xa0\x3f\x33\xc8\xc5\xc6\xfd\x6a\x2e\x58\x99\x5b\x5b\xe3\xdc\x6b\x36\x18\x5d\xa3\x36\x23\xf1\xa7\xf0\xb3\xd4\x20\x40\x89\xa3\x1b\xa5\xa7\xab\x2a\x3c\x84\x22\x20\x7c\x56\x7e\xe6\x04\x27\xa8\xf8\x35\x80\xe3\x9a\x10\x14\x77\xb1\xd5\x9e\xe5\xd4\xb3\x73\xa6\x74\xad\xe4\x8f\x9e\x99\xaa\xef\x30\x50\xb1\x65\x24\x26\xca\x94\x9a\xd1\x98\x29\xa9\xd1\x98\x73\x2c\x96\xbc\xc4\xaa\x42\x75\xa0\x14\x25\xef\xa5\x58\x11\x2e\x11\xb6\x46\xf8\x1c\x7c\xd9\xba\xd2\x71\x9f\xd8\x04\x28\xf8\xf3\x1a\x1e\xb0\x9c\x0c\xad\xf9\xe8\x5e\x4c\x33\xb2\x9d\xa2\x50\x6d\x06\x99\xb8\xcd\x02\x8f\xbe\xc2\xf2\xd8\x25\x44\x1b\xb1\x91\x63\x5f\x85\x38\x22\x46\x23\x7d\x67\x72\x45\x5e\xb6\xcd\xa1\x84\xbf\x80\x64\xd5\xdc\x0a\xb1\x41\xe6\xd0\xea\x11\x83\x97\x5b\xa3\x94\x39\x86\xfa\x9e\xb0\xeb\xfb\x57\xb9\xaf\xba\x0e\x37\x1d\x9d\x87\x03\xe9\x4b\xea\x85\x7e\xc3\x62\x2d\x07\x89\x04\x5a\x25\xf5\xcd\xdd\x21\xfd\x77\x76\x51\xc1\xf5\xe1\xb4\x93\xf8\x81\xcb\x68\x3a\x73\x5f\x9c\x19\x06\x37\x33\x95\xa6\x3e\x8a\xfa\xf7\x30\xd4\xb1\x14\x42\xd6\xf4\x52\x53\x9c\x84\xee\xd1\x15\xc7\x13\xc4\xe5\x90\x26\x99\xd4\xba\x1f\xd8\x18\x18\xe4\x2c\x4f\xae\x8b\x93\x2d\x7a\x21\x75\x95\x78\x73\xd1\xc2\x73\x77\xa0\xa7\xb3\xcb\x15\x07\xe7\x03\xe7\x80\xa8\x28\xc3\xe6\xea\x58\xc5\xe8\xae\x08\x16\x1b\x24\xde\x54\x15\x64\x82\x43\xd4\xcf\xe9\x16\xef\x16\x46\x10\x17\xf4\x39\x85\xd4\x25\x73\x0b\xe8\x99\x64\xb0\x72\x8d\x61\x42\x3b\xa0\xa5\x6b\x92\x39\x43\xc6\x59\x3f\x17\xae\xc4\xe0\x4f\x2f\xba\x34\x5a\x73\x4d\xa0\x95\xfd\x1f\x1b\x3f\x72\xf5\x6a\x7b\xbf\xdb\xbc\xbb\x5b\x81\xc7\x67\xcf\xf6\xa6\xb4\x8b\x67\x10\xe5\x2e\xce\x29\xb3\xab\x80\x80\x0b\x99\x72\x66\x59\xf6\x57\x21\x2a\xb5\x9e\x02\x2c\x8a\x86\x7b\xcc\x39\xe8\xf0\xa2\x59\x09\x94\x84\xd4\x58\x9a\x3f\x82\x1a\x23\x43\xb8\x08\x5f\xa1\xfa\x16\xbb\x16\x62\x2e\x5b\xf8\xa2\x5d\x39\xd8\x84\x07\x85\xc2\x51\x3b\x55\x4e\xe9\xe3\x2b\x73\xb6\x0e\x8a\x9a\xe0\xef\x93\x9a\x22\xe9\x38\xdb\x7a\xb6\xd0\x22\xaa\xdc\x57\x75\xf8\xa1\x04\xf3\x45\x90\x95\x79\xbd\x1c\x40\x81\x6c\x67\x9c\xa1\x92\x79\x98\x2b\xe0\xb9\x7c\x63\xab\x73\x2b\x8b\xc4\xf5\x8a\x29\x57\xec\x0d\x2e\x58\xa9\x3d\xc9\x14\x26\x10\x4f\x68\x83\xb3\x7c\x27\x6d\xf3\x9a\x2e\x39\x65\xdf\x68\x63\x7b\x6a\x98\x89\x58\xa0\xb0\x6b\xd8\x75\xa1\x0b\x23\xfc\x3a\x37\x73\xe1\x6f\x26\x0f\xa1\x95\xce\x43\x3e\xa1\x8a\xe6\x95\x18\xca\x52\x9d\x98\x5b\x8c\x58\xd3\x62\x36\x9f\xcb\x86\x68\x1a\xfa\xb7\xa5\x7e\xa7\x8c\xc8\x42\x4a\x52\x3d\x5a\xe8\x5b\x32\xa1\x0a\xd6\x77\xb2\x59\x84\x0e\xf7\x53\x42\xd3\xa1\xa8\x9b\xb1\x4f\xb4\x75\x11\x31\x09\x58\x42\xff\x97\xdc\x79\x8a\x69\x6c\xe0\x34\xc4\x10\xea\x72\x32\xf1\xb4\x0a\xf6\x18\x78\x80\x1d\x4f\xe3\x2f\x18\xe6\xa5\xbd\xc5\x45\x13\xcd\x5d\x05\xd3\x56\x1e\xd6\x07\x02\x70\x32\xf8\x2a\x5c\x41\x42\xe2\x3d\x4a\x95\x8d\x85\x46\x12\x6b\x5d\xb0\xdc\x0b\x0c\x7e\x1e\xed\x5d\x58\x19\x05\x31\xc5\xae\xc8\xb4\x17\xb4\xa9\xe6\xb4\x69\xb9\x59\x9c\x5e\x68\x45\xca\xe9\x5c\x4e\x25\x96\x47\x47\x17\xd3\xbc\x59\x81\xb3\x6d\xd5\xa2\x0a\x67\xd6\x5d\x9b\x3e\x50\x69\x8a\xa3\xc5\x58\x26\x77\x2a\x27\x9d\xc0\xc2\x21\x7f\xe1\x66\x27\x6e\x02\x42\xaf\x3a\xb3\x40\xb7\x86\x4f\x5a\xa1\x73\xec\x34\x7c\x1e\x94\xac\x25\xb5\xbf\x2c\xb1\x58\x90\xe4\xf9\xc6\x74\xca\x22\x8b\x61\x56\x31\xc6\x7a\x71\x74\x35\x33\x7d\x3a\xf1\x74\x90\x13\xa8\xde\xbe\x9c\x3e\xff\x5f\x5a\xb3\x48\xb3\x58\xcd\x22\x60\x82\x88\x40\x5d\x9b\xb4\x7d\x0c\xef\x6f\x8d\xa7\x97\xf2\xf6\x86\xeb\xcb\xde\x84\xa6\x8c\xd2\xf6\xc0\xed\x1d\x95\x11\x56\xcd\x8d\x03\x5a\x87\x0d\x86\x45\x10\xa5\x41\xe1\x92\x78\x50\x60\x17\x61\x40\xea\x71\x6e\x89\x0e\x16\x43\xe0\x4f\x31\x43\xb8\x23\xc3\x67\xac\x0b\x88\x67\xe0\xcd\x06\xb1\x78\x10\x36\xec\x95\x4e\x7b\x8f\xb8\x0b\xf8\x97\x35\xec\x12\x01\x71\x04\x8b\x05\x8f\x6e\x0c\x23\xa7\x0f\x94\xbb\xd8\x08\x91\xe1\xe3\x42\x2d\xd0\x97\xb4\xc6\x10\x3d\xba\x82\xd1\x38\x6a\x08\xed\x93\xac\x11\xe2\x8f\xc6\x42\x8c\xe1\xf0\x70\x0a\xda\xa4\x71\x35\x4f\x9d\x62\x9b\x6a\xf1\xf7\x51\xc6\xed\x11\x15\x74\x67\x34\x97\x74\x76\xe9\xe8\xbc\xe9\x85\x9d\x58\x1b\xa9\xa1\x41\x57\x5b\xb9\x8f\xae\xc8\x4d\x87\x3c\xc8\xf3\xf9\x6c\xca\xa6\xe4\xb7\x58\x0d\x2e\x94\x80\x60\xa9\x7f\x5d\xc3\xad\x74\xdc\x3a\xa1\xa5\xa7\x3e\x0b\x4b\x76\x99\x72\x12\x64\x55\xf7\x53\x68\x60\xb9\xf3\xa6\x16\x6b\x86\x01\xf6\x22\x37\x2f\xf3\x14\xac\x9a\x1d\x16\x73\xdf\xcd\xaa\x5e\x91\xae\x28\xea\xee\xb4\x45\x2d\x9f\x96\xde\x2d\x9d\x7b\x0d\x86\x37\x7e\xab\x9b\x47\xd8\x3c\xae\xe0\xc7\x9b\xc7\xcd\x63\x32\xee\xe7\xcd\xee\xa7\xfb\x4f\x3b\xf8\x7c\xf3\xf0\x70\xb3\xdd\x6d\xee\x1e\xe1\xfe\xa1\x5c\xcb\xdf\xbf\x87\x9b\xed\x2f\xf0\x1f\x9b\xed\x6d\x05\x28\xc3\x06\xf8\x79\xb0\x74\xc9\x7c\x13\xc9\xb8\xd2\x14\x63\xd2\x39\x83\x78\x4e\x2a\x12\x4e\x4d\x70\x0c\xa6\xe2\x86\xc8\x9e\x43\xac\x69\x61\xb7\xd9\x7d\xb8\xab\x60\x7b\xbf\x7d\xbd\xd9\xbe\x7f\xd8\x6c\xff\x76\xf7\xf3\xdd\x76\x57\xc1\xcf\x77\x0f\xef\x7e\xba\xd9\xee\x6e\x7e\xdc\x7c\xd8\xec\x7e\xe1\x10\x7a\xbf\xd9\x6d\xef\x1e\xc3\xe7\x03\x37\x51\xc6\xc7\x9b\x87\xdd\xe6\xdd\xa7\x0f\x37\x0f\xf0\xf1\xd3\xc3\xc7\xfb\xc7\xbb\x50\x6d\xc3\xb6\x50\xa1\xa2\x5e\xcd\x0d\x46\x3b\xc9\x5b\x07\xde\xcc\x84\xae\x70\x19\x2e\x62\x18\xac\x19\xac\x24\x7a\xce\x17\x6e\x61\xe4\x59\x29\xc7\xdf\x8c\xb8\xc5\xbc\x34\x4c\x1b\x9d\x1b\x7b\xee\x55\x12\x5c\x4b\xc7\xc8\xee\x4c\x2d\x73\x9b\x1c\x40\x3d\xee\x59\x79\x1a\x5b\x2e\x5a\xcf\x9b\xd9\x10\x7b\xff\xb6\x86\x0f\xd9\xa4\xf4\xd2\x07\x29\xf6\x52\xf1\xf2\x7c\x43\x95\x17\xf0\x89\x62\x97\xf4\x08\x32\xb4\x01\xc5\xc3\x4e\xdf\xa1\xb1\x53\x31\x6a\x49\x9b\x2c\x6f\xac\x2f\x47\x06\x1a\x0f\x4a\x1e\x50\xd7\x78\x5d\xe5\x6d\x77\xb5\x18\xe5\xe6\xc9\xcf\x1f\xc6\xfb\x55\x20\x0a\x0e\x1a\x54\x72\xcf\x84\x8e\x95\x3b\x58\xe3\x5c\xde\x5b\xa4\x23\x3d\x88\xda\x3b\xde\x8e\x5f\xce\x8f\x80\x9e\x8b\xf2\x61\x2c\xec\x93\xcb\x94\xe4\x83\xe3\x44\x80\x5d\x2b\x7a\x71\x58\xce\xf0\xe9\xed\xf4\x49\xc0\xfc\x71\x80\x1b\xb0\x96\xf3\x90\x4d\xea\x5a\x36\x44\x6c\xc3\x2a\x81\x08\x4c\x98\xe9\x4a\xa1\x92\xd0\x84\xd0\x75\x27\xc8\x44\x68\x41\xd8\xb0\x33\xa7\x2a\x9e\x6b\xb5\x1b\x95\x3f\x6d\x74\xd9\x9a\x63\xc6\x98\x31\xfc\x46\xea\xe8\xcc\x02\x57\xcb\x89\xc1\xd5\x57\x77\xe2\x49\x2b\xba\xb6\x32\x21\x60\x0f\xc6\x34\x47\xa9\xca\xd9\xe1\x17\x70\xde\x0c\x83\x38\x60\xc5\x9c\x60\x24\xc5\x5b\x21\xd5\x68\x43\x35\x12\xaa\x1d\xf5\x4c\x6e\xb8\x08\x5e\xf8\x12\xa4\x36\x7d\x4f\xc1\x5b\xda\x23\x1c\x8c\xee\xba\xe2\x38\x24\x82\x7e\x3a\x88\x8b\x32\xf2\x30\x5d\x34\x4f\x92\x97\xa4\x6d\xfc\x7c\xc3\x39\x19\x8d\x90\x3e\x6e\x88\xe2\x43\x06\xfc\x75\x0d\x37\x35\xd5\x04\xb2\x42\x42\x5e\x3a\xf9\x66\x2e\xd4\x45\x52\x7c\xee\x88\xba\x2f\xd3\xf5\x74\x59\xf8\xd5\x75\x5b\x62\xa1\x75\x67\x4c\x98\x82\xf2\xa4\x73\xb1\x6c\xe7\x99\x2b\x08\x68\x91\xf1\xa4\x02\xc1\x1a\x0a\x5d\x63\xb8\xc4\x10\xc6\xa0\x11\xfd\x26\x8e\x3b\xec\xb5\xf4\x39\x1f\xf3\xf6\x56\x25\xdd\xc1\xec\x55\x9c\x42\x31\x6f\x79\x43\xb0\x43\xcc\x37\xac\x5a\xa4\xe3\x22\x15\xfb\x2b\xe9\x16\xeb\x1e\x5c\xc3\x4f\xe6\x48\x9d\x50\x68\x25\xb3\xc1\xd8\x9e\x85\xe0\xf9\x7e\xfc\x45\x8b\x56\xc5\x36\x24\x73\xee\xb8\x16\xe1\x21\x6e\xfc\x35\x01\xe9\x0c\xa3\xac\x2f\x33\x9d\x79\x8b\x32\x23\xfa\x3c\x29\x2a\xc2\x20\xce\x84\xa9\x67\x92\x6d\xc0\x67\x4a\xf8\x90\xef\x6c\x9b\x36\xdb\xa6\xc1\x16\x75\x13\xde\xe8\x8c\x6a\x2e\x8c\xce\x85\xed\x19\x89\x12\xb9\xce\x56\x9c\xd3\x79\xb4\x76\xde\x96\xc5\xc9\xb1\x70\x0e\x2d\xa5\x4f\x1c\xa2\x56\xe7\x73\xe3\xfd\x14\xc9\xc6\x7c\xa1\x89\x2c\x30\xdb\x34\x93\xf9\x63\x11\x8d\x05\x6d\xcc\xba\x84\x00\xbe\xdb\xde\x52\x5d\xbd\xf4\x19\x1c\xff\xfd\xe6\xe3\xc7\xbb\xed\xed\xe6\xbf\xbe\x27\x17\xf2\xb4\x60\x18\xd4\x14\x3f\x5f\x28\x3f\xdd\xa3\xbf\xb1\x2a\xc7\xbc\x4b\x02\x80\xdd\x37\xbe\x50\xc5\xcf\x28\x96\xd3\x84\x44\xab\x8d\x54\x68\x07\x45\x68\x1d\xba\xb9\x6a\xee\xe4\x5b\x89\xaa\x71\x80\xba\x56\xc6\x05\xd0\xdf\x5b\x51\x7f\x41\xef\x60\xf5\xeb\x6f\xab\xb9\x49\x51\xa2\x4e\xd5\x6e\x4a\xc1\xc4\xa8\x1a\xbb\xbe\xa2\x93\x5e\xc3\xd5\xad\xd1\xff\x94\xbf\x17\x28\x72\x34\x09\xff\x87\x6b\xe0\x6e\x9d\xdb\x54\xd7\x99\x51\x35\x44\xf1\xb3\x1e\xb1\x3b\x28\xca\x76\xb1\x9b\xa5\x5c\x71\x93\xf6\xe2\x39\x2f\x42\xb9\xa9\x0f\x0a\xac\xe1\x33\x82\x50\xce\x80\xc5\xf0\x74\x9c\x93\x26\x14\xe7\x67\x43\xdc\x38\xc7\x8c\x35\xb4\x5d\x4c\x33\x87\x54\x8c\xd3\x6a\x75\x8f\xf3\x27\x2b\xbc\x21\x4d\x9a\x38\x7a\x71\x35\x58\xc9\x83\x6b\xc2\xe0\x15\xd5\x8a\xe5\xe6\x33\x7e\xfc\x42\x6a\xa2\x70\x32\xef\xe3\xa3\xe5\xd2\xde\x35\x8f\x67\xe6\x21\x87\xb0\x75\x27\x9f\x12\x52\xce\xcb\xc4\x5f\xa7\x69\x9a\x7e\x83\x5f\x59\x6f\xd3\x9e\x6e\x59\x7f\xe3\xc7\x63\x90\x34\x45\xcf\xb4\x0c\x9f\xaa\xfc\x20\x14\xae\xe8\x81\xfc\xcd\xe5\xf5\x0f\x24\x22\xf5\x23\x04\x04\xa1\x7c\xc5\xf1\x79\xa2\xf1\x52\xc7\x36\x94\xa1\x31\x47\x54\xa6\x38\x45\xd7\x6f\xf6\x3c\x2d\x13\x8b\x91\x5d\x0a\x64\xe1\x53\xb8\xff\xd1\x27\xa7\x1f\x36\xef\xee\xb6\x8f\x77\xaf\xbf\x5b\xbf\xe5\x57\xbe\x85\xa1\xbf\xc4\x3d\xe2\x37\x67\xaf\xca\x29\xe5\xc2\x5e\x49\x3d\xe9\x16\x0f\xbc\xc4\xc0\xff\x9f\xf4\x3b\x11\x6f\x36\xdb\x23\xe2\x42\x85\x14\xe4\x4c\x6b\x5a\x59\x83\x12\xfa\x30\x8a\x03\xc2\xc1\x3c\xa1\xd5\xa7\x5f\xf6\xc5\x69\xc9\xcc\xd7\xdd\xf9\xbd\xd6\xff\x1b\x00\x00\xff\xff\xe6\x62\x45\xe3\x5c\x2c\x00\x00"),
		},
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
